
report  /eczb/ufrs16_001.
type-pools:slis.
tables:/eczb/ufrs_t_003,/eczb/ufrs_t_002,bseg.
class lcl_event_receiver definition deferred.
data: gt_fieldcat type slis_t_fieldcat_alv.
data: event_receiver type ref to lcl_event_receiver.
data: gt_fc type lvc_t_fcat,
      wa_fc type lvc_s_fcat,
      gt_container  type ref to cl_gui_custom_container,
      gt_container1  type ref to cl_gui_custom_container,
      mycontainer    type scrfname value 'CONTAINER',
      grid1          type ref to cl_gui_alv_grid,
      gs_print      type lvc_s_prnt,
      gs_layout     type lvc_s_layo,
      wa_color      type lvc_s_scol,
      it_color      type table of lvc_s_scol with header line,
      ok_code       like sy-ucomm,
      gt_exclude    type ui_functions,
      is_variant    type disvariant,
      gv_baslangic_kont,
      gt_messtab   type table of symsg with header line.
data: gt_excluding   type table of sy-ucomm.
data: begin of gt_kira_tutari occurs 0,
      sozlesme_id type /eczb/ufrs_t_003-sozlesme_id,
      monat       type /eczb/ufrs_t_003-monat,
      tutar       type /eczb/ufrs_t_003-yukumluluk_bpb,
      waers       type /eczb/ufrs_t_002-waers,
      end of gt_kira_tutari.

data : ct_fieldcat type slis_t_fieldcat_alv,
       gt_top    type slis_t_listheader with header line,
       gs_layo   type slis_layout_alv     ,
       gt_sort   type slis_t_sortinfo_alv  with header line,
       gs_glay   type lvc_s_glay.

data:gt_kalem       type table of /eczb/ufrs_t_003 with header line,
     gt_kalem_main  type table of /eczb/ufrs_t_003 with header line,
     gt_baslik      type table of /eczb/ufrs_t_002 with header line,
     gt_baslik_1a   type table of /eczb/ufrs_t_002 with header line.
data:begin of gt_a occurs 0,
    sozlesme_id     like /eczb/ufrs_t_002-sozlesme_id,
    sozlesme_ver    like /eczb/ufrs_t_002-sozlesme_ver,
    soz_durumu      like /eczb/ufrs_t_002-soz_durumu ,
    bukrs           like /eczb/ufrs_t_002-bukrs,
    gjahr           like /eczb/ufrs_t_003-gjahr,
    monat_ger       like /eczb/ufrs_t_011-monat_ger,
    txt50           like /eczb/ufrs_t_002-txt50,


*    monat           like /eczb/ufrs_t_002-monat,
    kiralama_turu   like /eczb/ufrs_t_002-kiralama_turu,
    sozlesme_no     like /eczb/ufrs_t_002-sozlesme_no,
    gec_bas         like /eczb/ufrs_t_002-gec_bas,
    gec_bit         like /eczb/ufrs_t_002-gec_bit,
    lifnr           like /eczb/ufrs_t_002-lifnr,
*    waers           like /eczb/ufrs_t_002-waers,
    gsber           like /eczb/ufrs_t_002-gsber,
    kostl           like /eczb/ufrs_t_002-kostl,
    aufnr           like /eczb/ufrs_t_002-aufnr,
    iptal_tarihi    like /eczb/ufrs_t_002-iptal_tarihi,
    iptal_id        like /eczb/ufrs_t_002-iptal_id,
    soz_durumu_t    like /eczb/ufrs_t_001-text50,
    kiraturu_t      like /eczb/ufrs_t_001-text50,
    lifnr_t         type c length 70,
    plaka           like /eczb/ufrs_t_002-plaka,
    pfkber            like /eczb/ufrs_t_002-pfkber           ,
    matbu_no          like /eczb/ufrs_t_002-matbu_no         ,
    nvr               like /eczb/ufrs_t_002-nvr              ,
    odeme_period      like /eczb/ufrs_t_002-odeme_period     ,
    odeme_zamani      like /eczb/ufrs_t_002-odeme_zamani     ,
    satin_alma_op     like /eczb/ufrs_t_002-satin_alma_op    ,
    yenileme_op       like /eczb/ufrs_t_002-yenileme_op      ,
    fesih_op          like /eczb/ufrs_t_002-fesih_op         ,
    satin_alma_op_txt like /eczb/ufrs_t_002-satin_alma_op_txt,
    yenileme_op_txt   like /eczb/ufrs_t_002-yenileme_op_txt  ,
    fesih_op_txt      like /eczb/ufrs_t_002-fesih_op_txt     ,
    vbund             like /eczb/ufrs_t_002-vbund            ,
    soz_bas_tar       like /eczb/ufrs_t_002-soz_bas_tar      ,
    sabit_faiz        like /eczb/ufrs_t_002-sabit_faiz       ,
    prctr             like /eczb/ufrs_t_002-prctr            ,
    ilk_odm_tar       like /eczb/ufrs_t_002-ilk_odm_tar      ,
    aylik_kira        like /eczb/ufrs_t_002-aylik_kira       ,
    pesin_odeme       like /eczb/ufrs_t_002-pesin_odeme      ,
    kull_hak_fark     like /eczb/ufrs_t_002-kull_hak_fark    ,
    wrbtr             like /eczb/ufrs_t_002-wrbtr    ,
    artis_donemi      like /eczb/ufrs_t_002-artis_donemi,
    artis_kodu        like /eczb/ufrs_t_002-artis_kodu,
    kursf             like /eczb/ufrs_t_002-kursf,


  "diğer
        monat_soz          like /eczb/ufrs_t_011-monat_soz,
        kira_tutari        like /eczb/ufrs_t_011-kira_tutari,
        nbd                like /eczb/ufrs_t_011-nbd,
        kira_yukum         like /eczb/ufrs_t_011-kira_yukum,
        kira_yukum_ka      like /eczb/ufrs_t_011-kira_yukum_ka,
        faiz               like /eczb/ufrs_t_011-faiz,
        veri_kull          like /eczb/ufrs_t_011-veri_kull,
        veri_kull_ka       like /eczb/ufrs_t_011-veri_kull_ka,
        amortisman         like /eczb/ufrs_t_011-amortisman,
        waers              like /eczb/ufrs_t_011-waers,
  "eur
        kira_tutari_eur    like /eczb/ufrs_t_011-kira_tutari_eur  ,
        nbd_eur            like /eczb/ufrs_t_011-nbd_eur          ,
        kira_yukum_eur     like /eczb/ufrs_t_011-kira_yukum_eur   ,
        kira_yukum_ka_eur  like /eczb/ufrs_t_011-kira_yukum_ka_eur,
        faiz_eur           like /eczb/ufrs_t_011-faiz_eur         ,
        veri_kull_eur      like /eczb/ufrs_t_011-veri_kull_eur    ,
        veri_kull_ka_eur   like /eczb/ufrs_t_011-veri_kull_ka_eur ,
        amortisman_eur     like /eczb/ufrs_t_011-amortisman_eur   ,
        waers_eur          like /eczb/ufrs_t_002-waers,
  "usd
        kira_tutari_usd    like /eczb/ufrs_t_011-kira_tutari_usd  ,
        nbd_usd            like /eczb/ufrs_t_011-nbd_usd          ,
        kira_yukum_usd     like /eczb/ufrs_t_011-kira_yukum_usd   ,
        kira_yukum_ka_usd  like /eczb/ufrs_t_011-kira_yukum_ka_usd,
        faiz_usd           like /eczb/ufrs_t_011-faiz_usd         ,
        veri_kull_usd      like /eczb/ufrs_t_011-veri_kull_usd    ,
        veri_kull_ka_usd   like /eczb/ufrs_t_011-veri_kull_ka_usd ,
        amortisman_usd     like /eczb/ufrs_t_011-amortisman_usd   ,
        waers_usd          like /eczb/ufrs_t_011-waers,
  "try
        kira_tutari_try    like /eczb/ufrs_t_011-kira_tutari_try  ,
        nbd_try            like /eczb/ufrs_t_011-nbd_try          ,
        kira_yukum_try     like /eczb/ufrs_t_011-kira_yukum_try   ,
        kira_yukum_ka_try  like /eczb/ufrs_t_011-kira_yukum_ka_try,
        faiz_try           like /eczb/ufrs_t_011-faiz_try         ,
        veri_kull_try      like /eczb/ufrs_t_011-veri_kull_try    ,
        veri_kull_ka_try   like /eczb/ufrs_t_011-veri_kull_ka_try ,
        amortisman_try     like /eczb/ufrs_t_011-amortisman_try   ,
        waers_try          like /eczb/ufrs_t_011-waers,
        kur_farki          like /eczb/ufrs_t_011-kur_farki,
        fesih_tarihi       like /eczb/ufrs_t_002-fesih_tarihi,
        selkz           like /eczb/ufrs_t_002-selkz,
        gaag           like /eczb/ufrs_t_002-gaag,
  end of gt_a.

data:begin of gt_a_bp occurs 0,
    sozlesme_id     like /eczb/ufrs_t_002-sozlesme_id,
    sozlesme_ver    like /eczb/ufrs_t_002-sozlesme_ver,
    soz_durumu      like /eczb/ufrs_t_002-soz_durumu ,
    bukrs           like /eczb/ufrs_t_002-bukrs,
    gjahr           like /eczb/ufrs_t_003-gjahr,
    monat_ger       like /eczb/ufrs_t_003-monat_ger,
    monat           like /eczb/ufrs_t_002-monat,
    kiralama_turu   like /eczb/ufrs_t_002-kiralama_turu,
    sozlesme_no     like /eczb/ufrs_t_002-sozlesme_no,
    gec_bas         like /eczb/ufrs_t_002-gec_bas,
    gec_bit         like /eczb/ufrs_t_002-gec_bit,
    lifnr           like /eczb/ufrs_t_002-lifnr,
    waers           like /eczb/ufrs_t_002-waers,
    gsber           like /eczb/ufrs_t_002-gsber,
    kostl           like /eczb/ufrs_t_002-kostl,
    aufnr           like /eczb/ufrs_t_002-aufnr,
    kul_hak_bpb     like /eczb/ufrs_t_003-kul_hak_bpb,
    yukumluluk_bpb  like /eczb/ufrs_t_003-yukumluluk_bpb,
    wrbtr           like /eczb/ufrs_t_003-yukumluluk_bpb,
    amort_bpb       like /eczb/ufrs_t_003-amort_bpb,
    faiz_bpb        like /eczb/ufrs_t_003-faiz_bpb,

    kul_hak_upb     like /eczb/ufrs_t_003-kul_hak_bpb,
    yukumluluk_upb  like /eczb/ufrs_t_003-yukumluluk_bpb,
    dmbtr           like /eczb/ufrs_t_003-yukumluluk_bpb,
    amort_upb       like /eczb/ufrs_t_003-amort_bpb,
    faiz_upb        like /eczb/ufrs_t_003-faiz_bpb,
    iptal_tarihi    like /eczb/ufrs_t_002-iptal_tarihi,
    iptal_id        like /eczb/ufrs_t_002-iptal_id,
    waers_t         like /eczb/ufrs_t_002-waers,
    soz_durumu_t    like /eczb/ufrs_t_001-text50,
    kiraturu_t      like /eczb/ufrs_t_001-text50,
    lifnr_t         type c length 70,

  end of gt_a_bp.

data:gt_a_main like table of gt_a with header line.
data:begin of gt_upload occurs 0,
    sozlesme_id     like /eczb/ufrs_t_002-sozlesme_id,
    sozlesme_ver    like /eczb/ufrs_t_002-sozlesme_ver,
    bukrs           like /eczb/ufrs_t_002-bukrs,
    sozlesme_no     like /eczb/ufrs_t_002-sozlesme_no,
    gec_bas         like /eczb/ufrs_t_002-gec_bas,
    gec_bit         like /eczb/ufrs_t_002-gec_bit,
    kiralama_turu   like /eczb/ufrs_t_002-kiralama_turu,
    soz_durumu      like /eczb/ufrs_t_002-soz_durumu ,
    lifnr           like /eczb/ufrs_t_002-lifnr,
    waers           like /eczb/ufrs_t_002-waers,
    tutar_bpb       like /eczb/ufrs_t_002-wrbtr,
    tutar_upb       like /eczb/ufrs_t_002-dmbtr,
    kursf           like /eczb/ufrs_t_002-kursf,
    gsber           like /eczb/ufrs_t_002-gsber,
    kostl           like /eczb/ufrs_t_002-kostl,
    aufnr           like /eczb/ufrs_t_002-aufnr,
    faiz_orani      like /eczb/ufrs_t_002-faiz_orani,
    veri_kul        like bseg-hkont,
    kira_yuk_k      like bseg-hkont,
    kira_yuk_u      like bseg-hkont,
    amort_hes       like bseg-hkont,
    faiz_hes        like bseg-hkont,
    amort_gid       like bseg-hkont,
    faiz_gid        like bseg-hkont,
  end of gt_upload.

data: begin of gt_kayit_gos occurs 0,
      mark,
      sozlesme_id  like /eczb/ufrs_t_002-sozlesme_id,
      sozlesme_ver like /eczb/ufrs_t_002-sozlesme_ver,
      hkont like bseg-hkont,
      txt50 like skat-txt50,
      shkzg like bseg-shkzg,
      kostl like bseg-kostl,
      aufnr like bseg-aufnr,
      gsber like bseg-gsber,
      tutar like bseg-dmbtr,
      waers like bkpf-waers,
      belnr like bkpf-belnr,
      budat like bkpf-budat,
  end of gt_kayit_gos.

data: begin of gt_kayit_gos_bp occurs 0,
      mark,
      sozlesme_id like /eczb/ufrs_t_002-sozlesme_id,
      hkont       like bseg-hkont,
      txt50       like skat-txt50,
      shkzg       like bseg-shkzg,
      kostl       like bseg-kostl,
      aufnr       like bseg-aufnr,
      tutar       like bseg-dmbtr,
      waers       like bkpf-waers,
      tutar_up    like bseg-dmbtr,
      waers_t     like bkpf-waers,
  end of gt_kayit_gos_bp.
define makro_messtab.
  clear:gt_messtab.
  gt_messtab-msgty = &1.
  gt_messtab-msgid = &2.
  gt_messtab-msgno = &3.
  gt_messtab-msgv1 = &4.
  gt_messtab-msgv2 = &5.
  gt_messtab-msgv3 = &6.
  gt_messtab-msgv4 = &7.
  append gt_messtab.clear gt_messtab.
end-of-definition.
data:gv_aut_cont.
data: gt_upload_hkont type table of /eczb/ufrs_t_006 with header line,
      gt_001 type table of /eczb/ufrs_t_001 with header line.
selection-screen begin of block b0 with frame title text-000.
parameters:      p_file like rlgrap-filename no-display.

parameters:     p_bukrs like /eczb/ufrs_t_002-bukrs obligatory.
select-options: s_gjahr for /eczb/ufrs_t_003-gjahr  obligatory,
                s_monat for /eczb/ufrs_t_003-monat  obligatory.
selection-screen end of block b0.


selection-screen begin of block b1 with frame title text-000.
select-options:s_gecba for /eczb/ufrs_t_002-gec_bas,
               s_gecbt for /eczb/ufrs_t_002-gec_bit,
               s_aufnr for bseg-aufnr,
               s_sozdu for /eczb/ufrs_t_002-soz_durumu default '01',
               s_sozid for /eczb/ufrs_t_002-sozlesme_id
                            matchcode object /eczb/ufrs16_sh_soz_id.

parameters:    p_sozno like /eczb/ufrs_t_002-sozlesme_no
                            matchcode object /eczb/ufrs16_sh_soz_no,
*               p_sozid like /eczb/ufrs_t_002-sozlesme_id
*                            matchcode object /eczb/ufrs16_sh_soz_id,
               p_sozve like /eczb/ufrs_t_002-sozlesme_ver
                            matchcode object /eczb/ufrs16_sh_soz_ver,
               p_kirtu like /eczb/ufrs_t_002-kiralama_turu
                            matchcode object
/eczb/ufrs16_sh_kiralama_turu,
               p_lifnr like bseg-lifnr,

               p_hkont like bsis-hkont. "NO-DISPLAY.
*selection-screen uline.
*parameters: rd_bpb radiobutton group g1,
*            rd_upb radiobutton group g1 default 'X',
*            p_1yil as checkbox.
selection-screen uline.
parameters:     rd_rapor radiobutton group rd1,
                rd_belnr radiobutton group rd1,
                rd_stblg radiobutton group rd1.
selection-screen end of block b1.

*at selection-screen on value-request for p_file.
*  perform get_file_name using p_file.

initialization.
  perform check_auth_load.


at selection-screen output.
  loop at screen.
    if screen-name eq 'S_SOZDU-HIGH'.
      screen-active = 0.
      modify screen.
    endif.
  endloop.

  perform check_auth_bukrs.

start-of-selection.

  perform init_auth.
  check gv_aut_cont is initial.
*  if p_file is not initial.
**    perform upload_excel.
**    perform get_data.
*  else.
  perform get_data_ss.
*  endif.


  if not gt_a[] is initial.
    call screen 100.
  else.
    message text-001 type 'S' display like 'E'.
*    001  Listelenecek veri bulunamadi!
  endif.
*  if rd_upb = 'X'.
*    if not gt_a[] is initial.
*      call screen 100.
*    else.
*      message text-001 type 'S' display like 'E'.
**    001  Listelenecek veri bulunamadi!
*    endif.
*  elseif rd_bpb = 'X'.
*    if not gt_a_bp[] is initial.
*      call screen 100.
*    else.
*      message text-001 type 'S' display like 'E'.
**    001  Listelenecek veri bulunamadi!
*    endif.
*  endif.

*----------------------------------------------------------------------*
*       CLASS lcl_event_receiver DEFINITION
*----------------------------------------------------------------------*
*
*----------------------------------------------------------------------*
class lcl_event_receiver definition.
  public section.
    methods: data_changed
               for event data_changed of cl_gui_alv_grid
               importing er_data_changed
                         e_onf4
                         e_ucomm.

endclass.                    "lcl_event_receiver DEFINITION

*&---------------------------------------------------------------------*
*&       Class (Implementation)  lcl_event_receiver
*&---------------------------------------------------------------------*
class lcl_event_receiver implementation.
  method data_changed.
    perform data_changed using er_data_changed e_onf4 e_ucomm.
  endmethod.                    "data_changed

endclass.               "lcl_event_receiver
*&---------------------------------------------------------------------*
*&      Form  DATA_CHANGED
*&---------------------------------------------------------------------*
form data_changed  using   p_er_data_changed type ref to
cl_alv_changed_data_protocol p_onf4 type c e_ucomm type sy-ucomm.


  data:   l_value     type lvc_value,
          ls_mod_cell type lvc_s_modi.
  field-symbols: <wa> like line of gt_a.
  loop at p_er_data_changed->mt_mod_cells into ls_mod_cell.
    call method p_er_data_changed->get_cell_value
      exporting
        i_row_id    = ls_mod_cell-row_id
        i_fieldname = ls_mod_cell-fieldname
      importing
        e_value     = l_value.

*    case ls_mod_cell-fieldname.
*
*
*    endcase.
  endloop.

endform.                    " DATA_CHANGED
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
form get_data .
  data:
        lv_faiz_or        type p length 11 decimals 9,
        lv_int            type i,
        lv_int_main       type i,
        lv_count          type i,
        lv_kur_date       type tcurr-gdatu,
        lv_tkur           type tcurr-ukurs,
        lv_amt_or         type p length 13 decimals 6,
        lv_tarih          type /eczb/ufrs_t_002-gec_bit,
        lv_toplam_nbd     type /eczb/ufrs_t_003-amort_bpb,
        lv_toplam_vkh     type /eczb/ufrs_t_003-amort_bpb,
        lv_amort          type /eczb/ufrs_t_003-amort_bpb,
        lv_monat          type /eczb/ufrs_t_003-monat,
        lv_toplam_nbd_dov type /eczb/ufrs_t_003-amort_bpb,
        lv_toplam_vkh_dov type /eczb/ufrs_t_003-amort_bpb,
        lv_amort_dov      type /eczb/ufrs_t_003-amort_bpb,
        lv_monat_dov      type /eczb/ufrs_t_003-monat,
        lv_bitis          type sy-datum,
        lv_con_date       type c length 8.

  data: begin of lt_hesaplama occurs  0,
        gjahr       type /eczb/ufrs_t_003-gjahr,
        monat_ger   type /eczb/ufrs_t_003-monat,
        monat       type /eczb/ufrs_t_003-monat,
        kira_tutari type /eczb/ufrs_t_003-amort_bpb,
        nbd         type /eczb/ufrs_t_003-amort_bpb,
        faiz        type /eczb/ufrs_t_003-amort_bpb,
        amortisman  type /eczb/ufrs_t_003-amort_bpb,
        faiz2       type /eczb/ufrs_t_003-amort_bpb,
        kira_yukum  type /eczb/ufrs_t_003-amort_bpb,
        veri_kull   type /eczb/ufrs_t_003-amort_bpb,
        end of lt_hesaplama.

  data: ls_hesaplama     like lt_hesaplama,
        lt_hesaplama_dov like table of lt_hesaplama with header line,
        ls_hesaplama_dov like lt_hesaplama.
  field-symbols:<wa_dov> like line of  lt_hesaplama_dov.
  clear:gt_baslik[],gt_baslik.

  loop at gt_upload.
    move-corresponding gt_upload to gt_baslik.
    gt_baslik-wrbtr = gt_upload-tutar_bpb.
    gt_baslik-dmbtr = gt_upload-tutar_upb.
    gt_baslik-uname = sy-uname.
    gt_baslik-erdat = sy-datum.
    gt_baslik-erzet = sy-uzeit.
    gt_baslik-uname_chg = sy-uname.
    gt_baslik-erdat_chg = sy-datum.
    gt_baslik-erzet_chg = sy-uzeit.
    append gt_baslik.clear gt_baslik.
    clear:lv_tarih,lv_count,lv_toplam_nbd,lv_amort,lv_toplam_nbd_dov,
    lt_hesaplama[],lt_hesaplama,lt_hesaplama_dov[],lt_hesaplama_dov,
    gv_baslangic_kont,lv_amt_or,lv_tkur,lv_kur_date,lv_con_date,
    gt_kira_tutari[],gt_kira_tutari.

    lv_faiz_or = gt_upload-faiz_orani / 12.

    call function 'MONTHS_BETWEEN_TWO_DATES'
      exporting
        i_datum_bis = gt_upload-gec_bit
        i_datum_von = gt_upload-gec_bas
      importing
        e_monate    = lv_int.

    lv_int = lv_int + 1.
    lv_int_main = lv_int + 1.

    do lv_int times.
      lv_count = lv_count + 1.

      if lv_tarih is initial.
        lv_tarih = gt_upload-gec_bas.

      else.
        call function 'RP_CALC_DATE_IN_INTERVAL'
          exporting
            date      = lv_tarih
            days      = 0
            months    = 1
            signum    = '+'
            years     = 0
          importing
            calc_date = lv_tarih.
      endif.
      lt_hesaplama-monat_ger   = lv_tarih+4(2).
      lt_hesaplama-gjahr       = lv_tarih(4).
      lt_hesaplama-monat       = lv_count.
      if gt_upload-waers ne 'TRY'.
        if gt_upload-tutar_upb is initial.
          if gt_upload-kursf is initial.
            lv_con_date(2)   = sy-datum+6(2).
            lv_con_date+2(2) = sy-datum+4(2).
            lv_con_date+4(4) = sy-datum(4).

            call function 'CONVERSION_EXIT_INVDT_INPUT'
              exporting
                input  = lv_con_date
              importing
                output = lv_kur_date.
            select single ukurs from tcurr into lv_tkur
              where kurst = 'M'
                and fcurr = gt_upload-waers
                and tcurr = 'TRY'
                and gdatu = lv_kur_date.
            lt_hesaplama-kira_tutari = lv_tkur * gt_upload-tutar_bpb .
          else.

            lt_hesaplama-kira_tutari = gt_upload-kursf *
                                       gt_upload-tutar_bpb .
          endif.
        else.
          lt_hesaplama-kira_tutari = gt_upload-tutar_upb.
        endif.
      else.
        lt_hesaplama-kira_tutari = gt_upload-tutar_upb.
      endif.

      if lv_count = 1 and gt_upload-gec_bas+6(2) ne '01'.
        call function 'RP_LAST_DAY_OF_MONTHS'
          exporting
            day_in            = gt_upload-gec_bas
          importing
            last_day_of_month = lv_bitis.

        if lv_bitis+6(2) is not initial.
          lv_amt_or = gt_upload-gec_bas+6(2) / lv_bitis+6(2).
          lt_hesaplama-kira_tutari =
          ( gt_upload-gec_bas+6(2) / lv_bitis+6(2) ) *
                                               lt_hesaplama-kira_tutari.

          clear:gt_kira_tutari.
          gt_kira_tutari-sozlesme_id = gt_upload-sozlesme_id.
          gt_kira_tutari-monat       = lt_hesaplama-monat.
          gt_kira_tutari-tutar       = lt_hesaplama-kira_tutari.
          gt_kira_tutari-waers       = 'TRY'.
          append gt_kira_tutari.clear gt_kira_tutari.
        endif.

        gv_baslangic_kont = 'X'.

      endif.

      if lv_count = lv_int and gv_baslangic_kont = 'X'.

        call function 'RP_LAST_DAY_OF_MONTHS'
          exporting
            day_in            = gt_upload-gec_bit
          importing
            last_day_of_month = lv_bitis.

        if lv_bitis+6(2) is not initial.
          lt_hesaplama-kira_tutari =
          ( gt_upload-gec_bit+6(2) / lv_bitis+6(2) ) *
                                               lt_hesaplama-kira_tutari.

          clear:gt_kira_tutari.
          gt_kira_tutari-sozlesme_id = gt_upload-sozlesme_id.
          gt_kira_tutari-monat       = lt_hesaplama-monat.
          gt_kira_tutari-tutar       = lt_hesaplama-kira_tutari.
          gt_kira_tutari-waers       = 'TRY'.
          append gt_kira_tutari.clear gt_kira_tutari.
        endif.

      endif.

      lt_hesaplama-nbd = lt_hesaplama-kira_tutari /
                       ( ( 1 + lv_faiz_or ) ** lv_count ).

      lt_hesaplama-faiz = lt_hesaplama-kira_tutari - lt_hesaplama-nbd.
      add lt_hesaplama-nbd to lv_toplam_nbd.

      if gt_upload-waers ne 'TRY'.

        lt_hesaplama_dov-monat_ger   = lv_tarih+4(2).
        lt_hesaplama_dov-gjahr       = lv_tarih(4).
        lt_hesaplama_dov-monat = lv_count.
        lt_hesaplama_dov-kira_tutari = gt_upload-tutar_bpb.

        if lv_count = 1 and gt_upload-gec_bas+6(2) ne '01'.
          call function 'RP_LAST_DAY_OF_MONTHS'
            exporting
              day_in            = gt_upload-gec_bas
            importing
              last_day_of_month = lv_bitis.

          if lv_bitis+6(2) is not initial.
            lt_hesaplama_dov-kira_tutari =
            ( gt_upload-gec_bas+6(2) / lv_bitis+6(2) ) *
                                           lt_hesaplama_dov-kira_tutari.
            clear:gt_kira_tutari.
            gt_kira_tutari-sozlesme_id = gt_upload-sozlesme_id.
            gt_kira_tutari-monat       = lt_hesaplama-monat.
            gt_kira_tutari-tutar       = lt_hesaplama-kira_tutari.
            gt_kira_tutari-waers       = gt_upload-waers.
            append gt_kira_tutari.clear gt_kira_tutari.
          endif.

          gv_baslangic_kont = 'X'.

        endif.

        if lv_count = lv_int and gv_baslangic_kont = 'X'.

          call function 'RP_LAST_DAY_OF_MONTHS'
            exporting
              day_in            = gt_upload-gec_bit
            importing
              last_day_of_month = lv_bitis.

          if lv_bitis+6(2) is not initial.
            lt_hesaplama_dov-kira_tutari =
            ( gt_upload-gec_bit+6(2) / lv_bitis+6(2) ) *
                                           lt_hesaplama_dov-kira_tutari.
            clear:gt_kira_tutari.
            gt_kira_tutari-sozlesme_id = gt_upload-sozlesme_id.
            gt_kira_tutari-monat       = lt_hesaplama-monat.
            gt_kira_tutari-tutar       = lt_hesaplama-kira_tutari.
            gt_kira_tutari-waers       = gt_upload-waers.
            append gt_kira_tutari.clear gt_kira_tutari.
          endif.

        endif.

        lt_hesaplama_dov-nbd = lt_hesaplama_dov-kira_tutari /
                         ( ( 1 + lv_faiz_or ) ** lv_count ).
        lt_hesaplama_dov-faiz = lt_hesaplama_dov-kira_tutari -
                                                 lt_hesaplama_dov-nbd.

        add lt_hesaplama_dov-nbd to lv_toplam_nbd_dov.
        append lt_hesaplama_dov. clear lt_hesaplama_dov.

      endif.

      append lt_hesaplama.clear lt_hesaplama.

    enddo.

    clear:lt_hesaplama,lv_monat,lv_count.

    "0.dönemin eklenmesi
    lt_hesaplama-monat = 0.
    read table lt_hesaplama into ls_hesaplama index 1.
    if sy-subrc eq 0.
      lt_hesaplama-monat_ger = ls_hesaplama-monat_ger.
      lt_hesaplama-gjahr     = ls_hesaplama-gjahr.
    endif.
    lt_hesaplama-kira_yukum = lv_toplam_nbd.
    lt_hesaplama-veri_kull  = lv_toplam_nbd.
    append lt_hesaplama. clear lt_hesaplama.

    if gt_upload-gec_bas+6(2) ne '01'.
      lv_int = lv_int - 1.
    endif.

    if lv_int is not initial.
      lv_amort = lv_toplam_nbd / lv_int.
    endif.

    if gt_upload-waers ne 'TRY'.
      "0.dönemin eklenmesi
      lt_hesaplama_dov-monat = 0.
      read table lt_hesaplama_dov into ls_hesaplama_dov index 1.
      if sy-subrc eq 0.
        lt_hesaplama_dov-monat_ger = ls_hesaplama_dov-monat_ger.
        lt_hesaplama_dov-gjahr     = ls_hesaplama_dov-gjahr.
      endif.
      lt_hesaplama_dov-kira_yukum = lv_toplam_nbd_dov.
      lt_hesaplama_dov-veri_kull  = lv_toplam_nbd_dov.
      append lt_hesaplama_dov. clear lt_hesaplama_dov.

      lv_amort_dov      = lv_toplam_nbd_dov / lv_int.
    endif.
    if gt_upload-gec_bas+6(2) ne '01'.
      lv_int = lv_int + 2.
    else.
      lv_int = lv_int + 1.
    endif.
    sort lt_hesaplama     by monat.
    sort lt_hesaplama_dov by monat.
    loop at lt_hesaplama.
      lv_count = lv_count + 1.
      loop at  lt_hesaplama_dov where monat = lt_hesaplama-monat.

        lv_monat = lt_hesaplama-monat.

        if lt_hesaplama-monat ne 0.
          if lv_count = 2 and lv_amt_or is not initial.
            lt_hesaplama-amortisman = lv_amort * lv_amt_or.
          elseif lv_count = lv_int and lv_amt_or is not initial.
            lt_hesaplama-amortisman = lv_amort * lv_amt_or.
          else.
            lt_hesaplama-amortisman = lv_amort.
          endif.

          read table lt_hesaplama into ls_hesaplama index lv_int_main.
          if sy-subrc eq 0.
            lt_hesaplama-faiz2 = ls_hesaplama-faiz.
          endif.

          lv_monat = lv_monat - 1.

          read table lt_hesaplama into ls_hesaplama with key monat =
          lv_monat.
          if sy-subrc eq 0.
            lt_hesaplama-kira_yukum =
            ( ls_hesaplama-kira_yukum + lt_hesaplama-faiz2 ) -
                                             lt_hesaplama-kira_tutari.
            lt_hesaplama-veri_kull =
            ( ls_hesaplama-veri_kull - lt_hesaplama-amortisman ).
          endif.

          "dövizliler için hesaplama
          if lv_count = 2 and lv_amt_or is not initial.
            lt_hesaplama_dov-amortisman = lv_amort_dov * lv_amt_or.
          elseif lv_count = lv_int and lv_amt_or is not initial.
            lt_hesaplama_dov-amortisman = lv_amort_dov * lv_amt_or.
          else.
            lt_hesaplama_dov-amortisman = lv_amort_dov.
          endif.

          read table lt_hesaplama_dov
                              into ls_hesaplama_dov index lv_int_main.
          if sy-subrc eq 0.
            lt_hesaplama_dov-faiz2 = ls_hesaplama_dov-faiz.
          endif.

          read table lt_hesaplama_dov into
                           ls_hesaplama_dov with key monat = lv_monat.
          if sy-subrc eq 0.
            lt_hesaplama_dov-kira_yukum =
           ( ls_hesaplama_dov-kira_yukum + lt_hesaplama_dov-faiz2 ) -
                                         lt_hesaplama_dov-kira_tutari.
            lt_hesaplama_dov-veri_kull =
        ( ls_hesaplama_dov-veri_kull - lt_hesaplama_dov-amortisman ).
          endif.

          gt_kalem-sozlesme_id = gt_upload-sozlesme_id.
          gt_kalem-bukrs       = gt_upload-bukrs.
          gt_kalem-gjahr       = lt_hesaplama-gjahr.
          gt_kalem-monat       = lt_hesaplama-monat.
          gt_kalem-monat_ger   = lt_hesaplama-monat_ger.

          sort gt_kira_tutari by waers descending.
          loop at gt_kira_tutari where
                                 sozlesme_id = gt_kalem-sozlesme_id and
                                 monat       = gt_kalem-monat.
            if gt_kira_tutari-waers = 'TRY'.
              gt_kalem-dmbtr = gt_kira_tutari-tutar.
              gt_kalem-wrbtr = gt_kira_tutari-tutar.
            else.
              gt_kalem-wrbtr = gt_kira_tutari-tutar.
            endif.
          endloop.
          if sy-subrc ne 0.
*            if gt_upload-waers = 'TRY'.
*              gt_kalem-dmbtr = gt_upload-tutar_upb.
*            else.
*              if gt_upload-tutar_bpb is not initial.
*                gt_kalem-wrbtr = gt_upload-tutar_bpb.
*              else.
*                if gt_upload-kursf is not initial.
*                  gt_kalem-wrbtr = gt_upload-tutar_upb *
*
*            gt_upload-kursf.
*                else.
*                  gt_kalem-wrbtr = gt_upload-tutar_upb * lv_tkur.
*                endif.
*              endif.
*            endif.
            gt_kalem-dmbtr = gt_upload-tutar_upb.
            gt_kalem-wrbtr = gt_upload-tutar_bpb.
          endif.

          gt_kalem-kul_hak_bpb    = lt_hesaplama_dov-veri_kull.
          gt_kalem-yukumluluk_bpb = lt_hesaplama_dov-kira_yukum.
          gt_kalem-amort_bpb      = lt_hesaplama_dov-amortisman.
          gt_kalem-faiz_bpb       = lt_hesaplama_dov-faiz2.


          gt_kalem-kul_hak_upb    = lt_hesaplama-veri_kull.
          gt_kalem-yukumluluk_upb = lt_hesaplama-kira_yukum.
          gt_kalem-amort_upb      = lt_hesaplama-amortisman.
          gt_kalem-faiz_upb       = lt_hesaplama-faiz2.
          if lv_count = lv_int.
            add gt_kalem-kul_hak_bpb to gt_kalem-faiz_bpb.
            gt_kalem-kul_hak_bpb = 0.

            add gt_kalem-kul_hak_upb to gt_kalem-faiz_upb.
            gt_kalem-kul_hak_upb = 0.
          endif.
          lv_int_main = lv_int_main - 1.

          append gt_kalem. clear: gt_kalem.

          modify lt_hesaplama.
          modify lt_hesaplama_dov.
        else.
          clear gt_kalem.
          gt_kalem-sozlesme_id    = gt_upload-sozlesme_id.
          gt_kalem-bukrs          = gt_upload-bukrs.
          gt_kalem-gjahr          = lt_hesaplama-gjahr.
          gt_kalem-kul_hak_upb    = lv_toplam_nbd.
          gt_kalem-yukumluluk_upb = lv_toplam_nbd.
          gt_kalem-kul_hak_bpb    = lv_toplam_nbd_dov.
          gt_kalem-yukumluluk_bpb = lv_toplam_nbd_dov.
          gt_kalem-monat          = lt_hesaplama-monat.
          gt_kalem-monat_ger      = lt_hesaplama-monat_ger.
          append gt_kalem. clear: gt_kalem.
        endif.
      endloop.
      if sy-subrc ne 0.
        lv_monat = lt_hesaplama-monat.

        if lt_hesaplama-monat ne 0.
          if lv_count = 2 and lv_amt_or is not initial.
            lt_hesaplama-amortisman = lv_amort * lv_amt_or.
          elseif lv_count = lv_int and lv_amt_or is not initial.
            lt_hesaplama-amortisman = lv_amort * lv_amt_or.
          else.
            lt_hesaplama-amortisman = lv_amort.
          endif.
          read table lt_hesaplama into ls_hesaplama index lv_int_main.
          if sy-subrc eq 0.
            lt_hesaplama-faiz2 = ls_hesaplama-faiz.
          endif.

          lv_monat = lv_monat - 1.

          read table lt_hesaplama into ls_hesaplama with key monat =
          lv_monat.
          if sy-subrc eq 0.
            lt_hesaplama-kira_yukum =
            ( ls_hesaplama-kira_yukum + lt_hesaplama-faiz2 ) -
                                             lt_hesaplama-kira_tutari.
            lt_hesaplama-veri_kull =
            ( ls_hesaplama-veri_kull - lt_hesaplama-amortisman ).
          endif.

          gt_kalem-sozlesme_id = gt_upload-sozlesme_id.
          gt_kalem-bukrs       = gt_upload-bukrs.
          gt_kalem-gjahr       = lt_hesaplama-gjahr.
          gt_kalem-monat       = lt_hesaplama-monat.
          gt_kalem-monat_ger   = lt_hesaplama-monat_ger.

          sort gt_kira_tutari by waers descending.
          loop at gt_kira_tutari where
                                 sozlesme_id = gt_kalem-sozlesme_id and
                                 monat       = gt_kalem-monat.
            if gt_kira_tutari-waers = 'TRY'.
              gt_kalem-dmbtr = gt_kira_tutari-tutar.
              gt_kalem-wrbtr = gt_kira_tutari-tutar.
            else.
              gt_kalem-wrbtr = gt_kira_tutari-tutar.
            endif.
          endloop.
          if sy-subrc ne 0.
*            if gt_upload-waers = 'TRY'.
*              gt_kalem-dmbtr = gt_upload-tutar_upb.
*            else.
*              if gt_upload-tutar_bpb is not initial.
*                gt_kalem-wrbtr = gt_upload-tutar_bpb.
*              else.
*                if gt_upload-kursf is not initial.
*                  gt_kalem-wrbtr = gt_upload-tutar_upb *
*
*gt_upload-kursf.
*                else.
*                  gt_kalem-wrbtr = gt_upload-tutar_upb * lv_tkur.
*                endif.
*              endif.
*            endif.
            gt_kalem-dmbtr = gt_upload-tutar_upb.
            gt_kalem-wrbtr = gt_upload-tutar_bpb.
          endif.

          gt_kalem-kul_hak_bpb    = lt_hesaplama-veri_kull.
          gt_kalem-yukumluluk_bpb = lt_hesaplama-kira_yukum.
          gt_kalem-amort_bpb      = lt_hesaplama-amortisman.
          gt_kalem-faiz_bpb       = lt_hesaplama-faiz2.

          gt_kalem-kul_hak_upb    = lt_hesaplama-veri_kull.
          gt_kalem-yukumluluk_upb = lt_hesaplama-kira_yukum.
          gt_kalem-amort_upb      = lt_hesaplama-amortisman.
          gt_kalem-faiz_upb       = lt_hesaplama-faiz2.
          if lv_count = lv_int.
            add gt_kalem-kul_hak_bpb to gt_kalem-faiz_bpb.
            gt_kalem-kul_hak_bpb = 0.

            add gt_kalem-kul_hak_upb to gt_kalem-faiz_upb.
            gt_kalem-kul_hak_upb = 0.
          endif.
          lv_int_main = lv_int_main - 1.
          append gt_kalem. clear: gt_kalem.

          modify lt_hesaplama.
        else.
          clear gt_kalem.
          gt_kalem-sozlesme_id    = gt_upload-sozlesme_id.
          gt_kalem-bukrs          = gt_upload-bukrs.
          gt_kalem-gjahr          = lt_hesaplama-gjahr.
          gt_kalem-kul_hak_upb    = lv_toplam_nbd.
          gt_kalem-yukumluluk_upb = lv_toplam_nbd.
          gt_kalem-kul_hak_bpb    = lv_toplam_nbd.
          gt_kalem-yukumluluk_bpb = lv_toplam_nbd.
          gt_kalem-monat          = lt_hesaplama-monat.
          gt_kalem-monat_ger      = lt_hesaplama-monat_ger.
          append gt_kalem. clear: gt_kalem.
        endif.
      endif.
    endloop.
  endloop.

  gt_kalem_main[] = gt_kalem[].
  perform get_alv_data.

endform.                    " GET_DATA
*&---------------------------------------------------------------------*
*&      Module  STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
module status_0100 output.
  data: linne1 type i.
  describe table gt_a lines linne1.
  set pf-status 'GUI'.
  set titlebar  'GUI_TITLE' with linne1.

  if gt_container is initial.
    perform create_and_init_alv.

*    if rd_bpb = 'X'.
*      perform create_and_init_alv_bp.
*    elseif rd_upb = 'X'.
*      perform create_and_init_alv.
*    endif.
  endif.
endmodule.                 " STATUS_0100  OUTPUT
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
module user_command_0100 input.
  data: lv_kontrol.

  ok_code = sy-ucomm.

  call method grid1->check_changed_data( ).
  clear:lv_kontrol,gt_messtab[],gt_messtab.
  case ok_code.
    when '&F03' or '&F15'.
      leave to screen 0.
    when '&F12'.
      leave to screen 0.
    when 'PDF'.
*      perform update_pdf.
    when 'SAVE'.
*      perform update_table.
    when 'SIMU'.

      perform check_auth changing lv_kontrol.
      check lv_kontrol is initial.
      if rd_rapor is initial.
        case s_sozdu-low.
          when '04'.
            "iptal kaydı
            perform iptal_kaydı.
            clear: ok_code.
            exit.
          when '05'.
            perform simulasyon using '05'.
            if gt_kayit_gos[] is not initial.
              perform display_alv.
            endif.
          when others.
            delete gt_a where soz_durumu ne '01'.
            perform simulasyon using ''.
            if gt_kayit_gos[] is not initial.
              perform display_alv.
            endif.
        endcase.

      else.
        message text-012 type 'S' display like 'E'.
      endif.
  endcase.
  clear: ok_code.

endmodule.                 " USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*&      Form  CREATE_AND_INIT_ALV
*&---------------------------------------------------------------------*
form create_and_init_alv .
  data: it_lvcfcat type lvc_t_fcat.
  data: ll_fc like line of gt_fc.

  create object gt_container
    exporting
      container_name              = mycontainer
    exceptions
      cntl_error                  = 1
      cntl_system_error           = 2
      create_error                = 3
      lifetime_error              = 4
      lifetime_dynpro_dynpro_link = 5.

  create object grid1
    exporting
      i_parent = gt_container.

  gs_layout-zebra      = 'X'.
  gs_layout-sel_mode   = 'D'.
  gs_layout-cwidth_opt = 'X'.

  call function 'REUSE_ALV_FIELDCATALOG_MERGE'
    exporting
      i_program_name     = sy-repid
      i_internal_tabname = 'GT_A'
      i_inclname         = sy-repid
    changing
      ct_fieldcat        = gt_fieldcat.

  call function 'LVC_TRANSFER_FROM_SLIS'
    exporting
      it_fieldcat_alv = gt_fieldcat
    importing
      et_fieldcat_lvc = gt_fc
    tables
      it_data         = gt_a.

  define set_text.
    wa_fc-scrtext_s = wa_fc-scrtext_m =
    wa_fc-seltext   = wa_fc-reptext   =
    wa_fc-scrtext_l = &1.
  end-of-definition.

  loop at gt_fc into wa_fc.
    case wa_fc-fieldname.
      when 'KUR_FARKI'.
        set_text 'Kur Farkı'.
      when 'IPTAL_TARIHI'.
        set_text 'İptal Tarihi'.
      when 'SELKZ'.
        wa_fc-no_out = 'X'.
      when 'MONAT_GER'.
        wa_fc-lzero = 'X'.
      when 'LIFNR_T'.
        set_text 'Kiralama Firmasi metni'.
        wa_fc-col_pos = 12.
      when 'SOZLESME_NO'.
        set_text 'Sözlesme No'.
      when 'GJAHR'.
        set_text 'Mali yil'.
      when 'SOZLESME_ID'.
        set_text 'Sözlesme ID'.
      when 'GSBER'.
        set_text 'Is Alani'.
      when 'BUKRS'.
        set_text 'Sirket Kodu'.
      when 'SOZLESME_VER'.
        set_text 'Sözlesme Versiyonu'.
      when 'SOZ_DURUMU'       .
        set_text 'Sözlesme Durumu'.
      when 'KIRATURU_T'       .
        set_text 'Kiramalama türü metin'.
        wa_fc-col_pos = 8.
      when 'SOZ_DURUMU_T'       .
        set_text 'Sözlesme Durumu metin'.
        wa_fc-col_pos = 3.
      when 'MONAT'       .
        wa_fc-lzero = 'X'.
        set_text 'Sözlesme Dönemi'.
      when 'GEC_BAS'       .
        set_text 'Geçerlilik Başlangiç Tarihi'.
      when 'GEC_BIT'       .
        set_text 'Geçerlilik Bitiş Tarihi'.
      when 'LIFNR'         .
        set_text 'Kiralama Firmasi'.
      when 'WAERS'         .
        set_text 'Sözlesme Para Birimi'.
      when 'MONAT_GER'.
        wa_fc-lzero = 'X'.
      when 'MONAT_SOZ'.
        wa_fc-lzero = 'X'.
        set_text 'Sözleşme Dönemi'.
      when 'KIRA_TUTARI'.
        set_text 'Sözleşme Kira Tutarı(Söz.PB)'.
      when 'NBD'.
        wa_fc-no_out = 'X'.
        set_text 'NBD(Söz.PB)'.
      when 'KIRA_YUKUM'.
        set_text 'Kira Yükümlülüğü Açılış(Söz.PB)'.
      when 'KIRA_YUKUM_KA'.
        set_text 'Kira Yükümlülüğü Kapanış(Söz.PB)'.
      when 'FAIZ'.
        set_text 'Faiz(Söz.PB)'.
      when 'VERI_KULL'.
        set_text 'Kullanım Hakkı Açılış(Söz.PB)'.
      when 'VERI_KULL_KA'.
        set_text 'Kullanım Hakkı Kapanış(Söz.PB)'.
      when 'AMORTISMAN'.
        set_text 'Amortisman(Söz.PB)'.
      when 'WAERS'.
        set_text 'Sözleşme PB'.

      when 'KIRA_TUTARI_EUR'.
        wa_fc-emphasize = 'C400'.
        set_text 'Kira Tutarı(EUR)'.
      when 'NBD_EUR'.
        wa_fc-no_out = 'X'.
        wa_fc-emphasize = 'C400'.
        set_text 'NBD(EUR)'.
      when 'KIRA_YUKUM_EUR'.
        wa_fc-emphasize = 'C400'.
        set_text 'Kira Yükümlülüğü Açılış(EUR)'.
      when 'KIRA_YUKUM_KA_EUR'.
        wa_fc-emphasize = 'C400'.
        set_text 'Kira Yükümlülüğü Kapanış(EUR)'.
      when 'FAIZ_EUR'.
        wa_fc-emphasize = 'C400'.
        set_text 'Faiz(EUR)'.
      when 'VERI_KULL_EUR'.
        wa_fc-emphasize = 'C400'.
        set_text 'Kullanım Hakkı Açılış(EUR)'.
      when 'VERI_KULL_KA_EUR'.
        wa_fc-emphasize = 'C400'.
        set_text 'Kullanım Hakkı Kapanış(EUR)'.
      when 'AMORTISMAN_EUR'.
        wa_fc-emphasize = 'C400'.
        set_text 'Amortisman(EUR)'.
      when 'WAERS_EUR'.
        wa_fc-emphasize = 'C400'.
      when 'KIRA_TUTARI_USD'.
        wa_fc-emphasize = 'C700'.
        set_text 'Kira Tutarı(USD)'.
      when 'NBD_USD'.
        wa_fc-no_out = 'X'.
        wa_fc-emphasize = 'C700'.
        set_text 'NBD(USD)'.
      when 'KIRA_YUKUM_USD'.
        wa_fc-emphasize = 'C700'.
        set_text 'Kira Yükümlülüğü Açılış(USD)'.
      when 'KIRA_YUKUM_KA_USD'.
        wa_fc-emphasize = 'C700'.
        set_text 'Kira Yükümlülüğü Kapanış(USD)'.
      when 'FAIZ_USD'.
        wa_fc-emphasize = 'C700'.
        set_text 'Faiz(USD)'.
      when 'VERI_KULL_USD'.
        wa_fc-emphasize = 'C700'.
        set_text 'Kullanım Hakkı Açılış(USD)'.
      when 'VERI_KULL_KA_USD'.
        wa_fc-emphasize = 'C700'.
        set_text 'Kullanım Hakkı Kapanış(USD)'.
      when 'AMORTISMAN_USD'.
        wa_fc-emphasize = 'C700'.
        set_text 'Amortisman(USD)'.
      when 'WAERS_USD'.
        wa_fc-emphasize = 'C700'.
      when 'KIRA_TUTARI_TRY'.
        set_text 'Kira Tutarı(TRY)'.
      when 'NBD_TRY'.
        wa_fc-no_out = 'X'.
        set_text 'NBD(TRY)'.
      when 'KIRA_YUKUM_TRY'.
        set_text 'Kira Yükümlülüğü Açılış(TRY)'.
      when 'KIRA_YUKUM_KA_TRY'.
        set_text 'Kira Yükümlülüğü Kapanış(TRY)'.
      when 'FAIZ_TRY'.
        set_text 'Faiz(TRY)'.
      when 'VERI_KULL_TRY'.
        set_text 'Kullanım Hakkı Açılış(TRY)'.
      when 'VERI_KULL_KA_TRY'.
        set_text 'Kullanım Hakkı Kapanış(TRY)'.
      when 'AMORTISMAN_TRY'.
        set_text 'Amortisman(TRY)'.
      when 'WAERS_TRY'.

    endcase.

    modify gt_fc from wa_fc.
  endloop.

  perform exclude_tb_functions changing gt_exclude.


  call method grid1->set_table_for_first_display
    exporting
      is_layout            = gs_layout
      it_toolbar_excluding = gt_exclude
      is_variant           = is_variant
      i_save               = 'X'
    changing
      it_fieldcatalog      = gt_fc[]
      it_outtab            = gt_a[].

  create object event_receiver.
  set handler event_receiver->data_changed for grid1.

  call method grid1->set_toolbar_interactive.
  call method grid1->refresh_table_display.
  call method grid1->register_edit_event
    exporting
      i_event_id = cl_gui_alv_grid=>mc_evt_modified.

  call method grid1->register_edit_event
    exporting
      i_event_id = cl_gui_alv_grid=>mc_evt_enter.

endform.                    " CREATE_AND_INIT_ALV
*&---------------------------------------------------------------------*
*&      Form  EXCLUDE_TB_FUNCTIONS
*&---------------------------------------------------------------------*
form exclude_tb_functions  changing pt_exclude type ui_functions.
  data ls_exclude type ui_func.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_copy_row.
  append ls_exclude to pt_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_delete_row.
  append ls_exclude to pt_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_append_row.
  append ls_exclude to pt_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_insert_row.
  append ls_exclude to pt_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_move_row.
  append ls_exclude to pt_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_copy.
  append ls_exclude to pt_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_cut.
  append ls_exclude to pt_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_paste.
  append ls_exclude to pt_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_paste_new_row.
  append ls_exclude to pt_exclude.
  ls_exclude = cl_gui_alv_grid=>mc_fc_loc_undo.
  append ls_exclude to pt_exclude.
endform.                    " EXCLUDE_TB_FUNCTIONS
*&---------------------------------------------------------------------*
*&      Form  get_file_name
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->FILE_DIRECTORY  text
*----------------------------------------------------------------------*
form get_file_name  using   file_directory.
  data: lv_name like sy-repid.
  lv_name = sy-repid..
  call function 'KD_GET_FILENAME_ON_F4'
    exporting
      program_name  = lv_name
      dynpro_number = syst-dynnr
      static        = 'X'
    changing
      file_name     = file_directory.
endform.                    " GET_FILE_NAME
*&---------------------------------------------------------------------*
*&      Form  UPLOAD_EXCEL
*&---------------------------------------------------------------------*
form upload_excel .
  data: idata like alsmex_tabline occurs 0 with header line.
  check p_file ne space.
  call function 'ALSM_EXCEL_TO_INTERNAL_TABLE'
    exporting
      filename                = p_file
      i_begin_col             = '1'
      i_begin_row             = '2'
      i_end_col               = '24'
      i_end_row               = '65536'
    tables
      intern                  = idata
    exceptions
      inconsistent_parameters = 1
      upload_ole              = 2
      others                  = 3.
  if sy-subrc <> 0.
    message id sy-msgid type sy-msgty number sy-msgno
            with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    stop.
  endif.

  read table idata index 1.

  data: gd_currentrow type i.
  gd_currentrow = idata-row.

  loop at idata.
    replace ',' with '.' into idata-value.
    modify idata.
  endloop.

  loop at idata.

    if idata-row ne gd_currentrow.
      append gt_upload.  clear gt_upload.
      gd_currentrow = idata-row.
    endif.
    case idata-col.
      when '0001'. gt_upload-sozlesme_id    = idata-value.
      when '0002'. gt_upload-sozlesme_ver   = idata-value.
      when '0003'. gt_upload-bukrs          = idata-value.
      when '0004'. gt_upload-sozlesme_no    = idata-value.
      when '0005'.
        call function 'CONVERT_DATE_TO_INTERNAL'
          exporting
            date_external = idata-value
          importing
            date_internal = gt_upload-gec_bas.

      when '0006'.
        call function 'CONVERT_DATE_TO_INTERNAL'
          exporting
            date_external = idata-value
          importing
            date_internal = gt_upload-gec_bit.
      when '0007'. gt_upload-kiralama_turu  = idata-value.
      when '0008'. gt_upload-soz_durumu     = idata-value.
      when '0009'. gt_upload-lifnr          = idata-value.
      when '0010'. gt_upload-waers          = idata-value.
      when '0011'. gt_upload-tutar_bpb      = idata-value.
      when '0012'. gt_upload-tutar_upb      = idata-value.
      when '0013'. gt_upload-kursf          = idata-value.
      when '0014'. gt_upload-gsber          = idata-value.
      when '0015'. gt_upload-kostl          = idata-value.
      when '0016'. gt_upload-aufnr          = idata-value.
      when '0017'. gt_upload-faiz_orani     = idata-value.
      when '0018'. gt_upload-veri_kul       = idata-value.
      when '0019'. gt_upload-kira_yuk_k     = idata-value.
      when '0020'. gt_upload-kira_yuk_u     = idata-value.
      when '0021'. gt_upload-amort_hes      = idata-value.
      when '0022'. gt_upload-faiz_hes       = idata-value.
      when '0023'. gt_upload-amort_gid      = idata-value.
      when '0024'. gt_upload-faiz_gid       = idata-value.
    endcase.
  endloop.
  append gt_upload.  clear gt_upload.

  loop at gt_upload.
    move-corresponding gt_upload to gt_upload_hkont.
    append gt_upload_hkont.
  endloop.

endform.                    " UPLOAD_EXCEL
*&---------------------------------------------------------------------*
*&      Form  SIMULASYON
*&---------------------------------------------------------------------*
form simulasyon using soz_durumu.
  data:lt_header    type table of  /eczb/ufrs_t_002 with header line,
       ls_header_on type           /eczb/ufrs_t_002,
       lt_item      type table of  /eczb/ufrs_t_011 with header line,
       ls_item      type /eczb/ufrs_t_011,
       lt_item_on   type table of  /eczb/ufrs_t_011 with header line,
       lt_06        type table of  /eczb/ufrs_t_006 with header line,
*       ls_16        type           /eczb/ufrs_t_016,
       lt_016       type table of  /eczb/ufrs_t_016 with header line,
       lv_on_ver    type /eczb/ufrs_t_002-sozlesme_ver,
       lt_header_ver type table of /eczb/ufrs_t_002 with header line,
       lv_son_donem type poper,
       lv_son_tutar type dmbtr,
       lv_kul       type bseg-dmbtr,
       lv_kyk       type bseg-dmbtr,
       lv_kyu       type bseg-dmbtr,
       lv_fau       type bseg-dmbtr,
       lv_fak       type bseg-dmbtr,
       lv_count     type i,
       lv_soz_don   type i,
       lv_son_don   type datum,
       lv_tutar     type dmbtr,
       lv_fark      type dmbtr,
       lv_int       type i,
       lv_donemsonu_kur type tcurr-ukurs,
       lv_monat_soz type /eczb/ufrs_t_011-monat_soz,
       lv_monat_fes type /eczb/ufrs_t_011-monat_soz,
       lv_kayit_turu type /eczb/ufrs_t_016-kayit_turu.

  ranges:r_sozid for /eczb/ufrs_t_002-sozlesme_id,
         r_sozvr for /eczb/ufrs_t_002-sozlesme_ver.

  clear:r_sozid[],r_sozid,r_sozvr[],r_sozvr.

  loop at gt_a.
    r_sozid-sign   = 'I'.
    r_sozid-option = 'EQ'.
    r_sozid-low    = gt_a-sozlesme_id.
    append r_sozid.clear r_sozid.

    r_sozvr-sign   = 'I'.
    r_sozvr-option = 'EQ'.
    r_sozvr-low    = gt_a-sozlesme_ver.
    append r_sozvr.clear r_sozvr.
  endloop.

  select * from /eczb/ufrs_t_002 into table lt_header
    where sozlesme_id  in r_sozid
      and sozlesme_ver in r_sozvr.

  select * from /eczb/ufrs_t_011 into table lt_item
    where sozlesme_id  in r_sozid
      and sozlesme_ver in r_sozvr.

  select * from /eczb/ufrs_t_006 into table lt_06
    where sozlesme_id  in r_sozid.

  clear:gt_kayit_gos[],gt_kayit_gos.

  sort lt_item by sozlesme_id sozlesme_ver monat_soz.

  if soz_durumu = '05'.
    loop at gt_a.
      clear:lv_tutar,lv_fark,lv_monat_fes,lv_monat_soz.
      read table lt_06 with key sozlesme_id = gt_a-sozlesme_id.
      check sy-subrc eq 0.

      read table lt_item with key sozlesme_id  = gt_a-sozlesme_id
                                  sozlesme_ver = gt_a-sozlesme_ver
                                  gjahr     = gt_a-fesih_tarihi(4)
                                  monat_ger = gt_a-fesih_tarihi+4(2).
      if sy-subrc eq 0.
        lv_monat_fes = lt_item-monat_soz.
      endif.

      loop at lt_item where sozlesme_id  = gt_a-sozlesme_id
                       and  sozlesme_ver = gt_a-sozlesme_ver
                       and  monat_soz lt lv_monat_fes.
        add lt_item-amortisman to lv_tutar.
      endloop.

      add lv_tutar to lv_fark.
      gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
      gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
      gt_kayit_gos-hkont        = lt_06-amort_hes.
      gt_kayit_gos-shkzg        = 'S'.
      gt_kayit_gos-tutar        = lv_tutar.
      gt_kayit_gos-waers        = lt_header-waers.
      gt_kayit_gos-gsber        = gt_a-gsber.
      gt_kayit_gos-txt50        = 'Fesih Kaydı'.
      append gt_kayit_gos.clear gt_kayit_gos.

      clear:lv_tutar.
      read table lt_item index 1.
      if sy-subrc eq 0.
        lv_tutar = lt_item-kira_yukum.
        lv_tutar = lv_tutar * -1.
      endif.
      add lv_tutar to lv_fark.
      gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
      gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
      gt_kayit_gos-hkont        = lt_06-veri_kul.
      gt_kayit_gos-shkzg        = 'H'.
      gt_kayit_gos-tutar        = lv_tutar.
      gt_kayit_gos-waers        = lt_header-waers.
      gt_kayit_gos-gsber        = gt_a-gsber.
      gt_kayit_gos-txt50        = 'Fesih Kaydı'.
      append gt_kayit_gos.clear gt_kayit_gos.

      clear:lv_tutar.
      lv_monat_soz = lv_monat_fes + 11.
      loop at lt_item where sozlesme_id  = gt_a-sozlesme_id
                        and sozlesme_ver = gt_a-sozlesme_ver
                        and monat_soz gt lv_monat_soz.
        add lt_item-kira_tutari to lv_tutar.
      endloop.
      add lv_tutar to lv_fark.
      gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
      gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
      gt_kayit_gos-hkont        = lt_06-kira_yuk_u.
      gt_kayit_gos-shkzg        = 'S'.
      gt_kayit_gos-tutar        = lv_tutar.
      gt_kayit_gos-waers        = lt_header-waers.
      gt_kayit_gos-txt50        = 'Fesih Kaydı'.
      gt_kayit_gos-gsber        = gt_a-gsber.
      append gt_kayit_gos.clear gt_kayit_gos.

      clear:lv_tutar.
      loop at lt_item where sozlesme_id  = gt_a-sozlesme_id
                        and sozlesme_ver = gt_a-sozlesme_ver
                        and monat_soz ge lv_monat_fes and
                            monat_soz le lv_monat_soz.
        add lt_item-kira_tutari to lv_tutar.
      endloop.
      add lv_tutar to lv_fark.
      gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
      gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
      gt_kayit_gos-hkont        = lt_06-kira_yuk_k.
      gt_kayit_gos-shkzg        = 'S'.
      gt_kayit_gos-tutar        = lv_tutar.
      gt_kayit_gos-waers        = lt_header-waers.
      gt_kayit_gos-txt50        = 'Fesih Kaydı'.
      gt_kayit_gos-gsber        = gt_a-gsber.
      append gt_kayit_gos.clear gt_kayit_gos.

      clear:lv_tutar.
      loop at lt_item where sozlesme_id  = gt_a-sozlesme_id
                        and sozlesme_ver = gt_a-sozlesme_ver
                        and monat_soz gt lv_monat_soz.
        add lt_item-faiz to lv_tutar.
      endloop.
      lv_tutar = lv_tutar * -1.
      add lv_tutar to lv_fark.
      gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
      gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
      gt_kayit_gos-hkont        = lt_06-faiz_hes_uz.
      gt_kayit_gos-shkzg        = 'H'.
      gt_kayit_gos-tutar        = lv_tutar.
      gt_kayit_gos-waers        = lt_header-waers.
      gt_kayit_gos-txt50        = 'Fesih Kaydı'.
      gt_kayit_gos-gsber        = gt_a-gsber.
      append gt_kayit_gos.clear gt_kayit_gos.

      clear:lv_tutar.
      loop at lt_item where sozlesme_id  = gt_a-sozlesme_id
                        and sozlesme_ver = gt_a-sozlesme_ver
                        and monat_soz ge lv_monat_fes and
                            monat_soz le lv_monat_soz.
        add lt_item-faiz to lv_tutar.
      endloop.
      lv_tutar = lv_tutar * -1.
      add lv_tutar to lv_fark.
      gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
      gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
      gt_kayit_gos-hkont        = lt_06-faiz_hes.
      gt_kayit_gos-shkzg        = 'H'.
      gt_kayit_gos-tutar        = lv_tutar.
      gt_kayit_gos-waers        = lt_header-waers.
      gt_kayit_gos-txt50        = 'Fesih Kaydı'.
      gt_kayit_gos-gsber        = gt_a-gsber.
      append gt_kayit_gos.clear gt_kayit_gos.

      lv_fark = lv_fark * -1.

      gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
      gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
      gt_kayit_gos-hkont        = p_hkont.
      gt_kayit_gos-kostl        = gt_a-kostl.
      gt_kayit_gos-shkzg        = 'H'.
      gt_kayit_gos-tutar        = lv_fark.
      gt_kayit_gos-waers        = lt_header-waers.
      gt_kayit_gos-txt50        = 'Fesih Kaydı'.
      gt_kayit_gos-gsber        = gt_a-gsber.
      append gt_kayit_gos.clear gt_kayit_gos.

    endloop.

  else.
    loop at lt_header.
      clear:lv_kul,lv_kyk,lv_fak,lv_kyu,lv_fau,lv_fark.
      call function 'MONTHS_BETWEEN_TWO_DATES'
        exporting
          i_datum_bis = lt_header-gec_bit
          i_datum_von = lt_header-gec_bas
        importing
          e_monate    = lv_soz_don.

      lv_soz_don = lv_soz_don + 1.

      clear:lv_count.
      loop at lt_item where sozlesme_id   eq lt_header-sozlesme_id
                        and sozlesme_ver eq lt_header-sozlesme_ver.
        lv_count = lv_count + 1.
        if lv_count eq 1.
          lv_kul = lt_item-veri_kull.
        endif.

        if lv_count le 12.
          add lt_item-kira_tutari to lv_kyk.
          add lt_item-faiz        to lv_fak.
        else.
          add lt_item-kira_tutari to lv_kyu.
          add lt_item-faiz        to lv_fau.
        endif.
      endloop.
      lv_kyk = lv_kyk + lt_header-pesin_odeme.
      lv_fark = lv_kul - lv_kyk - lv_kyu + lv_fak + lv_fau.
      if lv_fark   is not initial.
        add lv_fark to lv_kyu.
        clear:lv_fark.
      endif.
      read table lt_06 with key sozlesme_id = lt_header-sozlesme_id.
      check sy-subrc eq 0.
      if s_gjahr-low = lt_header-gec_bas(4) and
         s_monat-low = lt_header-gec_bas+4(2).
        if lt_header-kull_hak_fark is initial.
          "açılış kaydı
          gt_kayit_gos-sozlesme_id  = lt_header-sozlesme_id.
          gt_kayit_gos-sozlesme_ver = lt_header-sozlesme_ver.
          gt_kayit_gos-hkont        = lt_06-veri_kul.
          gt_kayit_gos-shkzg        = 'S'.
          gt_kayit_gos-tutar        = lv_kul.
          gt_kayit_gos-waers        = lt_header-waers.
          gt_kayit_gos-txt50        = 'Açılış Kaydı'.
          gt_kayit_gos-gsber        = gt_a-gsber.
          append gt_kayit_gos.clear gt_kayit_gos.

          gt_kayit_gos-sozlesme_id  = lt_header-sozlesme_id.
          gt_kayit_gos-sozlesme_ver = lt_header-sozlesme_ver.
          gt_kayit_gos-hkont        = lt_06-kira_yuk_k.
          gt_kayit_gos-shkzg        = 'H'.
          gt_kayit_gos-tutar        = lv_kyk * -1.
          gt_kayit_gos-waers        = lt_header-waers.
          gt_kayit_gos-txt50        = 'Açılış Kaydı'.
          gt_kayit_gos-gsber        = gt_a-gsber.
          append gt_kayit_gos.clear gt_kayit_gos.

          gt_kayit_gos-sozlesme_id  = lt_header-sozlesme_id.
          gt_kayit_gos-sozlesme_ver = lt_header-sozlesme_ver.
          gt_kayit_gos-hkont        = lt_06-kira_yuk_u.
          gt_kayit_gos-shkzg        = 'H'.
          gt_kayit_gos-tutar        = lv_kyu * -1.
          gt_kayit_gos-waers        = lt_header-waers.
          gt_kayit_gos-txt50        = 'Açılış Kaydı'.
          gt_kayit_gos-gsber        = gt_a-gsber.
          append gt_kayit_gos.clear gt_kayit_gos.

          gt_kayit_gos-sozlesme_id  = lt_header-sozlesme_id.
          gt_kayit_gos-sozlesme_ver = lt_header-sozlesme_ver.
          gt_kayit_gos-hkont        = lt_06-faiz_hes.
          gt_kayit_gos-shkzg        = 'S'.
          gt_kayit_gos-tutar        = lv_fak.
          gt_kayit_gos-waers        = lt_header-waers.
          gt_kayit_gos-txt50        = 'Açılış Kaydı'.
          gt_kayit_gos-gsber        = gt_a-gsber.
          append gt_kayit_gos.clear gt_kayit_gos.

          gt_kayit_gos-sozlesme_id  = lt_header-sozlesme_id.
          gt_kayit_gos-sozlesme_ver = lt_header-sozlesme_ver.
          gt_kayit_gos-hkont        = lt_06-faiz_hes_uz.
          gt_kayit_gos-shkzg        = 'S'.
          gt_kayit_gos-tutar        = lv_fau.
          gt_kayit_gos-waers        = lt_header-waers.
          gt_kayit_gos-txt50        = 'Açılış Kaydı'.
          gt_kayit_gos-gsber        = gt_a-gsber.
          append gt_kayit_gos.clear gt_kayit_gos.
        else.
          clear:lv_kyk,lv_kyu,lv_on_ver,ls_header_on,
                lv_fau,lv_fak,
                lt_item_on[],lt_item_on,lv_soz_don,lv_fark,
                lt_header_ver[],lt_header_ver.
          select * from /eczb/ufrs_t_002 into table lt_header_ver
            where sozlesme_id eq lt_header-sozlesme_id.

          delete lt_header_ver where selkz eq 'X'.
          delete lt_header_ver where sozlesme_ver eq
                                              lt_header-sozlesme_ver.
          sort lt_header_ver by sozlesme_ver descending.
          read table lt_header_ver index 1.
          if sy-subrc eq 0.
            lv_on_ver = lt_header_ver-sozlesme_ver.
          endif.

*          lv_on_ver = lt_header-sozlesme_ver - 1.

          select single * from /eczb/ufrs_t_002 into ls_header_on
            where sozlesme_id  eq lt_header-sozlesme_id
              and sozlesme_ver eq lv_on_ver.

          if sy-subrc eq 0.
            select * from /eczb/ufrs_t_011 into table lt_item_on
                where sozlesme_id  eq ls_header_on-sozlesme_id
                  and sozlesme_ver eq ls_header_on-sozlesme_ver.

            loop at lt_item.
              if sy-tabix eq 1.
                loop at lt_item_on where
                          sozlesme_id  eq ls_header_on-sozlesme_id and
                          sozlesme_ver eq ls_header_on-sozlesme_ver and
                          monat_ger    eq lt_item-monat_ger and
                          gjahr        eq lt_item-gjahr.
                  lv_soz_don = lt_item_on-monat_soz.
                endloop.
              else.
                exit.
              endif.
            endloop.

            clear:lv_count.
            loop at lt_item where
                         sozlesme_id  eq lt_header-sozlesme_id and
                         sozlesme_ver eq lt_header-sozlesme_ver.
              lv_count = lv_count + 1.
              if lv_count le 12.
                add lt_item-kira_tutari to lv_kyk.
                add lt_item-faiz        to lv_fak.
              else.
                add lt_item-kira_tutari to lv_kyu.
                add lt_item-faiz        to lv_fau.
              endif.
            endloop.

            clear:lv_count.
            loop at lt_item_on where monat_soz ge lv_soz_don.
              lv_count = lv_count + 1.

              if lv_count le 12.
                lv_kyk = lv_kyk - lt_item_on-kira_tutari.
                lv_fak = lv_fak - lt_item_on-faiz.
              else.
                lv_kyu = lv_kyu - lt_item_on-kira_tutari.
                lv_fau = lv_fau - lt_item_on-faiz.
              endif.
            endloop.

            "açılış kaydı
            gt_kayit_gos-sozlesme_id  = lt_header-sozlesme_id.
            gt_kayit_gos-sozlesme_ver = lt_header-sozlesme_ver.
            gt_kayit_gos-hkont        = lt_06-veri_kul.
            gt_kayit_gos-shkzg        = 'S'.
            gt_kayit_gos-tutar        =  ( ( lv_kyk + lv_kyu ) -
                                        ( lv_fak + lv_fau ) ).
            gt_kayit_gos-waers        = lt_header-waers.
            gt_kayit_gos-txt50        = 'Açılış Kaydı'.
            gt_kayit_gos-gsber        = gt_a-gsber.
            append gt_kayit_gos.clear gt_kayit_gos.

            gt_kayit_gos-sozlesme_id  = lt_header-sozlesme_id.
            gt_kayit_gos-sozlesme_ver = lt_header-sozlesme_ver.
            gt_kayit_gos-hkont        = lt_06-kira_yuk_k.
            gt_kayit_gos-shkzg        = 'H'.
            gt_kayit_gos-tutar        = lv_kyk * -1 .
            gt_kayit_gos-waers        = lt_header-waers.
            gt_kayit_gos-txt50        = 'Açılış Kaydı'.
            gt_kayit_gos-gsber        = gt_a-gsber.
            append gt_kayit_gos.clear gt_kayit_gos.

            gt_kayit_gos-sozlesme_id  = lt_header-sozlesme_id.
            gt_kayit_gos-sozlesme_ver = lt_header-sozlesme_ver.
            gt_kayit_gos-hkont        = lt_06-kira_yuk_u.
            gt_kayit_gos-shkzg        = 'H'.
            gt_kayit_gos-tutar        = lv_kyu * -1.
            gt_kayit_gos-waers        = lt_header-waers.
            gt_kayit_gos-txt50        = 'Açılış Kaydı'.
            gt_kayit_gos-gsber        = gt_a-gsber.
            append gt_kayit_gos.clear gt_kayit_gos.

            gt_kayit_gos-sozlesme_id  = lt_header-sozlesme_id.
            gt_kayit_gos-sozlesme_ver = lt_header-sozlesme_ver.
            gt_kayit_gos-hkont        = lt_06-faiz_hes.
            gt_kayit_gos-shkzg        = 'S'.
            gt_kayit_gos-tutar        = lv_fak.
            gt_kayit_gos-waers        = lt_header-waers.
            gt_kayit_gos-txt50        = 'Açılış Kaydı'.
            gt_kayit_gos-gsber        = gt_a-gsber.
            append gt_kayit_gos.clear gt_kayit_gos.

            gt_kayit_gos-sozlesme_id  = lt_header-sozlesme_id.
            gt_kayit_gos-sozlesme_ver = lt_header-sozlesme_ver.
            gt_kayit_gos-hkont        = lt_06-faiz_hes_uz.
            gt_kayit_gos-shkzg        = 'S'.
            gt_kayit_gos-tutar        = lv_fau.
            gt_kayit_gos-waers        = lt_header-waers.
            gt_kayit_gos-txt50        = 'Açılış Kaydı'.
            gt_kayit_gos-gsber        = gt_a-gsber.
            append gt_kayit_gos.clear gt_kayit_gos.

            loop at gt_kayit_gos where txt50 eq 'Açılış Kaydı'.
              if gt_kayit_gos-shkzg eq 'S' and
                 gt_kayit_gos-tutar < 0.
                gt_kayit_gos-shkzg = 'H'.
              elseif gt_kayit_gos-shkzg eq 'H' and
                 gt_kayit_gos-tutar > 0.
                gt_kayit_gos-shkzg = 'S'.
              endif.
              modify gt_kayit_gos.
            endloop.

*            CALL FUNCTION 'MONTHS_BETWEEN_TWO_DATES'
*              EXPORTING
*                i_datum_bis = lt_header-gec_bas
*                i_datum_von = ls_header_on-gec_bas
*              IMPORTING
*                e_monate    = lv_soz_don.
*
**            lv_soz_don = lv_soz_don + 1.
*
*            CLEAR:lv_count.
*            LOOP AT lt_item WHERE sozlesme_id  EQ lt_header-sozlesme_id
*                             AND sozlesme_ver EQ
*            lt_header-sozlesme_ver.
*              lv_count = lv_count + 1.
*              READ TABLE lt_item_on WITH KEY gjahr = lt_item-gjahr
*                                         monat_ger = lt_item-monat_ger.
*              IF sy-subrc EQ 0.
*                IF lv_count LE 12.
*                  lv_fark = lt_item-nbd - lt_item_on-nbd.
*                  ADD lv_fark TO lv_kyk.
*                ELSE.
*                  lv_fark = lt_item-nbd - lt_item_on-nbd.
*                  ADD lv_fark TO lv_kyu.
*                ENDIF.
*              ENDIF.
*            ENDLOOP.
*
*            CLEAR:lv_count,lv_fark.
*            LOOP AT lt_item_on WHERE monat_soz LE lv_soz_don.
*              ADD lt_item_on-faiz TO lv_fark.
*            ENDLOOP.
*
*            lv_kyk = lv_kyk - lv_fark.
*            lv_fark = lt_header-kull_hak_fark - ( lv_kyk + lv_kyu ).
*            ADD lv_fark TO lv_kyu.
*
*            gt_kayit_gos-sozlesme_id  = lt_header-sozlesme_id.
*            gt_kayit_gos-sozlesme_ver = lt_header-sozlesme_ver.
*            gt_kayit_gos-hkont        = lt_06-veri_kul.
*            gt_kayit_gos-shkzg        = 'S'.
*            gt_kayit_gos-tutar        = lt_header-kull_hak_fark.
*            gt_kayit_gos-waers        = lt_header-waers.
*            gt_kayit_gos-txt50        = 'Açılış Kaydı'.
*            gt_kayit_gos-gsber        = gt_a-gsber.
*            APPEND gt_kayit_gos.CLEAR gt_kayit_gos.
*
*            gt_kayit_gos-sozlesme_id  = lt_header-sozlesme_id.
*            gt_kayit_gos-sozlesme_ver = lt_header-sozlesme_ver.
*            gt_kayit_gos-hkont        = lt_06-kira_yuk_k.
*            gt_kayit_gos-shkzg        = 'H'.
*            gt_kayit_gos-tutar        = lv_kyk * -1.
*            gt_kayit_gos-waers        = lt_header-waers.
*            gt_kayit_gos-txt50        = 'Açılış Kaydı'.
*            gt_kayit_gos-gsber        = gt_a-gsber.
*            APPEND gt_kayit_gos.CLEAR gt_kayit_gos.
*
*            gt_kayit_gos-sozlesme_id  = lt_header-sozlesme_id.
*            gt_kayit_gos-sozlesme_ver = lt_header-sozlesme_ver.
*            gt_kayit_gos-hkont        = lt_06-kira_yuk_u.
*            gt_kayit_gos-shkzg        = 'H'.
*            gt_kayit_gos-tutar        = lv_kyu * -1.
*            gt_kayit_gos-waers        = lt_header-waers.
*            gt_kayit_gos-txt50        = 'Açılış Kaydı'.
*            gt_kayit_gos-gsber        = gt_a-gsber.
*            APPEND gt_kayit_gos.CLEAR gt_kayit_gos.
          endif.

        endif.

      else.
*        "açılış kaydı
*        gt_kayit_gos-sozlesme_id  = lt_header-sozlesme_id.
*        gt_kayit_gos-sozlesme_ver = lt_header-sozlesme_ver.
*        gt_kayit_gos-hkont        = lt_06-veri_kul.
*        gt_kayit_gos-shkzg        = 'S'.
*        gt_kayit_gos-tutar        = lt_header-kull_hak_fark.
*        gt_kayit_gos-waers        = lt_header-waers.
*        gt_kayit_gos-txt50        = 'Açılış Kaydı'.
*        append gt_kayit_gos.clear gt_kayit_gos.
*
*        gt_kayit_gos-sozlesme_id  = lt_header-sozlesme_id.
*        gt_kayit_gos-sozlesme_ver = lt_header-sozlesme_ver.
*        gt_kayit_gos-hkont        = lt_06-veri_kul.
*        gt_kayit_gos-shkzg        = 'H'.
*        gt_kayit_gos-tutar        = lt_header-kull_hak_fark.
*        gt_kayit_gos-waers        = lt_header-waers.
*        gt_kayit_gos-txt50        = 'Açılış Kaydı'.
*        append gt_kayit_gos.clear gt_kayit_gos.
      endif.
    endloop.

    loop at gt_a.
      read table lt_06 with key sozlesme_id = gt_a-sozlesme_id.
      check sy-subrc eq 0.

      call function 'MONTHS_BETWEEN_TWO_DATES'
        exporting
          i_datum_bis = gt_a-gec_bit
          i_datum_von = gt_a-gec_bas
        importing
          e_monate    = lv_soz_don.

      lv_soz_don = lv_soz_don + 1.
      "aylık faiz
      if lv_soz_don le 12.
        gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
        gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
        gt_kayit_gos-hkont        = lt_06-faiz_gid.
        shift lt_06-faiz_gid left deleting leading '0'.
        if lt_06-faiz_gid(1) = '7'.
          gt_kayit_gos-kostl = gt_a-kostl.
        endif.
        gt_kayit_gos-shkzg        = 'S'.
        gt_kayit_gos-tutar        = gt_a-faiz.
        gt_kayit_gos-waers        = gt_a-waers.
        gt_kayit_gos-txt50        = 'Faiz Kaydı'.
        gt_kayit_gos-gsber        = gt_a-gsber.
        append gt_kayit_gos.clear gt_kayit_gos.
      else.
        gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
        gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
        gt_kayit_gos-hkont        = lt_06-faiz_gid_uz.
        shift lt_06-faiz_gid_uz left deleting leading '0'.
        if lt_06-faiz_gid_uz(1) = '7'.
          gt_kayit_gos-kostl = gt_a-kostl.
        endif.
        gt_kayit_gos-shkzg        = 'S'.
        gt_kayit_gos-tutar        = gt_a-faiz.
        gt_kayit_gos-waers        = gt_a-waers.
        gt_kayit_gos-txt50        = 'Faiz Kaydı'.
        gt_kayit_gos-gsber        = gt_a-gsber.
        append gt_kayit_gos.clear gt_kayit_gos.
      endif.

      gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
      gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
      gt_kayit_gos-hkont        = lt_06-faiz_hes.
      gt_kayit_gos-shkzg        = 'H'.
      gt_kayit_gos-tutar        = gt_a-faiz * -1.
      gt_kayit_gos-waers        = gt_a-waers.
      gt_kayit_gos-txt50        = 'Faiz Kaydı'.
      gt_kayit_gos-gsber        = gt_a-gsber.
      append gt_kayit_gos.clear gt_kayit_gos.

      "aylık amortisman
      gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
      gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
      gt_kayit_gos-hkont        = lt_06-amort_gid.
      shift lt_06-amort_gid left deleting leading '0'.
      if lt_06-amort_gid(1) = '7'.
        gt_kayit_gos-kostl = gt_a-kostl.
      endif.
      gt_kayit_gos-shkzg        = 'S'.
      gt_kayit_gos-tutar        = gt_a-amortisman.
      gt_kayit_gos-waers        = gt_a-waers.
      gt_kayit_gos-txt50        = 'Amortisman Kaydı'.
      gt_kayit_gos-gsber        = gt_a-gsber.
      append gt_kayit_gos.clear gt_kayit_gos.

      gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
      gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
      gt_kayit_gos-hkont        = lt_06-amort_hes.
      gt_kayit_gos-shkzg        = 'H'.
      gt_kayit_gos-tutar        = gt_a-amortisman * -1.
      gt_kayit_gos-waers        = gt_a-waers.
      gt_kayit_gos-txt50        = 'Amortisman Kaydı'.
      gt_kayit_gos-gsber        = gt_a-gsber.
      append gt_kayit_gos.clear gt_kayit_gos.

      lv_son_don(4)   = gt_a-gjahr.
      lv_son_don+4(2) = gt_a-monat_ger.
      lv_son_don+6(2) = '01'.

      call function 'RP_CALC_DATE_IN_INTERVAL'
        exporting
          date      = lv_son_don
          days      = 0
          months    = 12
          signum    = '+'
          years     = 0
        importing
          calc_date = lv_son_don.

      read table lt_item with key sozlesme_id  = gt_a-sozlesme_id
                                  sozlesme_ver = gt_a-sozlesme_ver
                                  gjahr     = lv_son_don(4)
                                  monat_ger = lv_son_don+4(2).

      if sy-subrc eq 0.
        gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
        gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
        gt_kayit_gos-hkont        = lt_06-faiz_hes.
        gt_kayit_gos-shkzg        = 'S'.
        gt_kayit_gos-tutar        = lt_item-faiz.
        gt_kayit_gos-waers        = lt_item-waers.
        gt_kayit_gos-txt50        = 'Dönemselleştirme Kaydı'.
        gt_kayit_gos-gsber        = gt_a-gsber.
        append gt_kayit_gos.clear gt_kayit_gos.

        gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
        gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
        gt_kayit_gos-hkont        = lt_06-faiz_hes_uz.
        gt_kayit_gos-shkzg        = 'H'.
        gt_kayit_gos-tutar        = lt_item-faiz * -1.
        gt_kayit_gos-waers        = lt_item-waers.
        gt_kayit_gos-txt50        = 'Dönemselleştirme Kaydı'.
        gt_kayit_gos-gsber        = gt_a-gsber.
        append gt_kayit_gos.clear gt_kayit_gos.

        gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
        gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
        gt_kayit_gos-hkont        = lt_06-kira_yuk_u.
        gt_kayit_gos-shkzg        = 'S'.
        gt_kayit_gos-tutar        = lt_item-kira_tutari.
        gt_kayit_gos-waers        = lt_item-waers.
        gt_kayit_gos-txt50        = 'Dönemselleştirme Kaydı'.
        gt_kayit_gos-gsber        = gt_a-gsber.
        append gt_kayit_gos.clear gt_kayit_gos.

        gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
        gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
        gt_kayit_gos-hkont        = lt_06-kira_yuk_k.
        gt_kayit_gos-shkzg        = 'H'.
        gt_kayit_gos-tutar        = lt_item-kira_tutari * -1.
        gt_kayit_gos-waers        = lt_item-waers.
        gt_kayit_gos-txt50        = 'Dönemselleştirme Kaydı'.
        gt_kayit_gos-gsber        = gt_a-gsber.
        append gt_kayit_gos.clear gt_kayit_gos.

      endif.


      read table lt_item with key sozlesme_id  = gt_a-sozlesme_id
                                  sozlesme_ver = gt_a-sozlesme_ver
                                  gjahr     = gt_a-gjahr
                                  monat_ger = gt_a-monat_ger.
      if sy-subrc eq 0.
        "geri çekme kaydı
        "ödeme geri çekme
        if lt_item-kira_tutari is not initial.
          gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
          gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
          gt_kayit_gos-hkont        = lt_06-kira_yuk_k.
          gt_kayit_gos-shkzg        = 'S'.
          gt_kayit_gos-tutar        = lt_item-kira_tutari.
          gt_kayit_gos-waers        = gt_a-waers.
          gt_kayit_gos-txt50        = 'Ödeme Geri Çekme Kaydı'.
          gt_kayit_gos-budat        = lt_item-odeme_tarihi.
          gt_kayit_gos-gsber        = gt_a-gsber.
          append gt_kayit_gos.clear gt_kayit_gos.

          gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
          gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
          gt_kayit_gos-hkont        = lt_06-geri_cekme.
          gt_kayit_gos-shkzg        = 'H'.
          gt_kayit_gos-tutar        = lt_item-kira_tutari * -1.
          gt_kayit_gos-waers        = gt_a-waers.
          gt_kayit_gos-txt50        = 'Ödeme Geri Çekme Kaydı'.
          gt_kayit_gos-budat        = lt_item-odeme_tarihi.
          gt_kayit_gos-gsber        = gt_a-gsber.
          append gt_kayit_gos.clear gt_kayit_gos.

        endif.
        "fatura geri çekme
        if gt_a-odeme_period eq '01'.
          clear:lv_count,lv_tutar.
          call function 'MONTHS_BETWEEN_TWO_DATES'
            exporting
              i_datum_bis = gt_a-gec_bit
              i_datum_von = gt_a-gec_bas
            importing
              e_monate    = lv_int.
          lv_int = lv_int + 1.
          loop at lt_item into ls_item where
                               sozlesme_id  eq gt_a-sozlesme_id and
                              sozlesme_ver eq gt_a-sozlesme_ver and
                               kira_tutari is initial.
            if sy-tabix ne lv_int.
              lv_count = lv_count + 1.
            else.

            endif.

          endloop.

          if lt_item-monat_soz le lv_int.
            lv_count = lv_count + lt_item-monat_soz.

            read table lt_item into ls_item with key monat_soz =
            lv_count.
            if sy-subrc eq 0.
              gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
              gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
              gt_kayit_gos-hkont        = lt_06-geri_cekme.
              gt_kayit_gos-shkzg        = 'S'.
              gt_kayit_gos-tutar        = ls_item-kira_tutari.
              gt_kayit_gos-waers        = gt_a-waers.
              gt_kayit_gos-txt50        = 'Fatura Geri Çekme Kaydı'.
              gt_kayit_gos-budat(4)     = gt_a-gjahr.
              gt_kayit_gos-budat+4(2)   = gt_a-monat_ger.
              gt_kayit_gos-budat+6(2)   = gt_a-soz_bas_tar+6(2).
              gt_kayit_gos-gsber        = gt_a-gsber.
              append gt_kayit_gos.clear gt_kayit_gos.

              gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
              gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
              gt_kayit_gos-hkont        = lt_06-kira_gider.
              gt_kayit_gos-shkzg        = 'H'.
              gt_kayit_gos-tutar        = ls_item-kira_tutari * -1.
              gt_kayit_gos-waers        = gt_a-waers.
              gt_kayit_gos-txt50        = 'Fatura Geri Çekme Kaydı'.
              gt_kayit_gos-budat(4)     = gt_a-gjahr.
              gt_kayit_gos-budat+4(2)   = gt_a-monat_ger.
              gt_kayit_gos-budat+6(2)   = gt_a-soz_bas_tar+6(2).
              gt_kayit_gos-gsber        = gt_a-gsber.
              append gt_kayit_gos.clear gt_kayit_gos.
            endif.
          endif.
        else.
          if gt_a-odeme_period is not initial.
            if lt_item-kira_tutari is not initial.
              if gt_a-gaag is initial.
                clear:lv_fark.
                gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
                gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
                gt_kayit_gos-hkont        = lt_06-geri_cekme.
                gt_kayit_gos-shkzg        = 'S'.
                gt_kayit_gos-tutar        = lt_item-kira_tutari.
                gt_kayit_gos-waers        = gt_a-waers.
                gt_kayit_gos-txt50        = 'Fatura Geri Çekme Kaydı'.
                gt_kayit_gos-budat(4)     = gt_a-gjahr.
                gt_kayit_gos-budat+4(2)   = gt_a-monat_ger.
                gt_kayit_gos-budat+6(2)   = gt_a-soz_bas_tar+6(2).
                add gt_kayit_gos-tutar to lv_fark.
                gt_kayit_gos-gsber        = gt_a-gsber.
                append gt_kayit_gos.clear gt_kayit_gos.

                gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
                gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
                gt_kayit_gos-hkont        = lt_06-kira_gider.
                gt_kayit_gos-shkzg        = 'H'.
                gt_kayit_gos-tutar        =
                ( lt_item-kira_tutari ) * -1.
                gt_kayit_gos-waers        = gt_a-waers.
                gt_kayit_gos-txt50        = 'Fatura Geri Çekme Kaydı'.
                gt_kayit_gos-budat(4)     = gt_a-gjahr.
                gt_kayit_gos-budat+4(2)   = gt_a-monat_ger.
                gt_kayit_gos-budat+6(2)   = gt_a-soz_bas_tar+6(2).
*                ADD gt_kayit_gos-tutar TO lv_fark.
                gt_kayit_gos-gsber        = gt_a-gsber.
                append gt_kayit_gos.clear gt_kayit_gos.
              else.

                gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
                gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
                gt_kayit_gos-hkont        = lt_06-kira_gider.
                gt_kayit_gos-shkzg        = 'H'.
                gt_kayit_gos-tutar        =
                ( lt_item-kira_tutari / gt_a-odeme_period ) * -1.
                gt_kayit_gos-waers        = gt_a-waers.
                gt_kayit_gos-txt50        =
                                    'Fatura Geri Çekme Kaydı'.
                gt_kayit_gos-budat(4)     = gt_a-gjahr.
                gt_kayit_gos-budat+4(2)   = gt_a-monat_ger.
                gt_kayit_gos-budat+6(2)   = gt_a-soz_bas_tar+6(2).
                gt_kayit_gos-gsber        = gt_a-gsber.
                append gt_kayit_gos.clear gt_kayit_gos.

                gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
                gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
                gt_kayit_gos-hkont        = lt_06-pesin_kira.
                gt_kayit_gos-shkzg        = 'S'.
                gt_kayit_gos-tutar        =
                ( lt_item-kira_tutari / gt_a-odeme_period ).
                gt_kayit_gos-waers        = gt_a-waers.
                gt_kayit_gos-txt50
                                     = 'Fatura Geri Çekme Kaydı'.
                gt_kayit_gos-budat(4)     = gt_a-gjahr.
                gt_kayit_gos-budat+4(2)   = gt_a-monat_ger.
                gt_kayit_gos-budat+6(2)   = gt_a-soz_bas_tar+6(2).
                gt_kayit_gos-gsber        = gt_a-gsber.
                append gt_kayit_gos.clear gt_kayit_gos.

*                gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
*                gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
*                gt_kayit_gos-hkont        = lt_06-kira_gider_uv.
*                gt_kayit_gos-shkzg        = 'H'.
*                gt_kayit_gos-tutar        =
*                ( lt_item-kira_tutari / gt_a-odeme_period ) *
*                ( gt_a-odeme_period - 1 ) * -1.
*                gt_kayit_gos-waers        = gt_a-waers.
*                gt_kayit_gos-txt50        = 'Fatura Geri Çekme Kaydı'.
*                gt_kayit_gos-budat(4)     = gt_a-gjahr.
*                gt_kayit_gos-budat+4(2)   = gt_a-monat_ger.
*                gt_kayit_gos-budat+6(2)   = gt_a-soz_bas_tar+6(2).
*                ADD gt_kayit_gos-tutar TO lv_fark.
*                IF lv_fark IS NOT INITIAL.
*                  ADD lv_fark TO gt_kayit_gos-tutar.
*                  CLEAR:lv_fark.
*                ENDIF.
*                gt_kayit_gos-gsber        = gt_a-gsber.
*                APPEND gt_kayit_gos.CLEAR gt_kayit_gos.
              endif.


            else.
              if gt_a-gaag is not initial.
                sort lt_item by monat_soz descending.
                clear:lv_count,lv_son_donem,lv_son_tutar.
                loop at lt_item into ls_item where
                                   sozlesme_id  eq gt_a-sozlesme_id and
                                  sozlesme_ver eq gt_a-sozlesme_ver and
                                      kira_tutari is not initial.
                  lv_son_tutar = ls_item-kira_tutari.
                  lv_son_donem = ls_item-monat_soz.
                  exit.
                endloop.
                if gt_a-monat_soz lt lv_son_donem.
                  sort lt_item by monat_soz.
                  clear:lv_count.
                  loop at lt_item into ls_item where
                                   sozlesme_id  eq gt_a-sozlesme_id and
                                  sozlesme_ver eq gt_a-sozlesme_ver and
                                        monat_soz lt gt_a-monat_soz and
                                        kira_tutari is not initial.
                    lv_count = lv_count + 1.
                    if lv_count = 1.

                      gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
                      gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
                      gt_kayit_gos-hkont        = lt_06-kira_gider.
                      gt_kayit_gos-shkzg        = 'H'.
                      gt_kayit_gos-tutar        =
                      ( ls_item-kira_tutari / gt_a-odeme_period ) * -1.
                      gt_kayit_gos-waers        = gt_a-waers.
                      gt_kayit_gos-txt50        =
                                          'Fatura Geri Çekme Kaydı'.
                      gt_kayit_gos-budat(4)     = gt_a-gjahr.
                      gt_kayit_gos-budat+4(2)   = gt_a-monat_ger.
                      gt_kayit_gos-budat+6(2)   = gt_a-soz_bas_tar+6(2).
                      gt_kayit_gos-gsber        = gt_a-gsber.
                      append gt_kayit_gos.clear gt_kayit_gos.

                      gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
                      gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
                      gt_kayit_gos-hkont        = lt_06-pesin_kira.
                      gt_kayit_gos-shkzg        = 'S'.
                      gt_kayit_gos-tutar        =
                      ( ls_item-kira_tutari / gt_a-odeme_period ).
                      gt_kayit_gos-waers        = gt_a-waers.
                      gt_kayit_gos-txt50
                                           = 'Fatura Geri Çekme Kaydı'.
                      gt_kayit_gos-budat(4)     = gt_a-gjahr.
                      gt_kayit_gos-budat+4(2)   = gt_a-monat_ger.
                      gt_kayit_gos-budat+6(2)   = gt_a-soz_bas_tar+6(2).
                      gt_kayit_gos-gsber        = gt_a-gsber.
                      append gt_kayit_gos.clear gt_kayit_gos.

                    else.
                      exit.
                    endif.
                  endloop.
                  if sy-subrc ne 0.
                    clear:lv_count.
                    loop at lt_item into ls_item where
                                   sozlesme_id  eq gt_a-sozlesme_id and
                                  sozlesme_ver eq gt_a-sozlesme_ver and
                                        monat_soz gt gt_a-monat_soz and
                                          kira_tutari is not initial.
                      lv_count = lv_count + 1.
                      if lv_count = 1.

                        gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
                        gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
                        gt_kayit_gos-hkont        = lt_06-kira_gider.
                        gt_kayit_gos-shkzg        = 'H'.
                        gt_kayit_gos-tutar        =
                       ( ls_item-kira_tutari / gt_a-odeme_period ) * -1.
                        gt_kayit_gos-waers        = gt_a-waers.
                        gt_kayit_gos-txt50
                        = 'Fatura Geri Çekme Kaydı'.
                        gt_kayit_gos-budat(4)     = gt_a-gjahr.
                        gt_kayit_gos-budat+4(2)   = gt_a-monat_ger.
                        gt_kayit_gos-budat+6(2)   =
                        gt_a-soz_bas_tar+6(2).
                        gt_kayit_gos-gsber        = gt_a-gsber.
                        append gt_kayit_gos.clear gt_kayit_gos.

                        gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
                        gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
                        gt_kayit_gos-hkont        = lt_06-pesin_kira.
                        gt_kayit_gos-shkzg        = 'S'.
                        gt_kayit_gos-tutar        =
                        ( ls_item-kira_tutari / gt_a-odeme_period ).
                        gt_kayit_gos-waers        = gt_a-waers.
                        gt_kayit_gos-txt50
                        = 'Fatura Geri Çekme Kaydı'.
                        gt_kayit_gos-budat(4)     = gt_a-gjahr.
                        gt_kayit_gos-budat+4(2)   = gt_a-monat_ger.
                        gt_kayit_gos-budat+6(2)   =
                        gt_a-soz_bas_tar+6(2).
                        gt_kayit_gos-gsber        = gt_a-gsber.
                        append gt_kayit_gos.clear gt_kayit_gos.

                      else.
                        exit.
                      endif.
                    endloop.
                  endif.
                else.
                  clear:lv_count.
                  describe table lt_item lines lv_count.

                  lv_int = lv_count - lv_son_donem.

                  gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
                  gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
                  gt_kayit_gos-hkont        = lt_06-kira_gider.
                  gt_kayit_gos-shkzg        = 'H'.
                  gt_kayit_gos-tutar        =
                  ( lv_son_tutar / lv_int ) * -1.
                  gt_kayit_gos-waers        = gt_a-waers.
                  gt_kayit_gos-txt50        = 'Fatura Geri Çekme Kaydı'.
                  gt_kayit_gos-budat(4)     = gt_a-gjahr.
                  gt_kayit_gos-budat+4(2)   = gt_a-monat_ger.
                  gt_kayit_gos-budat+6(2)   = gt_a-soz_bas_tar+6(2).
                  gt_kayit_gos-gsber        = gt_a-gsber.
                  append gt_kayit_gos.clear gt_kayit_gos.

                  gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
                  gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
                  gt_kayit_gos-hkont        = lt_06-pesin_kira.
                  gt_kayit_gos-shkzg        = 'S'.
                  gt_kayit_gos-tutar        =
                    ( lv_son_tutar / lv_int ).
                  gt_kayit_gos-waers        = gt_a-waers.
                  gt_kayit_gos-txt50        = 'Fatura Geri Çekme Kaydı'.
                  gt_kayit_gos-budat(4)     = gt_a-gjahr.
                  gt_kayit_gos-budat+4(2)   = gt_a-monat_ger.
                  gt_kayit_gos-budat+6(2)   = gt_a-soz_bas_tar+6(2).
                  gt_kayit_gos-gsber        = gt_a-gsber.
                  append gt_kayit_gos.clear gt_kayit_gos.
                endif.
              endif.
            endif.
          endif.
        endif.

        if lt_item-kira_tutari is not initial and
           gt_a-gaag is not initial  and
           gt_a-odeme_period ne '01' and
           gt_a-odeme_zamani eq '01'.

          clear:lv_fark.
          lv_fark = lt_item-kira_tutari.

          if gt_a-odeme_period eq '12' and gt_a-monat_ger ne '01'.
            clear:lv_soz_don.
            lv_soz_don = ( 13 - gt_a-monat_ger ) / 12.

            gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
            gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
            gt_kayit_gos-hkont        = lt_06-pesin_kira.
            gt_kayit_gos-shkzg        = 'S'.
            gt_kayit_gos-tutar        = lv_soz_don *
                                        lt_item-kira_tutari.
            gt_kayit_gos-waers        = gt_a-waers.
            gt_kayit_gos-txt50        = 'Fatura Geri Çekme Kaydı'.
            gt_kayit_gos-budat(4)     = gt_a-gjahr.
            gt_kayit_gos-budat+4(2)   = gt_a-monat_ger.
            gt_kayit_gos-budat+6(2)   = gt_a-soz_bas_tar+6(2).
            gt_kayit_gos-gsber        = gt_a-gsber.

            lv_fark = lv_fark - gt_kayit_gos-tutar.
            append gt_kayit_gos.clear gt_kayit_gos.

            gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
            gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
            gt_kayit_gos-hkont        = lt_06-kira_gider_uv.
            gt_kayit_gos-shkzg        = 'S'.
            gt_kayit_gos-tutar        =
            ( 12 - lv_soz_don ) * lt_item-kira_tutari.
            gt_kayit_gos-waers        = gt_a-waers.
            gt_kayit_gos-txt50        = 'Fatura Geri Çekme Kaydı'.
            gt_kayit_gos-budat(4)     = gt_a-gjahr.
            gt_kayit_gos-budat+4(2)   = gt_a-monat_ger.
            gt_kayit_gos-budat+6(2)   = gt_a-soz_bas_tar+6(2).
            gt_kayit_gos-gsber        = gt_a-gsber.

            lv_fark = lv_fark - gt_kayit_gos-tutar.
            if lv_fark is not initial.
              add lv_fark to gt_kayit_gos-tutar.
              clear:lv_fark.
            endif.

            append gt_kayit_gos.clear gt_kayit_gos.

            gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
            gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
            gt_kayit_gos-hkont        = lt_06-geri_cekme.
            gt_kayit_gos-shkzg        = 'H'.
            gt_kayit_gos-tutar        = lt_item-kira_tutari * -1.
            gt_kayit_gos-waers        = gt_a-waers.
            gt_kayit_gos-txt50        = 'Fatura Geri Çekme Kaydı'.
            gt_kayit_gos-budat(4)     = gt_a-gjahr.
            gt_kayit_gos-budat+4(2)   = gt_a-monat_ger.
            gt_kayit_gos-budat+6(2)   = gt_a-soz_bas_tar+6(2).
            gt_kayit_gos-gsber        = gt_a-gsber.

            lv_fark = lv_fark - gt_kayit_gos-tutar.
            append gt_kayit_gos.clear gt_kayit_gos.

          else.

            gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
            gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
            gt_kayit_gos-hkont        = lt_06-pesin_kira.
            gt_kayit_gos-shkzg        = 'H'.
            gt_kayit_gos-tutar        = lt_item-kira_tutari * -1.
            gt_kayit_gos-waers        = gt_a-waers.
            gt_kayit_gos-txt50        = 'Fatura Geri Çekme Kaydı'.
            gt_kayit_gos-budat(4)     = gt_a-gjahr.
            gt_kayit_gos-budat+4(2)   = gt_a-monat_ger.
            gt_kayit_gos-budat+6(2)   = gt_a-soz_bas_tar+6(2).
            gt_kayit_gos-gsber        = gt_a-gsber.

            append gt_kayit_gos.clear gt_kayit_gos.

            gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
            gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
            gt_kayit_gos-hkont        = lt_06-geri_cekme.
            gt_kayit_gos-shkzg        = 'S'.
            gt_kayit_gos-tutar        = lt_item-kira_tutari.
            gt_kayit_gos-waers        = gt_a-waers.
            gt_kayit_gos-txt50        = 'Fatura Geri Çekme Kaydı'.
            gt_kayit_gos-budat(4)     = gt_a-gjahr.
            gt_kayit_gos-budat+4(2)   = gt_a-monat_ger.
            gt_kayit_gos-budat+6(2)   = gt_a-soz_bas_tar+6(2).
            gt_kayit_gos-gsber        = gt_a-gsber.

            append gt_kayit_gos.clear gt_kayit_gos.

          endif.
        endif.

      endif.

    endloop.
  endif.


*  "çıkış kaydı
*
*  loop at gt_a where gec_bit(4)   eq s_gjahr-low and
*                     gec_bit+4(2) eq s_monat-low.
*    "çıkış kaydı
*    clear:lv_fark.
*    read table lt_header with key sozlesme_id = gt_a-sozlesme_id
*                              sozlesme_ver  = gt_a-sozlesme_ver.
*
*    check sy-subrc eq 0.
*    read table lt_item with key sozlesme_id = gt_a-sozlesme_id
*                              sozlesme_ver  = gt_a-sozlesme_ver
*                              gjahr         = gt_a-gjahr
*                              monat_ger     = gt_a-monat_ger.
*
*    if sy-subrc eq 0.
**      gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
**      gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
***      gt_kayit_gos-hkont        = lt_06-amort_hes.
**      gt_kayit_gos-shkzg        = 'S'.
***      gt_kayit_gos-tutar_upb    = lt_item-top_amortisman *
***                                  lt_header-kursf.
***      gt_kayit_gos-tutar        = lt_item-top_amortisman.
**      gt_kayit_gos-waers        = 'TRY'.
**      gt_kayit_gos-txt50        = 'Çıkış Kaydı'.
**      gt_kayit_gos-gsber        = lt_header-gsber.
**      add gt_kayit_gos-tutar to lv_fark.
**      gt_kayit_gos-monat        = gt_a-monat_ger.
**      gt_kayit_gos-gjahr        = gt_a-gjahr.
**      append gt_kayit_gos.clear gt_kayit_gos.
*    endif.
*    read table lt_item index 1.
*    if sy-subrc eq 0.
**      gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
**      gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
**      gt_kayit_gos-hkont        = lt_06-amort_hes.
**      gt_kayit_gos-shkzg        = 'S'.
**
**      gt_kayit_gos-tutar        = lt_item-kira_yukum.
**      gt_kayit_gos-waers        = 'TRY'.
**      gt_kayit_gos-txt50        = 'Çıkış Kaydı'.
**      gt_kayit_gos-gsber        = lt_header-gsber.
**      add gt_kayit_gos-tutar to lv_fark.
**      add gt_kayit_gos-tutar_upb to lv_fark_try.
**      gt_kayit_gos-monat        = gt_a-monat_ger.
**      gt_kayit_gos-gjahr        = gt_a-gjahr.
**      append gt_kayit_gos.clear gt_kayit_gos.
*    endif.
*
**    IF lv_fark < 0.
**
**      gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
**      gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
**      gt_kayit_gos-hkont        = lt_06-amort_hes.
**      gt_kayit_gos-shkzg        = 'S'.
**      gt_kayit_gos-tutar_upb    = lt_item-kira_yukum *
**                                  lt_header-kursf.
**      gt_kayit_gos-tutar        = lt_item-kira_yukum.
**      gt_kayit_gos-waers        = 'TRY'.
**      gt_kayit_gos-txt50        = 'Çıkış Kaydı'.
**      gt_kayit_gos-gsber        = lt_header-gsber.
**      add gt_kayit_gos-tutar to lv_fark.
**      add gt_kayit_gos-tutar_upb to lv_fark_try.
**      append gt_kayit_gos.clear gt_kayit_gos.
**
**    else.
**
**      gt_kayit_gos-sozlesme_id  = gt_a-sozlesme_id.
**      gt_kayit_gos-sozlesme_ver = gt_a-sozlesme_ver.
**      gt_kayit_gos-hkont        = lt_06-amort_hes.
**      gt_kayit_gos-shkzg        = 'S'.
**      gt_kayit_gos-tutar_upb    = lt_item-kira_yukum *
**                                  lt_header-kursf.
**      gt_kayit_gos-tutar        = lt_item-kira_yukum.
**      gt_kayit_gos-waers        = 'TRY'.
**      gt_kayit_gos-txt50        = 'Çıkış Kaydı'.
**      gt_kayit_gos-gsber        = lt_header-gsber.
**      add gt_kayit_gos-tutar to lv_fark.
**      add gt_kayit_gos-tutar_upb to lv_fark_try.
**      append gt_kayit_gos.clear gt_kayit_gos.
**
**    ENDIF.
*
*  endloop.
*
*  "çıkış kaydı

  loop at gt_kayit_gos.
    case gt_kayit_gos-txt50.
      when 'Açılış Kaydı'.
        lv_kayit_turu = '01'.
      when 'Dönemselleştirme Kaydı'.
        lv_kayit_turu = '04'.
      when 'Amortisman Kaydı'.
        lv_kayit_turu = '03'.
      when 'Faiz Kaydı'.
        lv_kayit_turu = '02'.
      when 'Ödeme Geri Çekme Kaydı'.
        lv_kayit_turu = '05'.
      when 'Fatura Geri Çekme Kaydı'.
        lv_kayit_turu = '07'.
    endcase.

    clear:lt_016[],lt_016.
    select * from /eczb/ufrs_t_016 into table lt_016
        where sozlesme_id eq gt_kayit_gos-sozlesme_id
          and sozlesme_ver eq gt_kayit_gos-sozlesme_ver
          and bukrs eq p_bukrs
          and gjahr eq s_gjahr-low
          and monat eq s_monat-low
          and kayit_turu = lv_kayit_turu.

    sort lt_016 by belnr descending.
    read table lt_016 index 1.
    if sy-subrc eq 0.
      if rd_belnr = 'X'.
        if lt_016-stblg is initial.
          gt_kayit_gos-belnr = lt_016-belnr.
        endif.
      elseif rd_stblg = 'X'.
        gt_kayit_gos-belnr = lt_016-stblg.
      endif.
    endif.
    call function 'CONVERSION_EXIT_ALPHA_INPUT'
      exporting
        input  = gt_kayit_gos-hkont
      importing
        output = gt_kayit_gos-hkont.
    modify gt_kayit_gos.
  endloop.

  sort gt_kayit_gos    by sozlesme_id.
*  sort gt_kayit_gos_bp by sozlesme_id.
endform.                    " SIMULASYON
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV
*&---------------------------------------------------------------------*
form display_alv .
  data: l_cat like line of ct_fieldcat,
        index type i.

  call function 'REUSE_ALV_FIELDCATALOG_MERGE'
    exporting
      i_program_name     = sy-repid
      i_internal_tabname = 'GT_KAYIT_GOS'
      i_inclname         = sy-repid
    changing
      ct_fieldcat        = ct_fieldcat.

  define set_text.
    l_cat-seltext_s = l_cat-seltext_m = l_cat-seltext_l =
    l_cat-reptext_ddic = &1.
  end-of-definition.

  loop at ct_fieldcat into l_cat.
    case l_cat-fieldname.
      when 'BELNR'.
        l_cat-hotspot = 'X'.
      when 'TUTAR'.
        set_text 'Tutar'.
      when 'AUFNR'.
        set_text 'Siparis'.
      when 'SOZLESME_VER'.
        set_text 'Sözleşme versiyonu'.
      when 'SOZLESME_ID'.
        set_text 'Sözlesme ID'.
*        l_cat-no_out = 'X'.
      when 'MARK'.
        l_cat-no_out = 'X'.
      when others.
    endcase.
    modify ct_fieldcat from l_cat.
  endloop.

  gs_layo-zebra             = 'X'.
  gs_layo-colwidth_optimize = 'X'.
  gs_layo-box_fieldname     = 'MARK'.

  call function 'REUSE_ALV_GRID_DISPLAY'
    exporting
      i_bypassing_buffer       = 'X'
      i_callback_program       = sy-repid
      is_layout                = gs_layo
      i_callback_pf_status_set = 'PF_STATUS_SET_X'
      i_callback_user_command  = 'USER_COMMAND_X'
      it_fieldcat              = ct_fieldcat[]
      it_sort                  = gt_sort[]
      i_grid_settings          = gs_glay
      i_save                   = 'A'
    tables
      t_outtab                 = gt_kayit_gos[]
    exceptions
      program_error            = 1
      others                   = 2.
endform.                    " DISPLAY_ALV
*&---------------------------------------------------------------------*
*&      Form  standard_fullscreen
*&---------------------------------------------------------------------*
form pf_status_set_x using rt_extab type slis_t_extab.
  data: lin type i.
  clear:gt_excluding[].
  if s_sozdu-low eq '05'.
    append 'SAC' to gt_excluding.
    append 'SFK' to gt_excluding.
    append 'SAK' to gt_excluding.
    append 'SDK' to gt_excluding.
    append 'ALL' to gt_excluding.
  else.
    append 'FES' to gt_excluding.
  endif.
  set pf-status 'GUI_X' excluding gt_excluding.
  set titlebar  'GUI_TITLE' with lin.
endform.                    " DISPLAY_ALV

*&---------------------------------------------------------------------
*&      Form  user_command
*&---------------------------------------------------------------------
form user_command_x using r_ucomm     like sy-ucomm
                        rs_selfield type slis_selfield.
  data:lv_kayit_turu type /eczb/ufrs_t_016-kayıt_turu,
       lv_kayit_tipi(2),
       lv_tumu,
       lt_messtab type table of symsg with header line.

  constants: lc_belnr    type belnr_d   value 'BELNR',
             lc_fb03     type tcode     value 'FB03',
             lc_belnr_id type memoryid  value 'BLN',
             lc_bukrs_id type memoryid  value 'BUK',
             lc_gjahr_id type memoryid  value 'GJR'.
  clear:gt_messtab[],gt_messtab.
  case r_ucomm.
    when '&F03' or '&F15'.
      leave to screen 0.
    when '&IC1'.

      read table gt_kayit_gos index rs_selfield-tabindex.
      check sy-subrc eq 0 and gt_kayit_gos-belnr is not initial.

      set parameter id lc_belnr_id field gt_kayit_gos-belnr.
      set parameter id lc_bukrs_id field p_bukrs.
      set parameter id lc_gjahr_id field s_gjahr-low.

      call transaction lc_fb03 and skip first screen.
    when '&F12'.
      leave program.
    when 'FES'.
      lv_kayit_turu = '06'.
      perform fesih_kaydı using lv_kayit_turu.
    when 'ALL'.

      if rd_belnr = 'X'.
        lv_tumu = 'X'.

        lv_kayit_turu = '01'.
        lv_kayit_tipi = 'AC'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        if lv_kontrol is initial.
        perform create_fi_doc using lv_kayit_tipi lv_kayit_turu lv_tumu.
*        endif.
        clear:lv_kontrol.
        lv_kayit_turu = '02'.
        lv_kayit_tipi = 'FK'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        if lv_kontrol is initial.
        perform create_fi_doc using lv_kayit_tipi lv_kayit_turu lv_tumu.
*        endif.
        clear:lv_kontrol.
        lv_kayit_turu = '03'.
        lv_kayit_tipi = 'AK'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        if lv_kontrol is initial.
        perform create_fi_doc using lv_kayit_tipi lv_kayit_turu lv_tumu.
*        endif.
        clear:lv_kontrol.
        lv_kayit_turu = '04'.
        lv_kayit_tipi = 'DK'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        if lv_kontrol is initial.
        perform create_fi_doc using lv_kayit_tipi lv_kayit_turu
                                                              lv_tumu.
*        endif.
        clear:lv_kontrol.
        lv_kayit_turu = '05'.
        lv_kayit_tipi = 'OG'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        if lv_kontrol is initial.
        perform create_fi_doc using lv_kayit_tipi lv_kayit_turu
                                                              lv_tumu.
*        endif.
        clear:lv_kontrol.
        lv_kayit_turu = '07'.
        lv_kayit_tipi = 'FG'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        if lv_kontrol is initial.
        perform create_fi_doc using lv_kayit_tipi lv_kayit_turu
                                                              lv_tumu.
*        endif.
      elseif rd_stblg = 'X'.
        lv_tumu = 'X'.

        lv_kayit_turu = '01'.
        lv_kayit_tipi = 'AC'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        if lv_kontrol is initial.
        perform create_fi_doc_rev using lv_kayit_tipi lv_kayit_turu
                                                              lv_tumu.
*        endif.
        clear  lv_kontrol.
        lv_kayit_turu = '02'.
        lv_kayit_tipi = 'FK'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        if lv_kontrol is initial.
        perform create_fi_doc_rev using lv_kayit_tipi lv_kayit_turu
                                                              lv_tumu.
*        endif.
        clear  lv_kontrol.
        lv_kayit_turu = '03'.
        lv_kayit_tipi = 'AK'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        if lv_kontrol is initial.
        perform create_fi_doc_rev using lv_kayit_tipi lv_kayit_turu
                                                              lv_tumu.
*        endif.
        clear  lv_kontrol.
        lv_kayit_turu = '04'.
        lv_kayit_tipi = 'DK'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        if lv_kontrol is initial.
        perform create_fi_doc_rev using lv_kayit_tipi lv_kayit_turu
                                                              lv_tumu.
*        endif.
        clear  lv_kontrol.
        lv_kayit_turu = '05'.
        lv_kayit_tipi = 'OG'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        if lv_kontrol is initial.
        perform create_fi_doc_rev using lv_kayit_tipi lv_kayit_turu
                                                              lv_tumu.
*        endif.
        clear  lv_kontrol.
        lv_kayit_turu = '07'.
        lv_kayit_tipi = 'FG'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        if lv_kontrol is initial.
        perform create_fi_doc_rev using lv_kayit_tipi lv_kayit_turu
                                                              lv_tumu.
*        endif.
      endif.
    when 'SGK'.
      lv_kayit_turu = '05'.
      lv_kayit_tipi = 'OG'.
      if rd_belnr = 'X'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        check lv_kontrol is initial.
        perform create_fi_doc using lv_kayit_tipi lv_kayit_turu lv_tumu.
      elseif rd_stblg = 'X'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        check lv_kontrol is initial.
        perform create_fi_doc_rev using lv_kayit_tipi lv_kayit_turu
                                                              lv_tumu.
      endif.
      lv_kayit_turu = '07'.
      lv_kayit_tipi = 'FG'.
      if rd_belnr = 'X'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        check lv_kontrol is initial.
        perform create_fi_doc using lv_kayit_tipi lv_kayit_turu lv_tumu.
      elseif rd_stblg = 'X'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        check lv_kontrol is initial.
        perform create_fi_doc_rev using lv_kayit_tipi lv_kayit_turu
                                                              lv_tumu.
      endif.
    when 'SFK'.
      lv_kayit_turu = '02'.
      lv_kayit_tipi = 'FK'.
      if rd_belnr = 'X'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        check lv_kontrol is initial.
        perform create_fi_doc using lv_kayit_tipi lv_kayit_turu lv_tumu.
      elseif rd_stblg = 'X'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        check lv_kontrol is initial.
        perform create_fi_doc_rev using lv_kayit_tipi lv_kayit_turu
                                                              lv_tumu.
      endif.
    when 'SAK'.
      lv_kayit_turu = '03'.
      lv_kayit_tipi = 'AK'.
      if rd_belnr = 'X'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        check lv_kontrol is initial.
        perform create_fi_doc using lv_kayit_tipi lv_kayit_turu lv_tumu.
      elseif rd_stblg = 'X'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        check lv_kontrol is initial.
        perform create_fi_doc_rev using lv_kayit_tipi lv_kayit_turu
                                                              lv_tumu.
      endif.
    when 'SDK'.
      lv_kayit_turu = '04'.
      lv_kayit_tipi = 'DK'.
      if rd_belnr = 'X'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        check lv_kontrol is initial.
        perform create_fi_doc using lv_kayit_tipi lv_kayit_turu lv_tumu.
      elseif rd_stblg = 'X'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        check lv_kontrol is initial.
        perform create_fi_doc_rev using lv_kayit_tipi lv_kayit_turu
                                                              lv_tumu.
      endif.
    when 'SAC'.
      lv_kayit_turu = '01'.
      lv_kayit_tipi = 'AC'.
      if rd_belnr = 'X'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        check lv_kontrol is initial.
        perform create_fi_doc using lv_kayit_tipi lv_kayit_turu lv_tumu.
      elseif rd_stblg = 'X'.
        perform fi_control using lv_kayit_turu
                                 lv_kayit_tipi changing lv_kontrol.
*        check lv_kontrol is initial.
        perform create_fi_doc_rev using lv_kayit_tipi lv_kayit_turu
                                                              lv_tumu.
      endif.
    when others.

  endcase.

  if gt_messtab[] is not initial.
    call function 'RHVM_SHOW_MESSAGE'
      exporting
        mess_header = 'Mesajlar'
      tables
        tem_message = gt_messtab
      exceptions
        canceled    = 1
        others      = 2.
  endif.
  clear: r_ucomm.
  rs_selfield-refresh = 'X'.
endform.                    "user_command
*&---------------------------------------------------------------------*
*&      Form  GET_ALV_DATA
*&---------------------------------------------------------------------*
form get_alv_data .
*  data: lv_name1 type lfa1-name1,
*        lv_name2 type lfa1-name2.
*
*  if s_gjahr[] is not initial.
*    delete gt_kalem where gjahr not in s_gjahr.
*  endif.
*  if s_monat[] is not initial.
*    delete gt_kalem where monat_ger not in s_monat.
*  endif.
*  if p_bukrs is not initial .
*    delete gt_kalem where bukrs ne p_bukrs.
*  endif.
*  if p_sozid is not initial.
*    delete gt_kalem where sozlesme_id ne p_sozid.
*  endif.
*
*  loop at gt_kalem.
*    read table gt_upload with key sozlesme_id = gt_kalem-sozlesme_id.
*    check sy-subrc eq 0.
*    if p_sozno is not initial and gt_upload-sozlesme_no ne p_sozno.
*      continue.
*    endif.
*    if p_sozve is not initial and gt_upload-sozlesme_ver ne p_sozve.
*      continue.
*    endif.
*    if p_kirtu is not initial and gt_upload-kiralama_turu ne p_kirtu.
*      continue.
*    endif.
*    "sözleşme durumu text hata çikabilir
*    if p_lifnr is not initial and gt_upload-lifnr ne p_lifnr.
*      continue.
*    endif.
*
*    clear: gt_a,gt_a_bp.
*    if rd_bpb = 'X'.
*      gt_a_bp-sozlesme_id   = gt_upload-sozlesme_id.
*      gt_a_bp-sozlesme_ver  = gt_upload-sozlesme_ver.
*      gt_a_bp-soz_durumu    = gt_upload-soz_durumu.
*      case gt_a_bp-soz_durumu.
*        when '01'.
*          gt_a_bp-soz_durumu_t = 'Aktif'.
*        when '02'.
*          gt_a_bp-soz_durumu_t = 'Pasif'.
*        when '03'.
*          gt_a_bp-soz_durumu_t = 'Gölge'.
*      endcase.
*      gt_a_bp-bukrs         = gt_upload-bukrs.
*      gt_a_bp-gjahr         = gt_kalem-gjahr.
*      gt_a_bp-monat         = gt_kalem-monat.
*      gt_a_bp-monat_ger     = gt_kalem-monat_ger.
*      gt_a_bp-kiralama_turu = gt_upload-kiralama_turu.
*      read table gt_001 with key kiralama_turu = gt_a_bp-kiralama_turu.
*      if sy-subrc eq 0.
*        gt_a_bp-kiraturu_t = gt_001-text50.
*      endif.
*      gt_a_bp-sozlesme_no   = gt_upload-sozlesme_no.
*      gt_a_bp-gec_bas       = gt_upload-gec_bas.
*      gt_a_bp-gec_bit       = gt_upload-gec_bit.
*      gt_a_bp-lifnr         = gt_upload-lifnr.
*      clear: lv_name1,lv_name2.
*      if gt_a_bp-lifnr is not initial.
*        select single name1 name2 from lfa1 into (lv_name1, lv_name2)
*          where lifnr = gt_a_bp-lifnr.
*        if sy-subrc eq 0.
*          concatenate lv_name1 lv_name2 into gt_a_bp-lifnr_t
*          separated by space.
*        endif.
*      endif.
*      gt_a_bp-waers          = gt_upload-waers.
*      gt_a_bp-gsber          = gt_upload-gsber.
*      gt_a_bp-kostl          = gt_upload-kostl.
*      gt_a_bp-aufnr          = gt_upload-aufnr.
*      gt_a_bp-kul_hak_bpb    = gt_kalem-kul_hak_bpb.
*      gt_a_bp-yukumluluk_bpb = gt_kalem-yukumluluk_bpb.
*      gt_a_bp-wrbtr          = gt_kalem-wrbtr.
*      gt_a_bp-amort_bpb      = gt_kalem-amort_bpb.
*      gt_a_bp-faiz_bpb       = gt_kalem-faiz_bpb.
*
*      gt_a_bp-kul_hak_upb    = gt_kalem-kul_hak_upb.
*      gt_a_bp-yukumluluk_upb = gt_kalem-yukumluluk_upb.
*      gt_a_bp-dmbtr          = gt_kalem-dmbtr.
*      gt_a_bp-amort_upb      = gt_kalem-amort_upb.
*      gt_a_bp-faiz_upb       = gt_kalem-faiz_upb.
*      gt_a_bp-waers_t        = 'TRY'.
*      append gt_a_bp.clear gt_a_bp.
*    elseif rd_upb = 'X'.
*      gt_a-sozlesme_id   = gt_upload-sozlesme_id.
*      gt_a-sozlesme_ver  = gt_upload-sozlesme_ver.
*      gt_a-soz_durumu    = gt_upload-soz_durumu.
*      case gt_a-soz_durumu.
*        when '01'.
*          gt_a-soz_durumu_t = 'Aktif'.
*        when '02'.
*          gt_a-soz_durumu_t = 'Pasif'.
*        when '03'.
*          gt_a-soz_durumu_t = 'Gölge'.
*      endcase.
*      gt_a-bukrs         = gt_upload-bukrs.
*      gt_a-gjahr         = gt_kalem-gjahr.
*      gt_a-monat_soz     = gt_kalem-monat.
*      gt_a-monat_ger     = gt_kalem-monat_ger.
*      gt_a-kiralama_turu = gt_upload-kiralama_turu.
*      read table gt_001 with key kiralama_turu = gt_a-kiralama_turu.
*      if sy-subrc eq 0.
*        gt_a-kiraturu_t = gt_001-text50.
*      endif.
*      gt_a-sozlesme_no   = gt_upload-sozlesme_no.
*      gt_a-gec_bas       = gt_upload-gec_bas.
*      gt_a-gec_bit       = gt_upload-gec_bit.
*      gt_a-lifnr         = gt_upload-lifnr.
*      clear: lv_name1,lv_name2.
*      if gt_a-lifnr is not initial.
*        select single name1 name2 from lfa1 into (lv_name1, lv_name2)
*          where lifnr = gt_a-lifnr.
*        if sy-subrc eq 0.
*          concatenate lv_name1 lv_name2 into gt_a-lifnr_t
*          separated by space.
*        endif.
*      endif.
*      gt_a-waers         = gt_upload-waers.
*      gt_a-gsber         = gt_upload-gsber.
*      gt_a-kostl         = gt_upload-kostl.
*      gt_a-aufnr         = gt_upload-aufnr.
*      gt_a-kul_hak       = gt_kalem-kul_hak_upb.
*      gt_a-yukumluluk    = gt_kalem-yukumluluk_upb.
*      gt_a-aylik_kira    = gt_kalem-dmbtr.
*      gt_a-amort         = gt_kalem-amort_upb.
*      gt_a-faiz          = gt_kalem-faiz_upb.
*      append gt_a.clear gt_a.
*    endif.
*  endloop.
*  loop at gt_a where monat = 0.
*    gt_a-aylik_kira = 0.
*    modify gt_a.
*  endloop.
*  loop at gt_a_bp where monat = 0.
*    gt_a_bp-wrbtr = 0.
*    gt_a_bp-dmbtr = 0.
*    modify gt_a_bp.
*  endloop.
endform.                    " GET_ALV_DATA
*&---------------------------------------------------------------------*
*&      Form  UPDATE_TABLE
*&---------------------------------------------------------------------*
form update_table.
  data:lt_messtab type table of bapiret2 with header line.

  data:lv_type        type bapiret2-type      ,
       lv_id          type bapiret2-id        ,
       lv_number      type bapiret2-number    ,
       lv_message_v1  type bapiret2-message_v1,
       lv_message_v2  type bapiret2-message_v2,
       lv_message_v3  type bapiret2-message_v3,
       lv_message_v4  type bapiret2-message_v4.
  ranges: r_id for /eczb/ufrs_t_003-sozlesme_id.

  clear:r_id[],r_id.
  loop at gt_baslik.
    r_id-sign = 'I'.
    r_id-option = 'EQ'.
    r_id-low = gt_baslik-sozlesme_id.
    append r_id.clear r_id.
  endloop.

  if gt_kalem[] is not initial.
    if r_id[] is not initial.
      delete from /eczb/ufrs_t_003 where sozlesme_id in r_id.
      if sy-subrc eq 0.
        commit work and  wait.
      endif.
    endif.
    try.
        insert /eczb/ufrs_t_003 from table gt_kalem.
        if sy-subrc eq 0.
          commit work and wait.
          lv_type   = 'S'.
          lv_number = '000'.
          lv_id     = '/ECZB/UFRS16'.

          perform add_message tables lt_messtab
                              using lv_type lv_id lv_number.
        else.
          call function 'BAPI_TRANSACTION_ROLLBACK'.
          lv_type   = 'E'.
          lv_number = '003'.
          lv_id     = '/ECZB/UFRS16'.
          perform add_message tables lt_messtab
                              using lv_type lv_id lv_number.
        endif.
      catch cx_sy_open_sql_db.
        lv_type   = 'E'.
        lv_number = '003'.
        lv_id     = '/ECZB/UFRS16'.
        perform add_message tables lt_messtab
                            using lv_type lv_id lv_number.
    endtry.
  else.
    lv_type   = 'E'.
    lv_number = '003'.
    lv_id     = '/ECZB/UFRS16'.
    perform add_message tables lt_messtab
                        using lv_type lv_id lv_number.
  endif.

  if gt_baslik[] is not initial.
    if r_id[] is not initial.
      delete from /eczb/ufrs_t_002 where sozlesme_id in r_id.
      if sy-subrc eq 0.
        commit work and  wait.
      endif.
    endif.
    try.
        insert /eczb/ufrs_t_002 from table gt_baslik.
        if sy-subrc eq 0.
          commit work and wait.
          lv_type   = 'S'.
          lv_number = '001'.
          lv_id     = '/ECZB/UFRS16'.
          perform add_message tables lt_messtab
                              using lv_type lv_id lv_number.

        else.
          call function 'BAPI_TRANSACTION_ROLLBACK'.
          lv_type   = 'E'.
          lv_number = '004'.
          lv_id     = '/ECZB/UFRS16'.
          perform add_message tables lt_messtab
                              using lv_type lv_id lv_number.

        endif.
      catch cx_sy_open_sql_db.
        lv_type   = 'E'.
        lv_number = '004'.
        lv_id     = '/ECZB/UFRS16'.
        perform add_message tables lt_messtab
                            using lv_type lv_id lv_number.
    endtry.
  else.
    lv_type   = 'E'.
    lv_number = '004'.
    lv_id     = '/ECZB/UFRS16'.
    perform add_message tables lt_messtab
                        using lv_type lv_id lv_number.
  endif.
  try.
      if r_id[] is not initial.
        delete from /eczb/ufrs_t_006 where sozlesme_id in r_id.
        if sy-subrc eq 0.
          commit work and  wait.
        endif.
      endif.
      insert /eczb/ufrs_t_006 from table gt_upload_hkont.
      if sy-subrc eq 0.
        commit work and wait.
        lv_type   = 'S'.
        lv_number = '002'.
        lv_id     = '/ECZB/UFRS16'.
        perform add_message tables lt_messtab
                            using lv_type lv_id lv_number.

      else.
        call function 'BAPI_TRANSACTION_ROLLBACK'.
        lv_type   = 'E'.
        lv_number = '005'.
        lv_id     = '/ECZB/UFRS16'.
        perform add_message tables lt_messtab
                            using lv_type lv_id lv_number.

      endif.
    catch cx_sy_open_sql_db.
      lv_type   = 'E'.
      lv_number = '005'.
      lv_id     = '/ECZB/UFRS16'.
      perform add_message tables lt_messtab
                          using lv_type lv_id lv_number.
  endtry.

  if lt_messtab[] is not initial.
    call function 'RHVM_SHOW_MESSAGE'
      exporting
        mess_header = 'Mesajlar'
      tables
        tem_message = lt_messtab
      exceptions
        canceled    = 1
        others      = 2.
  endif.

endform.                    " UPDATE_TABLE
*&---------------------------------------------------------------------*
*&      Form  ADD_MESSAGE
*&---------------------------------------------------------------------*
form add_message tables messtab structure bapiret2
                using type type bapiret2-type id   type bapiret2-id
                number type bapiret2-number.

  clear:messtab.
  messtab-type       = type.
  messtab-id         = id.
  messtab-number     = number.
  append messtab.clear messtab.

endform.                    " ADD_MESSAGE
*&---------------------------------------------------------------------*
*&      Form  GET_DATA_SS
*&---------------------------------------------------------------------*
form get_data_ss .
  data: lv_name1 type lfa1-name1,
        lv_name2 type lfa1-name2,
        lv_don   type p length 6 decimals 3,
        lv_int   type i,
        lv_count type i,
        lt_header type table of /eczb/ufrs_t_002 with header line.

  select * from /eczb/ufrs_t_006 into table gt_upload_hkont.

  select a~sozlesme_id
           a~sozlesme_ver
           a~soz_durumu
           a~bukrs
           b~gjahr
           b~monat_ger
           b~monat_soz
           a~kiralama_turu
           a~sozlesme_no
           a~gec_bas
           a~gec_bit
           a~lifnr
           a~waers
           a~gsber
           a~kostl
           a~aufnr
           a~iptal_tarihi
           a~iptal_id
           a~plaka
           a~pfkber
           a~selkz
           a~matbu_no
           a~nvr
           a~odeme_period
           a~odeme_zamani
           a~satin_alma_op
           a~yenileme_op
           a~fesih_op
           a~satin_alma_op_txt
           a~yenileme_op_txt
           a~fesih_op_txt
           a~vbund
           a~soz_bas_tar
           a~sabit_faiz
           a~prctr
           a~ilk_odm_tar
           a~aylik_kira
           a~pesin_odeme
           a~kull_hak_fark
           b~kira_tutari
           b~nbd
           b~kira_yukum
           b~kira_yukum_ka
           b~faiz
           b~veri_kull
           b~veri_kull_ka
           b~amortisman
           b~waers
           b~kira_tutari_eur
           b~nbd_eur
           b~kira_yukum_eur
           b~kira_yukum_ka_eur
           b~faiz_eur
           b~veri_kull_eur
           b~veri_kull_ka_eur
           b~amortisman_eur
           b~waers_eur
           b~kira_tutari_usd
           b~nbd_usd
           b~kira_yukum_usd
           b~kira_yukum_ka_usd
           b~faiz_usd
           b~veri_kull_usd
           b~veri_kull_ka_usd
           b~amortisman_usd
           b~waers_usd
           b~kira_tutari_try
           b~nbd_try
           b~kira_yukum_try
           b~kira_yukum_ka_try
           b~faiz_try
           b~veri_kull_try
           b~veri_kull_ka_try
           b~amortisman_try
           b~waers_try
           b~kur_farki
           a~fesih_tarihi
           a~selkz
           a~txt50
           a~gaag
           a~artis_donemi
           a~artis_kodu
           a~kursf
             from /eczb/ufrs_t_002 as a
      inner join /eczb/ufrs_t_011 as b
                                on  a~sozlesme_id  eq b~sozlesme_id
                                and a~sozlesme_ver eq b~sozlesme_ver
       into corresponding fields of table gt_a
    where a~bukrs       eq p_bukrs
      and b~monat_ger   in s_monat
      and b~gjahr       in s_gjahr
      and a~gec_bas     in s_gecba
      and a~gec_bit     in s_gecbt
      and a~aufnr       in s_aufnr
      and a~soz_durumu  in s_sozdu
      and a~sozlesme_id in s_sozid.

  if s_sozdu-low eq '05'.
    loop at gt_a.
      if gt_a-gjahr     ne gt_a-fesih_tarihi(4) and
         gt_a-monat_ger ne gt_a-fesih_tarihi+4(2).
        delete gt_a.
      endif.
    endloop.
  elseif s_sozdu-low eq '04'.
    loop at gt_a.
      if gt_a-gjahr     ne gt_a-iptal_tarihi(4) and
         gt_a-monat_ger ne gt_a-iptal_tarihi+4(2).
        delete gt_a.
      endif.
    endloop.
  endif.

  delete gt_a where selkz eq 'X'.
*  if rd_bpb = 'X'.

  "1 yıl altı sözleşmeler
*    if p_1yil is not initial.
*      select * from /eczb/ufrs_t_002 into table gt_baslik_1a
*          where bukrs      = p_bukrs
*            and gec_bas    in s_gecba
*            and gec_bit    in s_gecbt
*            and aufnr      in s_aufnr
*            and soz_durumu = '03'.
*    endif.

*  elseif rd_upb = 'X'.
**    select a~sozlesme_id
**           a~sozlesme_ver
**           a~soz_durumu
**           a~bukrs
**           b~gjahr
**           b~monat_ger
**           b~monat
**           a~kiralama_turu
**           a~sozlesme_no
**           a~gec_bas
**           a~gec_bit
**           a~lifnr
**           a~waers
**           a~gsber
**           a~kostl
**           a~aufnr
**           b~kul_hak_upb
**           b~yukumluluk_upb
**           b~dmbtr
**           b~amort_upb
**           b~faiz_upb
**           a~iptal_tarihi
**           a~iptal_id
**               from /eczb/ufrs_t_002 as a
**        inner join /eczb/ufrs_t_003 as b on a~sozlesme_id =
**b~sozlesme_id
**         into table gt_a
**      where a~bukrs      = p_bukrs
**        and b~monat_ger  in s_monat
**        and b~gjahr      in s_gjahr
**        and a~gec_bas    in s_gecba
**        and a~gec_bit    in s_gecbt
**        and a~aufnr      in s_aufnr
**        and a~soz_durumu in s_sozdu.
**
**    "1 yıl altı sözleşmeler
**    if p_1yil is not initial.
**      select * from /eczb/ufrs_t_002 into table gt_baslik_1a
**          where bukrs      = p_bukrs
**            and gec_bas    in s_gecba
**            and gec_bit    in s_gecbt
**            and aufnr      in s_aufnr
**            and soz_durumu = '03'.
*  endif.


*  if gt_a[] is not initial.
**    loop at gt_baslik_1a.
**      clear gt_a.
**      move-corresponding gt_baslik_1a to gt_a.
**      gt_a-aylik_kira = gt_baslik_1a-dmbtr.
**      append gt_a.
**    endloop.
*  elseif gt_a_bp[] is not initial.
**    loop at gt_baslik_1a.
**      clear gt_a_bp.
**      move-corresponding gt_baslik_1a to gt_a_bp.
**      gt_a_bp-dmbtr = gt_baslik_1a-dmbtr.
**      gt_a_bp-wrbtr = gt_baslik_1a-wrbtr.
**      append gt_a_bp.
**    endloop.
*  endif.

*  if p_sozid is not initial.
*    delete gt_a            where sozlesme_id ne p_sozid.
*    delete gt_a_bp         where sozlesme_id ne p_sozid.
*    delete gt_upload_hkont where sozlesme_id ne p_sozid.
*  endif.
  if p_sozno is not initial.
    delete gt_a    where sozlesme_no ne p_sozno.
    delete gt_a_bp where sozlesme_no ne p_sozno.
  endif.
  if p_sozve is not initial.
    delete gt_a    where sozlesme_ver ne p_sozve.
    delete gt_a_bp where sozlesme_ver ne p_sozve.
  endif.
  if p_kirtu is not initial.
    delete gt_a    where kiralama_turu ne p_kirtu.
    delete gt_a_bp where kiralama_turu ne p_kirtu.
  endif.
  if p_lifnr is not initial.
    delete gt_a    where lifnr ne p_lifnr.
    delete gt_a_bp where lifnr ne p_lifnr.
  endif.

  select * from /eczb/ufrs_t_002 into table lt_header
    for all entries in gt_a
    where bukrs = gt_a-bukrs
      and sozlesme_id = gt_a-sozlesme_id
      and soz_durumu in ('01', '02').

  delete lt_header where selkz eq 'X'.

  loop at gt_a.

    call function 'MONTHS_BETWEEN_TWO_DATES'
      exporting
        i_datum_bis = sy-datum
        i_datum_von = gt_a-soz_bas_tar
      importing
        e_monate    = lv_int.

    if gt_a-artis_donemi is not initial.
      lv_don = lv_int / gt_a-artis_donemi.

      call function 'ROUND'
        exporting
          input  = lv_don
          sign   = '-'
        importing
          output = lv_don.

      clear:lv_count.
      loop at lt_header where sozlesme_id = gt_a-sozlesme_id
                          and sozlesme_ver ne '01'.
        add 1 to lv_count.
      endloop.
      if lv_count lt lv_int.
        makro_messtab 'E' '/ECZB/UFRS16' '034'
               gt_a-sozlesme_id '' '' ''.
        delete gt_a.
        continue.
      endif.
    endif.

    case gt_a-soz_durumu.
      when '01'.
        gt_a-soz_durumu_t = 'Aktif'.
      when '02'.
        gt_a-soz_durumu_t = 'Pasif'.
      when '03'.
        gt_a-soz_durumu_t = 'Gölge'.
      when '04'.
        gt_a-soz_durumu_t = 'İptal'.
      when '05'.
        gt_a-soz_durumu_t = 'Fesih'.
    endcase.
    read table gt_001 with key kiralama_turu = gt_a-kiralama_turu.
    if sy-subrc eq 0.
      gt_a-kiraturu_t = gt_001-text50.
    endif.
    clear: lv_name1,lv_name2.
    if gt_a-lifnr is not initial.
      select single name1 name2 from lfa1 into (lv_name1, lv_name2)
        where lifnr eq gt_a-lifnr.
      if sy-subrc eq 0.
        concatenate lv_name1 lv_name2 into gt_a-lifnr_t
        separated by space.
      endif.
    endif.
*    read table gt_baslik_1a with key sozlesme_id = gt_a-sozlesme_id.
*    if sy-subrc eq 0.
*      gt_a-aylik_kira = gt_baslik_1a-dmbtr.
*    endif.
    modify gt_a.
  endloop.

*  loop at gt_a_bp.
*    gt_a_bp-waers_t = 'TRY'.
*    if gt_a_bp-monat = 0.
*      gt_a_bp-dmbtr = 0.
*      gt_a_bp-wrbtr = 0.
*    endif.
*    case gt_a_bp-soz_durumu.
*      when '01'.
*        gt_a_bp-soz_durumu_t = 'Aktif'.
*      when '02'.
*        gt_a_bp-soz_durumu_t = 'Pasif'.
*      when '03'.
*        gt_a_bp-soz_durumu_t = 'Gölge'.
*    endcase.
*    read table gt_001 with key kiralama_turu = gt_a_bp-kiralama_turu.
*    if sy-subrc eq 0.
*      gt_a_bp-kiraturu_t = gt_001-text50.
*    endif.
*    clear: lv_name1,lv_name2.
*    if gt_a_bp-lifnr is not initial.
*      select single name1 name2 from lfa1 into (lv_name1, lv_name2)
*        where lifnr = gt_a_bp-lifnr.
*      if sy-subrc eq 0.
*        concatenate lv_name1 lv_name2 into gt_a_bp-lifnr_t
*        separated by space.
*      endif.
*    endif.
*
*    read table gt_baslik_1a with key sozlesme_id = gt_a_bp-sozlesme_id.
*    if sy-subrc eq 0.
*      gt_a_bp-dmbtr = gt_baslik_1a-dmbtr.
*      gt_a_bp-wrbtr = gt_baslik_1a-wrbtr.
*    endif.
*    modify gt_a_bp.
*  endloop.

  sort gt_a by monat_soz.
  sort gt_messtab.
  delete adjacent duplicates from gt_messtab comparing all fields.
  if gt_messtab[] is not initial.
    call function 'RHVM_SHOW_MESSAGE'
      exporting
        mess_header = 'Mesajlar'
      tables
        tem_message = gt_messtab
      exceptions
        canceled    = 1
        others      = 2.
  endif.
endform.                    " GET_DATA_SS
*&---------------------------------------------------------------------*
*&      Form  INIT
*&---------------------------------------------------------------------*
form init_auth.

  data:ls_09 type /eczb/ufrs_t_009.
  clear:gv_aut_cont.
  select single * from /eczb/ufrs_t_009 into ls_09
    where uname  = sy-uname
      and bukrs  = p_bukrs
      and run_02 = 'X'.

  if sy-subrc ne 0.
    message s019(/eczb/ufrs16) with p_bukrs text-003 text-004
            display like 'E'.
    gv_aut_cont = 'X'.
  endif.

  select * from /eczb/ufrs_t_001 into table gt_001.
  is_variant-report = '/ECZB/UFRS16_001_1'.
  if s_sozdu-low ne '05' and s_sozdu-low ne '04'.
    if s_sozdu-low ne '01' and rd_rapor is initial.
      message text-011 type 'E'.
    endif.
  endif.
endform.                    " INIT
*&---------------------------------------------------------------------*
*&      Form  CREATE_AND_INIT_ALV_BP
*&---------------------------------------------------------------------*
form create_and_init_alv_bp .
  data: it_lvcfcat type lvc_t_fcat.
  data: ll_fc like line of gt_fc.

  create object gt_container
    exporting
      container_name              = mycontainer
    exceptions
      cntl_error                  = 1
      cntl_system_error           = 2
      create_error                = 3
      lifetime_error              = 4
      lifetime_dynpro_dynpro_link = 5.

  create object grid1
    exporting
      i_parent = gt_container.

  gs_layout-zebra      = 'X'.
  gs_layout-sel_mode   = 'D'.
  gs_layout-cwidth_opt = 'X'.

  call function 'REUSE_ALV_FIELDCATALOG_MERGE'
    exporting
      i_program_name     = sy-repid
      i_internal_tabname = 'GT_A_BP'
      i_inclname         = sy-repid
    changing
      ct_fieldcat        = gt_fieldcat.

  call function 'LVC_TRANSFER_FROM_SLIS'
    exporting
      it_fieldcat_alv = gt_fieldcat
    importing
      et_fieldcat_lvc = gt_fc
    tables
      it_data         = gt_a.

  define set_text.
    wa_fc-scrtext_s = wa_fc-scrtext_m =
    wa_fc-seltext   = wa_fc-reptext   =
    wa_fc-scrtext_l = &1.
  end-of-definition.

  loop at gt_fc into wa_fc.
    case wa_fc-fieldname.
      when 'IPTAL_TARIHI'.
        set_text 'İptal Tarihi'.
      when 'SELKZ'.
        wa_fc-no_out = 'X'.
      when 'WAERS_T'.
        wa_fc-col_pos = 21.
        wa_fc-emphasize = 'C700'.
      when 'MONAT_GER'.
        wa_fc-lzero = 'X'.
      when 'LIFNR_T'.
        set_text 'Kiralama Firmasi metni'.
        wa_fc-col_pos = 12.
      when 'SOZLESME_NO'.
        set_text 'Sözlesme No'.
      when 'GJAHR'.
        set_text 'Mali yil'.
      when 'SOZLESME_ID'.
        set_text 'Sözlesme ID'.
      when 'GSBER'.
        set_text 'Is Alani'.
      when 'BUKRS'.
        set_text 'Sirket Kodu'.
      when 'SOZLESME_VER'.
        set_text 'Sözlesme Versiyonu'.
      when 'SOZ_DURUMU'       .
        set_text 'Sözlesme Durumu'.
      when 'KIRATURU_T'       .
        set_text 'Kiramalama türü metin'.
        wa_fc-col_pos = 8.
      when 'SOZ_DURUMU_T'       .
        set_text 'Sözlesme Durumu metin'.
        wa_fc-col_pos = 3.
      when 'MONAT'       .
        wa_fc-lzero = 'X'.
        set_text 'Sözlesme Dönemi'.
      when 'GEC_BAS'       .
        set_text 'Geçerlilik Başlangiç Tarihi'.
      when 'GEC_BIT'       .
        set_text 'Geçerlilik Bitiş Tarihi'.
      when 'LIFNR'         .
        set_text 'Kiralama Firmasi'.
      when 'WAERS'         .
        set_text 'Sözlesme Para Birimi'.
      when 'AUFNR'         .
        set_text 'Iç Siparis'.
      when 'KUL_HAK_UPB'   .
        set_text 'Kullanim Hakki Tutari(UPB)'.
        wa_fc-emphasize = 'C700'.
      when 'YUKUMLULUK_UPB'.
        set_text 'Yükümlülük Tutari(UPB)'.
        wa_fc-emphasize = 'C700'.
      when 'DMBTR'    .
        set_text 'Aylik Kira Bedeli(UPB)'.
        wa_fc-emphasize = 'C700'.
      when 'AMORT_UPB'     .
        set_text 'Amortisman Tutari(UPB)'.
        wa_fc-emphasize = 'C700'.
      when 'FAIZ_UPB'      .
        set_text 'Faiz Tutari(UPB)'.
        wa_fc-emphasize = 'C700'.
      when 'KUL_HAK_BPB'   .
        set_text 'Kullanim Hakki Tutari(BPB)'.

      when 'YUKUMLULUK_BPB'.
        set_text 'Yükümlülük Tutari(BPB)'.

      when 'WRBTR'    .
        set_text 'Aylik Kira Bedeli(BPB)'.

      when 'AMORT_BPB'     .
        set_text 'Amortisman Tutari(BPB)'.

      when 'FAIZ_BPB'      .
        set_text 'Faiz Tutari(BPB)'.

    endcase.

    modify gt_fc from wa_fc.
  endloop.

  perform exclude_tb_functions changing gt_exclude.


  call method grid1->set_table_for_first_display
    exporting
      is_layout            = gs_layout
      it_toolbar_excluding = gt_exclude
      is_variant           = is_variant
      i_save               = 'X'
    changing
      it_fieldcatalog      = gt_fc[]
      it_outtab            = gt_a_bp[].

  create object event_receiver.
  set handler event_receiver->data_changed for grid1.

  call method grid1->set_toolbar_interactive.
  call method grid1->refresh_table_display.
  call method grid1->register_edit_event
    exporting
      i_event_id = cl_gui_alv_grid=>mc_evt_modified.

  call method grid1->register_edit_event
    exporting
      i_event_id = cl_gui_alv_grid=>mc_evt_enter.
endform.                    " CREATE_AND_INIT_ALV_BP
*&---------------------------------------------------------------------*
*&      Form  DISPLAY_ALV_BP
*&---------------------------------------------------------------------*
form display_alv_bp .
  data: l_cat like line of ct_fieldcat,
        index type i.

  call function 'REUSE_ALV_FIELDCATALOG_MERGE'
    exporting
      i_program_name     = sy-repid
      i_internal_tabname = 'GT_KAYIT_GOS_BP'
      i_inclname         = sy-repid
    changing
      ct_fieldcat        = ct_fieldcat.

  define set_text.
    l_cat-seltext_s = l_cat-seltext_m = l_cat-seltext_l =
    l_cat-reptext_ddic = &1.
  end-of-definition.

  loop at ct_fieldcat into l_cat.
    case l_cat-fieldname.
      when 'TUTAR_UP'.
        set_text 'Tutar(UPB)'.
      when 'TUTAR'.
        set_text 'Tutar(BPB)'.
      when 'AUFNR'.
        set_text 'Siparis'.
      when 'SOZLESME_ID'.
        set_text 'Sözlesme ID'.
*        l_cat-no_out = 'X'.
      when 'MARK'.
        l_cat-no_out = 'X'.
      when others.
    endcase.
    modify ct_fieldcat from l_cat.
  endloop.

  gs_layo-zebra             = 'X'.
  gs_layo-colwidth_optimize = 'X'.
  gs_layo-box_fieldname     = 'MARK'.

  call function 'REUSE_ALV_GRID_DISPLAY'
    exporting
      i_bypassing_buffer       = 'X'
      i_callback_program       = sy-repid
      is_layout                = gs_layo
      i_callback_pf_status_set = 'PF_STATUS_SET_X'
      i_callback_user_command  = 'USER_COMMAND_X'
      it_fieldcat              = ct_fieldcat[]
      it_sort                  = gt_sort[]
      i_grid_settings          = gs_glay
      i_save                   = 'A'
    tables
      t_outtab                 = gt_kayit_gos_bp[]
    exceptions
      program_error            = 1
      others                   = 2.
endform.                    " DISPLAY_ALV_BP
*&---------------------------------------------------------------------*
*&      Form  CHECK_AUTH
*&---------------------------------------------------------------------*
form check_auth_load .
  data:ls_09 type /eczb/ufrs_t_009.

  select single * from /eczb/ufrs_t_009 into ls_09
    where uname  = sy-uname
      and run_02 = 'X'.

  if sy-subrc ne 0.
    message text-002 type 'E'.
  endif.

endform.                    " CHECK_AUTH
*&---------------------------------------------------------------------*
*&      Form  CHECK_AUTH_BUKRS
*&---------------------------------------------------------------------*
form check_auth_bukrs .
  data:ls_09 type /eczb/ufrs_t_009.

  if s_sozdu-low = '05'.
    if rd_stblg = 'X'.
      message text-009 type 'E'.
    endif.
  else.
    loop at screen .
      if screen-name cs 'P_HKONT'.
        screen-active = 0.
        modify screen.
      endif.
    endloop.
  endif.
  if s_sozdu-low = '04'.
    if rd_stblg = 'X'.
      message text-010 type 'E'.
    endif.
  endif.

  if p_bukrs is not initial.
    select single * from /eczb/ufrs_t_009 into ls_09
      where uname  = sy-uname
        and bukrs  = p_bukrs
        and run_02 = 'X'.

    if sy-subrc ne 0.
      message s019(/eczb/ufrs16) with p_bukrs text-003 text-004
              display like 'E'.
    endif.
  endif.
endform.                    " CHECK_AUTH_BUKRS
*&---------------------------------------------------------------------*
*&      Form  CREATE_FI_DOC
*&---------------------------------------------------------------------*
form create_fi_doc using kayıt_tipi kayit_turu tumu.
  data: documentheader like bapiache09,
        accountgl      like bapiacgl09 occurs 0 with header line,
        currencyamount like bapiaccr09 occurs 0 with header line,
        lt_extension1     like bapiacextc occurs 0 with header line,
        lt_return         like bapiret2   occurs 0 with header line,
        lt_messtab        like bapiret2   occurs 0 with header line,
        obj_type like bapiache09-obj_type,
        obj_key  like bapiache09-obj_key,
        obj_sys  like bapiache09-obj_sys,
        lv_text  like bseg-sgtxt,
        lv_count type i,
        ls_06    type /eczb/ufrs_t_006,
        ls_02    type /eczb/ufrs_t_002,
        lv_value_date type bapiacgl09-value_date,
        lt_log   type table of /eczb/ufrs_t_016 with header line,
        lt_012   type table of /eczb/ufrs_t_012 with header line,
        lv_counter type /eczb/ufrs_t_012-counter,
        lv_last_day type datum,
        lv_geri_date type datum,
        lv_monat type monat,
        lv_gjahr type gjahr,
        ls_tacc_trgt_ldgr type tacc_trgt_ldgr,
        ls_019 type /eczb/ufrs_t_019,
        lv_ldgrp_gl type fagl_target_ldgrp value 'Z1'.

  define makro_gl.

    accountgl-itemno_acc = &1.
    accountgl-gl_account = &2.
    accountgl-item_text  = &3.
    accountgl-ref_key_1  = &4.
    accountgl-ref_key_2  = &5.
    accountgl-ref_key_3  = &6.
    accountgl-fis_period = &7.
    accountgl-fisc_year  = &8.
    accountgl-pstng_date = &9.
*    accountgl-value_date = sy-datum.
*    accountgl-value_date = &10.

  end-of-definition.
*  define makro_mes.
*    clear:lt_messtab.
*    lt_messtab-type       = &1.
*    lt_messtab-id         = &2.
*    lt_messtab-number     = &3.
*    lt_messtab-message    = &4.
*    lt_messtab-message_v1 = &5.
*    lt_messtab-message_v2 = &6.
*    lt_messtab-message_v3 = &7.
*    append lt_messtab.clear lt_messtab.
*  end-of-definition.

  lv_value_date = sy-datum.
*
*  read table gt_a index 1.
*  check sy-subrc eq 0.

  loop at gt_a.
    clear:lt_012[],lt_012,ls_019.

    select single * from /eczb/ufrs_t_019 into ls_019
      where bukrs eq gt_a-bukrs.

    if gt_a-gec_bas(4)   eq gt_a-gjahr and
       gt_a-gec_bas+4(2) eq gt_a-monat_ger.
    else.

      if gt_a-monat_ger = '01'.
        lv_monat = '12'.
        lv_gjahr = gt_a-gjahr - 1.
      else.
        lv_monat = gt_a-monat_ger - 1.
        lv_gjahr = gt_a-gjahr.
      endif.
    endif.

    clear:ls_06,ls_02.
    select  single * from /eczb/ufrs_t_006 into ls_06
      where sozlesme_id = gt_a-sozlesme_id.

    select single * from /eczb/ufrs_t_002 into ls_02
      where sozlesme_id  = gt_a-sozlesme_id
        and sozlesme_ver = gt_a-sozlesme_ver.

    lv_last_day(4)   = gt_a-gjahr.
    lv_last_day+4(2) = gt_a-monat_ger.
    lv_last_day+6(2) = '01'.

    call function 'SG_PS_GET_LAST_DAY_OF_MONTH'
      exporting
        day_in            = lv_last_day
      importing
        last_day_of_month = lv_last_day
      exceptions
        day_in_not_valid  = 1
        others            = 2.

    if kayıt_tipi = 'AC'.
      loop at gt_kayit_gos where sozlesme_id  = gt_a-sozlesme_id and
                                 sozlesme_ver = gt_a-sozlesme_ver and
                                 txt50 = 'Açılış Kaydı'  and
                                 mark is initial.
      endloop.
      check sy-subrc eq 0.
      "açılış kaydı
      if s_gjahr-low = gt_a-gec_bas(4) and
         s_monat-low = gt_a-gec_bas+4(2).

        clear: documentheader,lv_count.
        documentheader-bus_act    = 'RFBU'.
        documentheader-username   = sy-uname.
        documentheader-header_txt = 'Açılış kaydı'.
*        documentheader-doc_type   = 'UF'.
        documentheader-doc_type   = ls_019-blart.
        documentheader-comp_code  = gt_a-bukrs.
        documentheader-doc_date   = gt_a-gec_bas.
        documentheader-pstng_date = sy-datum.
        documentheader-fisc_year  = gt_a-gjahr.
        documentheader-fis_period = gt_a-monat_ger.

        select single acc_principle from /eczb/ufrs_t_014 into
        documentheader-acc_principle
          where bukrs = gt_a-bukrs.

        clear:lv_count,currencyamount[],currencyamount,
              accountgl[],accountgl.
        loop at gt_kayit_gos where  sozlesme_id  = gt_a-sozlesme_id and
                                 sozlesme_ver = gt_a-sozlesme_ver and
                                  txt50 = 'Açılış Kaydı'.
          lv_count = lv_count + 1.

          makro_gl lv_count gt_kayit_gos-hkont ls_02-txt50 ls_02-lifnr
                 ls_02-faiz_orani ls_02-plaka gt_a-monat_ger gt_a-gjahr
                  gt_a-gec_bas .
          accountgl-costcenter = gt_kayit_gos-kostl.
          accountgl-bus_area = gt_kayit_gos-gsber.
          append accountgl.clear accountgl.
          currencyamount-itemno_acc   = lv_count.
          currencyamount-currency     = gt_a-waers.
          currencyamount-currency_iso = gt_a-waers.
*  currencyamount-curr_type = '00'.
          currencyamount-amt_doccur = gt_kayit_gos-tutar.
          currencyamount-exch_rate  = gt_a-kursf.
          append currencyamount.clear currencyamount.
        endloop.
      else.
        makro_messtab 'E' '/ECZB/UFRS16' '025'
                     '' '' '' ''.
        continue.
      endif.
    elseif kayıt_tipi = 'FK'.
      loop at gt_kayit_gos where  sozlesme_id  = gt_a-sozlesme_id and
                                 sozlesme_ver = gt_a-sozlesme_ver and
                                 txt50 = 'Faiz Kaydı'  and
                                 mark is initial.
      endloop.
      check sy-subrc eq 0.
      if lv_monat is not initial and
        lv_gjahr is not initial.

        select * from /eczb/ufrs_t_016 into table lt_log
               where sozlesme_id eq gt_a-sozlesme_id
                 and sozlesme_ver eq gt_a-sozlesme_ver
                 and bukrs eq gt_a-bukrs
                 and kayit_turu eq kayit_turu
                 and gjahr eq lv_gjahr
                 and monat eq lv_monat.
        if sy-subrc ne 0.
          makro_messtab 'E' '/ECZB/UFRS16' '026'
                       'Faiz Kaydı' 'Faiz Kaydı' '' ''.
          continue.
        else.
          sort lt_log by belnr descending.
          read table lt_log index 1.
          if sy-subrc eq 0.
            if lt_log-belnr is not initial and lt_log-stblg is not
            initial.
              makro_messtab 'E' '/ECZB/UFRS16' '026'
                           'Faiz Kaydı' 'Faiz Kaydı' '' ''.
              continue.
            endif.
          endif.
        endif.
      endif.
      clear: documentheader.
      documentheader-bus_act    = 'RFBU'.
      documentheader-username   = sy-uname.
      documentheader-header_txt = 'UFRS16 Aylık faiz kaydı'.
*      documentheader-doc_type   = 'UF'.
      documentheader-doc_type   = ls_019-blart.
      documentheader-comp_code  = gt_a-bukrs.
      documentheader-doc_date   = lv_last_day.
      documentheader-pstng_date = sy-datum.
      documentheader-fisc_year  = gt_a-gjahr.
      documentheader-fis_period = gt_a-monat_ger.

      select single acc_principle from /eczb/ufrs_t_014 into
      documentheader-acc_principle
        where bukrs = gt_a-bukrs.

      clear:lv_count,currencyamount[],currencyamount,
            accountgl[],accountgl.

      loop at gt_kayit_gos where  sozlesme_id  = gt_a-sozlesme_id and
                                 sozlesme_ver = gt_a-sozlesme_ver and
                                 txt50 = 'Faiz Kaydı'.
        lv_count = lv_count + 1.
        makro_gl lv_count gt_kayit_gos-hkont ls_02-txt50 ls_02-lifnr
                 ls_02-faiz_orani ls_02-plaka gt_a-monat_ger gt_a-gjahr
                 lv_last_day .

        if gt_kayit_gos-kostl is not initial.
          call function 'CONVERSION_EXIT_ALPHA_INPUT'
            exporting
              input  = gt_kayit_gos-kostl
            importing
              output = gt_kayit_gos-kostl.

          accountgl-costcenter = gt_kayit_gos-kostl.
        endif.
        accountgl-bus_area = gt_kayit_gos-gsber.
        append accountgl.clear accountgl.
        currencyamount-itemno_acc   = lv_count.
        currencyamount-currency     = gt_a-waers.
        currencyamount-currency_iso = gt_a-waers.
*  currencyamount-curr_type = '00'.
        currencyamount-amt_doccur = gt_kayit_gos-tutar.
        append currencyamount.clear currencyamount.

      endloop.

    elseif kayıt_tipi = 'AK'.
      loop at gt_kayit_gos where  sozlesme_id  = gt_a-sozlesme_id and
                                 sozlesme_ver = gt_a-sozlesme_ver and
                                 txt50 = 'Amortisman Kaydı'  and
                                 mark is initial.
      endloop.
      check sy-subrc eq 0.
      if lv_monat is not initial and
        lv_gjahr is not initial.
        select * from /eczb/ufrs_t_016 into table lt_log
               where sozlesme_id eq gt_a-sozlesme_id
                 and sozlesme_ver eq gt_a-sozlesme_ver
                 and bukrs eq gt_a-bukrs
                 and kayit_turu eq kayit_turu
                 and gjahr eq lv_gjahr
                 and monat eq lv_monat.
        if sy-subrc ne 0.
          makro_messtab 'E' '/ECZB/UFRS16' '026'
                       'Amortisman Kaydı' 'Amortisman Kaydı' '' ''.
          continue.
        else.
          sort lt_log by belnr descending.
          read table lt_log index 1.
          if sy-subrc eq 0.
            if lt_log-belnr is not initial and lt_log-stblg is not
            initial.
              makro_messtab 'E' '/ECZB/UFRS16' '026'
                           'Amortisman Kaydı' 'Amortisman Kaydı' '' ''.
              continue.
            endif.
          endif.
        endif.
      endif.
      clear: documentheader.
      documentheader-bus_act    = 'RFBU'.
      documentheader-username   = sy-uname.
      documentheader-header_txt = 'UFRS16 Amortisman kaydı'.
*      documentheader-doc_type   = 'UF'.
      documentheader-doc_type   = ls_019-blart.
      documentheader-comp_code  = gt_a-bukrs.
      documentheader-doc_date   = lv_last_day.
      documentheader-pstng_date = sy-datum.
      documentheader-fisc_year  = gt_a-gjahr.
      documentheader-fis_period = gt_a-monat_ger.

      select single acc_principle from /eczb/ufrs_t_014 into
      documentheader-acc_principle
        where bukrs = gt_a-bukrs.

      clear:lv_count,currencyamount[],currencyamount,
            accountgl[],accountgl.

      loop at gt_kayit_gos where  sozlesme_id  = gt_a-sozlesme_id and
                                 sozlesme_ver = gt_a-sozlesme_ver and
                                 txt50 = 'Amortisman Kaydı'.
        lv_count = lv_count + 1.

        accountgl-itemno_acc = lv_count.
        accountgl-gl_account = gt_kayit_gos-hkont.
        accountgl-item_text  = ls_02-txt50.
        accountgl-ref_key_1  = ls_02-lifnr.
        accountgl-ref_key_2  = ls_02-faiz_orani.
        accountgl-ref_key_3  = ls_02-plaka.
        accountgl-fis_period = gt_a-monat_ger.
        accountgl-fisc_year  = gt_a-gjahr.
        accountgl-pstng_date = lv_last_day.
        shift gt_kayit_gos-hkont left deleting leading '0'.
        if gt_kayit_gos-hkont(1) = '7' or
           gt_kayit_gos-hkont(1) = '6'.

          call function 'CONVERSION_EXIT_ALPHA_INPUT'
            exporting
              input  = gt_a-kostl
            importing
              output = gt_a-kostl.

          accountgl-costcenter = gt_a-kostl.
        endif.

        accountgl-value_date = gt_a-gec_bas.
        accountgl-bus_area = gt_kayit_gos-gsber.
        append accountgl.clear accountgl.

        currencyamount-itemno_acc   = lv_count.
        currencyamount-currency     = gt_a-waers.
        currencyamount-currency_iso = gt_a-waers.
*  currencyamount-curr_type = '00'.
        currencyamount-amt_doccur = gt_kayit_gos-tutar.
        append currencyamount.clear currencyamount.

      endloop.

    elseif kayıt_tipi = 'DK'.
      loop at gt_kayit_gos where  sozlesme_id  = gt_a-sozlesme_id and
                                 sozlesme_ver = gt_a-sozlesme_ver and
                                 txt50 = 'Dönemselleştirme Kaydı'  and
                                 mark is initial.
      endloop.
      check sy-subrc eq 0.
      if lv_monat is not initial and
        lv_gjahr is not initial.
        select * from /eczb/ufrs_t_016 into table lt_log
               where sozlesme_id eq gt_a-sozlesme_id
                 and sozlesme_ver eq gt_a-sozlesme_ver
                 and bukrs eq gt_a-bukrs
                 and kayit_turu eq kayit_turu
                 and gjahr eq lv_gjahr
                 and monat eq lv_monat.
        if sy-subrc ne 0.
          makro_messtab 'E' '/ECZB/UFRS16' '026'
                       'Dönemselleştirme Kaydı'
                       'Dönemselleştirme Kaydı' '' ''.
          continue.
        else.
          sort lt_log by belnr descending.
          read table lt_log index 1.
          if sy-subrc eq 0.
            if lt_log-belnr is not initial and lt_log-stblg is not
            initial.
              makro_messtab 'E' '/ECZB/UFRS16' '026'
                           'Dönemselleştirme Kaydı'
                           'Dönemselleştirme Kaydı' '' ''.
              continue.
            endif.
          endif.
        endif.
      endif.
      clear: documentheader.
      documentheader-bus_act    = 'RFBU'.
      documentheader-username   = sy-uname.
      documentheader-header_txt = 'UFRS16 Dönemselleştirme Kaydı'.
*      documentheader-doc_type   = 'UF'.
      documentheader-doc_type   = ls_019-blart.
      documentheader-comp_code  = gt_a-bukrs.
      documentheader-doc_date   = lv_last_day.
      documentheader-pstng_date = sy-datum.
      documentheader-fisc_year  = gt_a-gjahr.
      documentheader-fis_period = gt_a-monat_ger.

      select single acc_principle from /eczb/ufrs_t_014 into
      documentheader-acc_principle
        where bukrs = gt_a-bukrs.

      clear:lv_count,currencyamount[],currencyamount,
            accountgl[],accountgl.

      loop at gt_kayit_gos where  sozlesme_id  = gt_a-sozlesme_id and
                                 sozlesme_ver = gt_a-sozlesme_ver and
                                 txt50 = 'Dönemselleştirme Kaydı'.
        lv_count = lv_count + 1.
        makro_gl lv_count gt_kayit_gos-hkont ls_02-txt50 ls_02-lifnr
                 ls_02-faiz_orani ls_02-plaka gt_a-monat_ger gt_a-gjahr
                 lv_last_day .
        accountgl-costcenter = gt_kayit_gos-kostl.
        accountgl-bus_area = gt_kayit_gos-gsber.
        append accountgl.clear accountgl.
        currencyamount-itemno_acc   = lv_count.
        currencyamount-currency     = gt_a-waers.
        currencyamount-currency_iso = gt_a-waers.
*  currencyamount-curr_type = '00'.
        currencyamount-amt_doccur = gt_kayit_gos-tutar.
        append currencyamount.clear currencyamount.

      endloop.

    elseif kayıt_tipi = 'OG'.
      loop at gt_kayit_gos where  sozlesme_id  = gt_a-sozlesme_id and
                                 sozlesme_ver = gt_a-sozlesme_ver and
                                txt50 = 'Ödeme Geri Çekme Kaydı'  and
                                 mark is initial.
        lv_geri_date = gt_kayit_gos-budat.
      endloop.
      check sy-subrc eq 0.
      if lv_monat is not initial and
        lv_gjahr is not initial.
        select * from /eczb/ufrs_t_016 into table lt_log
               where sozlesme_id eq gt_a-sozlesme_id
                 and sozlesme_ver eq gt_a-sozlesme_ver
                 and bukrs eq gt_a-bukrs
                 and kayit_turu eq kayit_turu
                 and gjahr eq lv_gjahr
                 and monat eq lv_monat.
        if sy-subrc ne 0.
          makro_messtab 'E' '/ECZB/UFRS16' '026'
                       'Ödeme Geri Çekme Kaydı'
                       'Ödeme Geri Çekme Kaydı' '' ''.
          continue.
        else.
          sort lt_log by belnr descending.
          read table lt_log index 1.
          if sy-subrc eq 0.
            if lt_log-belnr is not initial and lt_log-stblg is not
            initial.
              makro_messtab 'E' '/ECZB/UFRS16' '026'
                           'Ödeme Geri Çekme Kaydı'
                           'Ödeme Geri Çekme Kaydı' '' ''.
              continue.
            endif.
          endif.
        endif.
      endif.
      clear: documentheader.
      documentheader-bus_act    = 'RFBU'.
      documentheader-username   = sy-uname.
      documentheader-header_txt = 'UFRS16 Ödeme Geri Çekme Kaydı'.
*      documentheader-doc_type   = 'UF'.
      documentheader-doc_type   = ls_019-blart.
      documentheader-comp_code  = gt_a-bukrs.
      documentheader-doc_date   = lv_geri_date.
      documentheader-pstng_date = sy-datum.
      documentheader-fisc_year  = gt_a-gjahr.
      documentheader-fis_period = gt_a-monat_ger.

      select single acc_principle from /eczb/ufrs_t_014 into
      documentheader-acc_principle
        where bukrs = gt_a-bukrs.

      clear:lv_count,currencyamount[],currencyamount,
            accountgl[],accountgl.

      loop at gt_kayit_gos where  sozlesme_id  = gt_a-sozlesme_id and
                                 sozlesme_ver = gt_a-sozlesme_ver and
                                 txt50 = 'Ödeme Geri Çekme Kaydı'.
        lv_count = lv_count + 1.
        makro_gl lv_count gt_kayit_gos-hkont ls_02-txt50 ls_02-lifnr
                 ls_02-faiz_orani ls_02-plaka gt_a-monat_ger gt_a-gjahr
                 gt_kayit_gos-budat .
        accountgl-costcenter = gt_kayit_gos-kostl.
        accountgl-bus_area = gt_kayit_gos-gsber.
        append accountgl.clear accountgl.
        currencyamount-itemno_acc   = lv_count.
        currencyamount-currency     = gt_a-waers.
        currencyamount-currency_iso = gt_a-waers.
        currencyamount-amt_doccur = gt_kayit_gos-tutar.
        append currencyamount.clear currencyamount.

      endloop.
    elseif kayıt_tipi = 'FG'.
      loop at gt_kayit_gos where  sozlesme_id  = gt_a-sozlesme_id and
                                 sozlesme_ver = gt_a-sozlesme_ver and
                                txt50 = 'Fatura Geri Çekme Kaydı'  and
                                 mark is initial.
        lv_geri_date = gt_kayit_gos-budat.
      endloop.
      check sy-subrc eq 0.
      if lv_monat is not initial and
        lv_gjahr is not initial.
        select * from /eczb/ufrs_t_016 into table lt_log
               where sozlesme_id eq gt_a-sozlesme_id
                 and sozlesme_ver eq gt_a-sozlesme_ver
                 and bukrs eq gt_a-bukrs
                 and kayit_turu eq kayit_turu
                 and gjahr eq lv_gjahr
                 and monat eq lv_monat.
        if sy-subrc ne 0.
          makro_messtab 'E' '/ECZB/UFRS16' '026'
                       'Fatura Geri Çekme Kaydı'
                       'Fatura Geri Çekme Kaydı' '' ''.
          continue.
        else.
          sort lt_log by belnr descending.
          read table lt_log index 1.
          if sy-subrc eq 0.
            if lt_log-belnr is not initial and lt_log-stblg is not
            initial.
              makro_messtab 'E' '/ECZB/UFRS16' '026'
                           'Fatura Geri Çekme Kaydı'
                           'Fatura Geri Çekme Kaydı' '' ''.
              continue.
            endif.
          endif.
        endif.
      endif.
      clear: documentheader.
      documentheader-bus_act    = 'RFBU'.
      documentheader-username   = sy-uname.
      documentheader-header_txt = 'UFRS16 Fatura Geri Çekme Kaydı'.
*      documentheader-doc_type   = 'UF'.
      documentheader-doc_type   = ls_019-blart.
      documentheader-comp_code  = gt_a-bukrs.
      documentheader-doc_date   = lv_geri_date.
      documentheader-pstng_date = sy-datum.
      documentheader-fisc_year  = gt_a-gjahr.
      documentheader-fis_period = gt_a-monat_ger.

      select single acc_principle from /eczb/ufrs_t_014 into
      documentheader-acc_principle
        where bukrs = gt_a-bukrs.

      clear:lv_count,currencyamount[],currencyamount,
            accountgl[],accountgl.

      loop at gt_kayit_gos where  sozlesme_id  = gt_a-sozlesme_id and
                                 sozlesme_ver = gt_a-sozlesme_ver and
                                 txt50 = 'Fatura Geri Çekme Kaydı'.
        lv_count = lv_count + 1.
        makro_gl lv_count gt_kayit_gos-hkont ls_02-txt50 ls_02-lifnr
                 ls_02-faiz_orani ls_02-plaka gt_a-monat_ger gt_a-gjahr
                 gt_kayit_gos-budat .
        accountgl-costcenter = gt_kayit_gos-kostl.
        accountgl-bus_area = gt_kayit_gos-gsber.
        append accountgl.clear accountgl.
        currencyamount-itemno_acc   = lv_count.
        currencyamount-currency     = gt_a-waers.
        currencyamount-currency_iso = gt_a-waers.
        currencyamount-amt_doccur = gt_kayit_gos-tutar.
        append currencyamount.clear currencyamount.

      endloop.

    endif.

    if documentheader-acc_principle is initial and
       documentheader-acc_principle ne '0L'.
      select single * from
        tacc_trgt_ldgr into ls_tacc_trgt_ldgr
        where acc_principle eq documentheader-acc_principle.

      if sy-subrc eq 0 and ls_tacc_trgt_ldgr-ldgrp_gl eq lv_ldgrp_gl.
      else.
        makro_messtab 'E' '/ECZB/UFRS16' '027'
                    '' '' '' ''.
        exit.
      endif.
    endif.

    call function 'BAPI_ACC_DOCUMENT_POST'
      exporting
        documentheader = documentheader
      importing
        obj_key        = obj_key
      tables
        accountgl      = accountgl
        currencyamount = currencyamount
        return         = lt_return.

    loop at lt_return where type ca 'EAX'.
    endloop.
    if sy-subrc ne 0 and obj_key <> '$'.
      call function 'BAPI_TRANSACTION_COMMIT'
        exporting
          wait = 'X'.
      case kayit_tipi.
        when 'FG'.
          loop at gt_kayit_gos where txt50 = 'Fatura Geri Çekme Kaydı'.
            gt_kayit_gos-belnr = obj_key(10).
            modify gt_kayit_gos.
          endloop.
        when 'OG'.
          loop at gt_kayit_gos where txt50 = 'Ödeme Geri Çekme Kaydı'.
            gt_kayit_gos-belnr = obj_key(10).
            modify gt_kayit_gos.
          endloop.
        when 'AC'.
          loop at gt_kayit_gos where txt50 = 'Açılış Kaydı'.
            gt_kayit_gos-belnr = obj_key(10).
            modify gt_kayit_gos.
          endloop.
        when 'FK'.
          loop at gt_kayit_gos where txt50 = 'Faiz Kaydı'.
            gt_kayit_gos-belnr = obj_key(10).
            modify gt_kayit_gos.
          endloop.
        when 'DK'.
          loop at gt_kayit_gos where txt50 = 'Dönemselleştirme Kaydı'.
            gt_kayit_gos-belnr = obj_key(10).
            modify gt_kayit_gos.
          endloop.
        when 'AK'.
          loop at gt_kayit_gos where txt50 = 'Amortisman Kaydı'.
            gt_kayit_gos-belnr = obj_key(10).
            modify gt_kayit_gos.
          endloop.
      endcase.
      clear:lt_log.
      move-corresponding gt_a to lt_log.
      lt_log-monat      = gt_a-monat_ger.
      lt_log-ernam      = sy-uname.
      lt_log-erdat      = sy-datum.
      lt_log-erzet      = sy-uzeit.
      lt_log-belnr      = obj_key(10).
      lt_log-kayit_turu = kayit_turu.

      modify /eczb/ufrs_t_016 from lt_log.
      if sy-subrc eq 0.
        commit work and wait.
      endif.

      move-corresponding gt_a to lt_012.
      lt_012-ernam      = sy-uname.
      lt_012-erdat      = sy-datum.
      lt_012-erzet      = sy-uzeit.
      lt_012-id         = '/ECZB/UFRS16'.
      lt_012-type       = 'S'.
      lt_012-num        = '021'.
      lt_012-message_v1 = obj_key(10).
      append lt_012.clear lt_012.

      makro_messtab 'S' '/ECZB/UFRS16' '021' obj_key(10) '' '' ''.

    else.
      call function 'BAPI_TRANSACTION_ROLLBACK'.
      loop at lt_return where type ca 'EAX'.
        makro_messtab lt_return-type lt_return-id lt_return-number
                    lt_return-message_v1 lt_return-message_v2
                    lt_return-message_v3 lt_return-message_v4.

        move-corresponding gt_a to lt_012.
        lt_012-ernam   = sy-uname.
        lt_012-erdat   = sy-datum.
        lt_012-erzet   = sy-uzeit.
        lt_012-id      = lt_return-id.
        lt_012-type    = lt_return-type.
        lt_012-num     = lt_return-number.
        lt_012-message = lt_return-message.
        append lt_012.clear lt_012.

      endloop.

    endif.
    if lt_012[] is not initial.
      select max( counter ) from /eczb/ufrs_t_012 into lv_counter.
      loop at lt_012.
        add 1 to lv_counter.
        lt_012-counter = lv_counter.
        modify lt_012.
      endloop.
      try.
          insert /eczb/ufrs_t_012 from table lt_012.
          if sy-subrc eq 0.
            commit work and wait.
          else.
            call function 'BAPI_TRANSACTION_ROLLBACK'.
          endif.
        catch cx_sy_open_sql_db.
      endtry.
    endif.
  endloop.
*  if tumu is initial.
*    if lt_messtab[] is not initial.
*      call function 'RHVM_SHOW_MESSAGE'
*        exporting
*          mess_header = 'Mesajlar'
*        tables
*          tem_message = lt_messtab
*        exceptions
*          canceled    = 1
*          others      = 2.
*    endif.
*  else.
*    loop at lt_messtab.
*      move-corresponding lt_messtab to gt_messtab.
*      append gt_messtab.clear gt_messtab.
*    endloop.
*  endif.

endform.                    " CREATE_FI_DOC
*&---------------------------------------------------------------------*
*&      Form  FI_CONTROL
*&---------------------------------------------------------------------*
form fi_control using kayit_turu kayit_tipi changing kontrol.
  data: line    type i,
*        ls_log  type /eczb/ufrs_t_016,
        lt_log  type table of /eczb/ufrs_t_016 with header line,
        ls_bkpf type bkpf.

  describe table gt_a lines line.

*  if line > 1.
*    message text-005 type 'S' display like 'E'.
*    kontrol = 'X'.
*    exit.
*  else.
*    clear:kontrol.
*  endif.
*
*  read table gt_a index 1.
*  check sy-subrc eq 0.

  read table lt_log index 1.
  loop at gt_a.
    select * from /eczb/ufrs_t_016 into table lt_log
        where sozlesme_id  eq gt_a-sozlesme_id
          and sozlesme_ver eq gt_a-sozlesme_ver
          and gjahr        eq gt_a-gjahr
          and monat        eq gt_a-monat_ger
          and bukrs        eq gt_a-bukrs
          and kayit_turu   eq kayit_turu.

    check  sy-subrc eq 0.
    sort lt_log by belnr descending.
    read table lt_log index 1.
    check sy-subrc eq 0.
    if rd_belnr = 'X'.

      if lt_log-belnr is not initial and lt_log-stblg is initial.
        select single * from bkpf into ls_bkpf
              where bukrs eq lt_log-bukrs
                and gjahr eq lt_log-gjahr
                and belnr eq lt_log-belnr.
        if sy-subrc eq 0.
          if ls_bkpf-stblg is not initial.
            lt_log-stblg = ls_bkpf-stblg.
            clear:kontrol.
            modify /eczb/ufrs_t_016 from lt_log.
            if sy-subrc eq 0.
              commit work and wait.
            endif.
          else.
            makro_messtab 'E' '/ECZB/UFRS16' '020'
                          gt_a-sozlesme_id gt_a-gjahr gt_a-monat_ger
                          lt_log-belnr.
            case kayit_tipi.
              when 'AC'.
                loop at gt_kayit_gos where sozlesme_id  =
                gt_a-sozlesme_id and
                                          sozlesme_ver =
                                          gt_a-sozlesme_ver and
                                           txt50 = 'Açılış Kaydı'.
                  gt_kayit_gos-mark = 'X'.
                  modify gt_kayit_gos.
                endloop.
              when 'FK'.
                loop at gt_kayit_gos where  sozlesme_id  =
                gt_a-sozlesme_id and
                                           sozlesme_ver =
                                           gt_a-sozlesme_ver and
                                           txt50 = 'Faiz Kaydı'.
                  gt_kayit_gos-mark = 'X'.
                  modify gt_kayit_gos.
                endloop.

              when 'AK'.
                loop at gt_kayit_gos where  sozlesme_id  =
                gt_a-sozlesme_id and
                                           sozlesme_ver =
                                           gt_a-sozlesme_ver and
                                           txt50 = 'Amortisman Kaydı'.
                  gt_kayit_gos-mark = 'X'.
                  modify gt_kayit_gos.
                endloop.
              when 'DK'.
                loop at gt_kayit_gos where  sozlesme_id  =
                gt_a-sozlesme_id and
                                           sozlesme_ver =
                                           gt_a-sozlesme_ver and
                                           txt50 =
                                           'Dönemselleştirme Kaydı'.
                  gt_kayit_gos-mark = 'X'.
                  modify gt_kayit_gos.
                endloop.
              when 'OG'.
                loop at gt_kayit_gos where  sozlesme_id  =
                gt_a-sozlesme_id and
                                           sozlesme_ver =
                                           gt_a-sozlesme_ver and
                                          txt50 =
                                          'Ödeme Geri Çekme Kaydı'.
                  gt_kayit_gos-mark = 'X'.
                  modify gt_kayit_gos.
                endloop.
              when 'FG'.
                loop at gt_kayit_gos where  sozlesme_id  =
                gt_a-sozlesme_id and
                                           sozlesme_ver =
                                           gt_a-sozlesme_ver and
                                          txt50 =
                                          'Fatura Geri Çekme Kaydı'.
                  gt_kayit_gos-mark = 'X'.
                  modify gt_kayit_gos.
                endloop.
            endcase.
*            kontrol = 'X'.
          endif.
        endif.
      endif.
    elseif rd_stblg = 'X'.
      if lt_log-belnr is not initial and lt_log-stblg is not initial.
        makro_messtab 'E' '/ECZB/UFRS16' '024'
                     gt_a-sozlesme_id lt_log-stblg '' ''.
        case kayit_tipi.
          when 'AC'.
            loop at gt_kayit_gos where sozlesme_id  = gt_a-sozlesme_id
            and
                                      sozlesme_ver = gt_a-sozlesme_ver
                                      and
                                       txt50 = 'Açılış Kaydı'.
              gt_kayit_gos-mark = 'X'.
              modify gt_kayit_gos.
            endloop.
          when 'FK'.
            loop at gt_kayit_gos where  sozlesme_id  = gt_a-sozlesme_id
            and
                                       sozlesme_ver = gt_a-sozlesme_ver
                                       and
                                       txt50 = 'Faiz Kaydı'.
              gt_kayit_gos-mark = 'X'.
              modify gt_kayit_gos.
            endloop.

          when 'AK'.
            loop at gt_kayit_gos where  sozlesme_id  = gt_a-sozlesme_id
            and
                                       sozlesme_ver = gt_a-sozlesme_ver
                                       and
                                       txt50 = 'Amortisman Kaydı'.
              gt_kayit_gos-mark = 'X'.
              modify gt_kayit_gos.
            endloop.
          when 'DK'.
            loop at gt_kayit_gos where  sozlesme_id  = gt_a-sozlesme_id
            and
                                       sozlesme_ver = gt_a-sozlesme_ver
                                       and
                                       txt50 = 'Dönemselleştirme Kaydı'.
              gt_kayit_gos-mark = 'X'.
              modify gt_kayit_gos.
            endloop.
          when 'OG'.
            loop at gt_kayit_gos where  sozlesme_id  = gt_a-sozlesme_id
            and
                                       sozlesme_ver = gt_a-sozlesme_ver
                                       and
                                      txt50 = 'Ödeme Geri Çekme Kaydı'.
              gt_kayit_gos-mark = 'X'.
              modify gt_kayit_gos.
            endloop.
          when 'FG'.
            loop at gt_kayit_gos where  sozlesme_id  = gt_a-sozlesme_id
            and
                                       sozlesme_ver = gt_a-sozlesme_ver
                                       and
                                      txt50 = 'Fatura Geri Çekme Kaydı'.
              gt_kayit_gos-mark = 'X'.
              modify gt_kayit_gos.
            endloop.
        endcase.
*        kontrol = 'X'.
      endif.
    endif.
  endloop.


endform.                    " FI_CONTROL
*&---------------------------------------------------------------------*
*&      Form  CREATE_FI_DOC_REV
*&---------------------------------------------------------------------*
form create_fi_doc_rev  using  kayit_tipi kayit_turu tumu.
  data: reversal  like bapiacrev ,
        bus_act like  bapiache09-bus_act value 'RFBU',
        obj_type  like  bapiacrev-obj_type,
        obj_key like  bapiacrev-obj_key,
        obj_sys like  bapiacrev-obj_sys,
        lt_return like table of bapiret2 with header line,
        lt_log   type table of /eczb/ufrs_t_016 with header line,
        lt_012   type table of /eczb/ufrs_t_012 with header line,
        lv_counter type /eczb/ufrs_t_012-counter,
        ls_bkpf type bkpf,
        lt_messtab        like bapiret2   occurs 0 with header line,
        lv_monat type monat,
        lv_gjahr type gjahr.

  define makro_mes.
    clear:lt_messtab.
    lt_messtab-type       = &1.
    lt_messtab-id         = &2.
    lt_messtab-number     = &3.
    lt_messtab-message    = &4.
    lt_messtab-message_v1 = &5.
    lt_messtab-message_v2 = &6.
    lt_messtab-message_v3 = &7.
    append lt_messtab.clear lt_messtab.
  end-of-definition.

*  read table gt_a index 1.
*  check sy-subrc eq 0.
  loop at gt_a.
    clear:lt_012[],lt_012.

    if gt_a-gec_bas(4)   eq gt_a-gjahr and
     gt_a-gec_bas+4(2) eq gt_a-monat_ger.
    else.
      if gt_a-monat_ger = '12'.
        lv_monat = '01'.
        lv_gjahr = gt_a-gjahr + 1.
      else.
        lv_monat = gt_a-monat_ger + 1.
        lv_gjahr = gt_a-gjahr.
      endif.
    endif.

    if lv_monat is not initial and
       lv_gjahr is not initial.

      select * from /eczb/ufrs_t_016 into table lt_log
           where sozlesme_id eq gt_a-sozlesme_id
             and sozlesme_ver eq gt_a-sozlesme_ver
             and bukrs eq gt_a-bukrs
             and kayit_turu eq kayit_turu
             and gjahr eq lv_gjahr
             and monat eq lv_monat.
      if sy-subrc ne 0.
      else.
        sort lt_log by belnr descending.
        read table lt_log index 1.
        if sy-subrc eq 0.
          if lt_log-belnr is not initial and lt_log-stblg is initial.
*        message text-009 type 'S' display like 'E'.
            makro_messtab 'E' '/ECZB/UFRS16' '019'
                         'Öncelikle' lv_monat lv_gjahr
                         'tarihine ters kayıt almalısınız.'.
            continue.
          endif.
        endif.
      endif.
    endif.

    select * from /eczb/ufrs_t_016 into table lt_log
    where sozlesme_id  eq gt_a-sozlesme_id
      and sozlesme_ver eq gt_a-sozlesme_ver
      and gjahr        eq gt_a-gjahr
      and monat        eq gt_a-monat_ger
      and bukrs        eq gt_a-bukrs
      and kayit_turu   eq kayit_turu.

    sort lt_log by belnr descending.
    read table lt_log index 1.
    check sy-subrc eq 0 and lt_log-gjahr is not initial and
                            lt_log-belnr is not initial and
                            lt_log-bukrs is not initial and
                            lt_log-stblg is initial.

    select single * from bkpf into ls_bkpf
        where bukrs eq lt_log-bukrs
          and belnr eq lt_log-belnr
          and gjahr eq lt_log-gjahr.
    check sy-subrc eq 0.
    clear:reversal.

    reversal-obj_type    = ls_bkpf-awtyp.
    reversal-obj_key     = ls_bkpf-awkey.
    reversal-obj_key_r   = ls_bkpf-awkey.
    reversal-reason_rev  = '01'.
*  reversal-pstng_date = sy-datum.

    call function 'BAPI_ACC_DOCUMENT_REV_POST'
      exporting
        reversal = reversal
        bus_act  = bus_act
      importing
        obj_type = obj_type
        obj_key  = obj_key
        obj_sys  = obj_sys
      tables
        return   = lt_return.

    loop at lt_return where type ca 'EAX'.
    endloop.
    if sy-subrc ne 0 and obj_key <> '$'.
      call function 'BAPI_TRANSACTION_COMMIT'
        exporting
          wait = 'X'.
      case kayit_tipi.
        when 'FG'.
          loop at gt_kayit_gos where txt50 = 'Fatura Geri Çekme Kaydı'.
            gt_kayit_gos-belnr = obj_key(10).
            modify gt_kayit_gos.
          endloop.
        when 'OG'.
          loop at gt_kayit_gos where txt50 = 'Ödeme Geri Çekme Kaydı'.
            gt_kayit_gos-belnr = obj_key(10).
            modify gt_kayit_gos.
          endloop.
        when 'AC'.
          loop at gt_kayit_gos where txt50 = 'Açılış Kaydı'.
            gt_kayit_gos-belnr = obj_key(10).
            modify gt_kayit_gos.
          endloop.
        when 'FK'.
          loop at gt_kayit_gos where txt50 = 'Faiz Kaydı'.
            gt_kayit_gos-belnr = obj_key(10).
            modify gt_kayit_gos.
          endloop.
        when 'DK'.
          loop at gt_kayit_gos where txt50 = 'Dönemselleştirme Kaydı'.
            gt_kayit_gos-belnr = obj_key(10).
            modify gt_kayit_gos.
          endloop.
        when 'AK'.
          loop at gt_kayit_gos where txt50 = 'Amortisman Kaydı'.
            gt_kayit_gos-belnr = obj_key(10).
            modify gt_kayit_gos.
          endloop.
      endcase.
*      clear:lt_log.
*      move-corresponding gt_a to ls_log.
*      ls_log-monat      = gt_a-monat_ger.
*      ls_log-ernam      = sy-uname.
*      ls_log-erdat      = sy-datum.
*      ls_log-erzet      = sy-uzeit.
      lt_log-stblg      = obj_key(10).
*      ls_log-kayit_turu = kayit_turu.

      modify /eczb/ufrs_t_016 from lt_log.
      if sy-subrc eq 0.
        commit work and wait.
      endif.

      move-corresponding gt_a to lt_012.
      lt_012-ernam      = sy-uname.
      lt_012-erdat      = sy-datum.
      lt_012-erzet      = sy-uzeit.
      lt_012-id         = '/ECZB/UFRS16'.
      lt_012-type       = 'S'.
      lt_012-num        = '021'.
      lt_012-message_v1 = obj_key(10).
      append lt_012.clear lt_012.

      makro_messtab 'S' '/ECZB/UFRS16' '021'
                  obj_key(10) '' '' ''.
    else.
      call function 'BAPI_TRANSACTION_ROLLBACK'.
      loop at lt_return where type ca 'EAX'.
        makro_messtab lt_return-type lt_return-id lt_return-number
                    lt_return-message_v1 lt_return-message_v2
                    lt_return-message_v3 lt_return-message_v4.

        move-corresponding gt_a to lt_012.
        lt_012-ernam   = sy-uname.
        lt_012-erdat   = sy-datum.
        lt_012-erzet   = sy-uzeit.
        lt_012-id      = lt_return-id.
        lt_012-type    = lt_return-type.
        lt_012-num     = lt_return-number.
        lt_012-message = lt_return-message.
        append lt_012.clear lt_012.

      endloop.

    endif.

    if lt_012[] is not initial.
      select max( counter ) from /eczb/ufrs_t_012 into lv_counter.
      loop at lt_012.
        add 1 to lv_counter.
        lt_012-counter = lv_counter.
        modify lt_012.
      endloop.
      try.
          insert /eczb/ufrs_t_012 from table lt_012.
          if sy-subrc eq 0.
            commit work and wait.
          else.
            call function 'BAPI_TRANSACTION_ROLLBACK'.
          endif.
        catch cx_sy_open_sql_db.
      endtry.
    endif.
  endloop.
*  if tumu is initial.
*    if lt_messtab[] is not initial.
*      call function 'RHVM_SHOW_MESSAGE'
*        exporting
*          mess_header = 'Mesajlar'
*        tables
*          tem_message = lt_messtab
*        exceptions
*          canceled    = 1
*          others      = 2.
*    endif.
*  else.
*    loop at lt_messtab.
*      move-corresponding lt_messtab to gt_messtab.
*      append gt_messtab.clear gt_messtab.
*    endloop.
*  endif.

endform.                    " CREATE_FI_DOC_REV
*&---------------------------------------------------------------------*
*&      Form  IPTAL_KAYDI
*&---------------------------------------------------------------------*
form iptal_kaydi .
  data: reversal  like bapiacrev ,
        bus_act like  bapiache09-bus_act value 'RFBU',
        obj_type  like  bapiacrev-obj_type,
        obj_key like  bapiacrev-obj_key,
        obj_sys like  bapiacrev-obj_sys,
        lt_return like table of bapiret2 with header line,
        lt_log   type table of /eczb/ufrs_t_016 with header line,
        lt_012   type table of /eczb/ufrs_t_012 with header line,
        lv_counter type /eczb/ufrs_t_012-counter,
        ls_bkpf type bkpf,
        lt_messtab        like bapiret2   occurs 0 with header line,
        ls_header type /eczb/ufrs_t_002,
        lv_answer,
        lv_question(100).

  define makro_mes.
    clear:lt_messtab.
    lt_messtab-type       = &1.
    lt_messtab-id         = &2.
    lt_messtab-number     = &3.
    lt_messtab-message    = &4.
    lt_messtab-message_v1 = &5.
    lt_messtab-message_v2 = &6.
    lt_messtab-message_v3 = &7.
    append lt_messtab.clear lt_messtab.
  end-of-definition.
*  read table gt_a index 1.
*  check sy-subrc eq 0.
  lv_question =
'Tablodaki tüm kalemlere iptal kaydı atmak istediğinize emin misiniz?'.
  call function 'POPUP_TO_CONFIRM'
    exporting
      titlebar       = 'SAP'
      text_question  = lv_question
      text_button_1  = 'Evet'
      text_button_2  = 'Hayır'
    importing
      answer         = lv_answer
    exceptions
      text_not_found = 1
      others         = 2.

  check lv_answer = '1'.

  loop at gt_a.
    clear:lt_012[],lt_012.
    select * from /eczb/ufrs_t_016 into table lt_log
        where sozlesme_id  eq gt_a-sozlesme_id
          and sozlesme_ver eq gt_a-sozlesme_ver.

    check sy-subrc eq 0.
    loop at lt_log where stblg is initial.

      select single * from bkpf into ls_bkpf
          where bukrs eq lt_log-bukrs
            and belnr eq lt_log-belnr
            and gjahr eq lt_log-gjahr.

      check sy-subrc eq 0.
      clear:reversal.

      reversal-obj_type   = ls_bkpf-awtyp.
      reversal-obj_key    = ls_bkpf-awkey.
      reversal-obj_key_r  = ls_bkpf-awkey.
      reversal-reason_rev = '01'.
*    reversal-pstng_date = sy-datum.

      call function 'BAPI_ACC_DOCUMENT_REV_POST'
        exporting
          reversal = reversal
          bus_act  = bus_act
        importing
          obj_type = obj_type
          obj_key  = obj_key
          obj_sys  = obj_sys
        tables
          return   = lt_return.

      loop at lt_return where type ca 'EAX'.
      endloop.
      if sy-subrc ne 0 and obj_key <> '$'.
        call function 'BAPI_TRANSACTION_COMMIT'
          exporting
            wait = 'X'.

        lt_log-stblg = obj_key(10).
        modify /eczb/ufrs_t_016 from lt_log.
        if sy-subrc eq 0.
          commit work and wait.
        endif.

        clear:ls_header.
        select single * from /eczb/ufrs_t_002 into ls_header
            where sozlesme_id  eq lt_log-sozlesme_id
              and sozlesme_ver eq lt_log-sozlesme_ver.

        move-corresponding ls_header to lt_012.
        lt_012-ernam      = sy-uname.
        lt_012-erdat      = sy-datum.
        lt_012-erzet      = sy-uzeit.
        lt_012-id         = '/ECZB/UFRS16'.
        lt_012-type       = 'S'.
        lt_012-num        = '021'.
        lt_012-message_v1 = obj_key(10).
        append lt_012.clear lt_012.

        makro_messtab 'S' '/ECZB/UFRS16' '021'
                     obj_key(10) '' '' ''.
      else.
        call function 'BAPI_TRANSACTION_ROLLBACK'.
        loop at lt_return where type ca 'EAX'.
*          makro_mes lt_return-type lt_return-id lt_return-number
*                    lt_return-message '' '' ''.
          makro_messtab lt_return-type lt_return-id lt_return-number
                      lt_return-message_v1 lt_return-message_v2
                      lt_return-message_v3 lt_return-message_v4.

          clear:ls_header.
          select single * from /eczb/ufrs_t_002 into ls_header
              where sozlesme_id  eq lt_log-sozlesme_id
                and sozlesme_ver eq lt_log-sozlesme_ver.
          move-corresponding ls_header to lt_012.
          lt_012-ernam   = sy-uname.
          lt_012-erdat   = sy-datum.
          lt_012-erzet   = sy-uzeit.
          lt_012-id      = lt_return-id.
          lt_012-type    = lt_return-type.
          lt_012-num     = lt_return-number.
          lt_012-message = lt_return-message.
          append lt_012.clear lt_012.

        endloop.
      endif.

      if lt_012[] is not initial.
        select max( counter ) from /eczb/ufrs_t_012 into lv_counter.
        loop at lt_012.
          add 1 to lv_counter.
          lt_012-counter = lv_counter.
          modify lt_012.
        endloop.
        try.
            insert /eczb/ufrs_t_012 from table lt_012.
            if sy-subrc eq 0.
              commit work and wait.
            else.
              call function 'BAPI_TRANSACTION_ROLLBACK'.
            endif.
          catch cx_sy_open_sql_db.
        endtry.
      endif.
    endloop.
  endloop.
  if gt_messtab[] is not initial.
    call function 'RHVM_SHOW_MESSAGE'
      exporting
        mess_header = 'Mesajlar'
      tables
        tem_message = gt_messtab
      exceptions
        canceled    = 1
        others      = 2.
  endif.

endform.                    " IPTAL_KAYDI
*&---------------------------------------------------------------------*
*&      Form  FESIH_KAYDI
*&---------------------------------------------------------------------*
form fesih_kaydi  using kayit_turu.
  data:lv_question(100),
       lv_answer.
  data: documentheader like bapiache09,
       accountgl      like bapiacgl09 occurs 0 with header line,
       currencyamount like bapiaccr09 occurs 0 with header line,
       lt_extension1     like bapiacextc occurs 0 with header line,
       lt_return         like bapiret2   occurs 0 with header line,
       lt_messtab        like bapiret2   occurs 0 with header line,
       obj_type like bapiache09-obj_type,
       obj_key  like bapiache09-obj_key,
       obj_sys  like bapiache09-obj_sys,
       lv_text  like bseg-sgtxt,
       lv_count type i,
       ls_06    type /eczb/ufrs_t_006,
       ls_02    type /eczb/ufrs_t_002,
       lv_value_date type bapiacgl09-value_date,
       ls_log   type /eczb/ufrs_t_016,
       lt_012   type table of /eczb/ufrs_t_012 with header line,
       lv_counter type /eczb/ufrs_t_012-counter,
       lv_last_day type datum,
       lv_monat type monat,
       lv_gjahr type gjahr,
       line    type i,
       lv_fesih_dat type datum,
       lt_item type table of /eczb/ufrs_t_011 with header line,
       lv_monat_soz type /eczb/ufrs_t_011-monat_soz,
       lv_tutar type bsis-dmbtr,
       lt_016 type table of /eczb/ufrs_t_016 with header line,
       lv_fark type bsis-dmbtr,
        ls_019 type /eczb/ufrs_t_019,
       ls_tacc_trgt_ldgr type tacc_trgt_ldgr,
       lv_ldgrp_gl type fagl_target_ldgrp value 'Z1'.

  define makro_gl2.

    accountgl-itemno_acc = &1.
    accountgl-gl_account = &2.
    accountgl-item_text  = &3.
    accountgl-ref_key_1  = &4.
    accountgl-ref_key_2  = &5.
    accountgl-ref_key_3  = &6.
    accountgl-fis_period = &7.
    accountgl-fisc_year  = &8.
    accountgl-pstng_date = &9.
    accountgl-value_date = sy-datum.
*    accountgl-value_date = &10.

  end-of-definition.
*  define makro_mes2.
*    clear:lt_messtab.
*    lt_messtab-type       = &1.
*    lt_messtab-id         = &2.
*    lt_messtab-number     = &3.
*    lt_messtab-message    = &4.
*    lt_messtab-message_v1 = &5.
*    lt_messtab-message_v2 = &6.
*    lt_messtab-message_v3 = &7.
*    append lt_messtab.clear lt_messtab.
*  end-of-definition.

  describe table gt_a lines line.

*  if line > 1.
*    message text-008 type 'S' display like 'E'.
*    exit.
*  else.

*    read table gt_a index 1.
*    check sy-subrc eq 0.
  lv_question =
'Tablodaki tüm kalemlere Fesih kaydı atmak istediğinize emin misiniz?'.
  concatenate lv_question 'Bu işlem geri alınamaz.'
         into lv_question separated by space.
  call function 'POPUP_TO_CONFIRM'
    exporting
      titlebar       = 'SAP'
      text_question  = lv_question
      text_button_1  = 'Evet'
      text_button_2  = 'Hayır'
    importing
      answer         = lv_answer
    exceptions
      text_not_found = 1
      others         = 2.

  check lv_answer = '1'.

  loop at gt_a.
*
    clear:ls_019.
    select single * from /eczb/ufrs_t_019 into ls_019
          where bukrs eq gt_a-bukrs.

    clear:ls_02,lt_item[],lt_item.
    select single * from /eczb/ufrs_t_002 into ls_02
          where sozlesme_id  = gt_a-sozlesme_id
            and sozlesme_ver = gt_a-sozlesme_ver
            and bukrs        = gt_a-bukrs.

    select * from /eczb/ufrs_t_011 into table lt_item
          where sozlesme_id  = gt_a-sozlesme_id
            and sozlesme_ver = gt_a-sozlesme_ver
            and bukrs        = gt_a-bukrs.


    clear: documentheader,lv_count,lv_fesih_dat,ls_06.

    select single * from /eczb/ufrs_t_006 into ls_06
        where sozlesme_id = gt_a-sozlesme_id.
*
*    lv_fesih_dat(4)   = gt_a-gjahr.
*    lv_fesih_dat+4(2) = gt_a-monat_ger.
*    lv_fesih_dat+6(2) = '01'.

    lv_fesih_dat = ls_02-fesih_tarihi.

    documentheader-bus_act    = 'RFBU'.
    documentheader-username   = sy-uname.
    documentheader-header_txt = 'Sözleşme Fesih'.
*    documentheader-doc_type   = 'UF'.
    documentheader-doc_type   = ls_019-blart.
    documentheader-comp_code  = gt_a-bukrs.
    documentheader-doc_date   = lv_fesih_dat.
    documentheader-pstng_date = lv_fesih_dat.
    documentheader-fisc_year  = gt_a-gjahr.
    documentheader-fis_period = gt_a-monat_ger.

    select single acc_principle from /eczb/ufrs_t_014 into
    documentheader-acc_principle
      where bukrs = gt_a-bukrs.

    clear:lv_count,currencyamount[],currencyamount,
          accountgl[],accountgl,lv_tutar,lv_fark.

    concatenate gt_a-sozlesme_id 'feshi' into
                                      lv_text separated by space.
    loop at gt_kayit_gos where txt50 = 'Fesih Kaydı'.

      lv_count = lv_count + 1.

      makro_gl2 lv_count gt_kayit_gos-hkont lv_text ls_02-lifnr
             ls_02-faiz_orani ls_02-plaka '' ''
              lv_fesih_dat.
      if gt_kayit_gos-kostl is not initial.
        accountgl-costcenter = gt_kayit_gos-kostl.
      endif.
      accountgl-bus_area = gt_kayit_gos-gsber.
      append accountgl.clear accountgl.

      currencyamount-itemno_acc   = lv_count.
      currencyamount-currency     = gt_a-waers.
      currencyamount-currency_iso = gt_a-waers.
*  currencyamount-curr_type = '00'.
      currencyamount-amt_doccur = gt_kayit_gos-tutar.
      append currencyamount.clear currencyamount.

    endloop.

    if documentheader-acc_principle is initial and
       documentheader-acc_principle ne '0L'.
      select single * from
        tacc_trgt_ldgr into ls_tacc_trgt_ldgr
        where acc_principle eq documentheader-acc_principle.

      if sy-subrc eq 0 and ls_tacc_trgt_ldgr-ldgrp_gl eq lv_ldgrp_gl.
      else.
        makro_messtab 'E' '/ECZB/UFRS16' '027'
                    '' '' '' ''.
        exit.
      endif.
    endif.

    call function 'BAPI_ACC_DOCUMENT_POST'
      exporting
        documentheader = documentheader
      importing
        obj_key        = obj_key
      tables
        accountgl      = accountgl
        currencyamount = currencyamount
        return         = lt_return.

    loop at lt_return where type ca 'EAX'.
    endloop.
    if sy-subrc ne 0 and obj_key <> '$'.
      call function 'BAPI_TRANSACTION_COMMIT'
        exporting
          wait = 'X'.

      clear:ls_log.
      move-corresponding gt_a to ls_log.
      ls_log-monat      = gt_a-monat_ger.
      ls_log-ernam      = sy-uname.
      ls_log-erdat      = sy-datum.
      ls_log-erzet      = sy-uzeit.
      ls_log-belnr      = obj_key(10).
      ls_log-kayit_turu = kayit_turu.

      modify /eczb/ufrs_t_016 from ls_log.
      if sy-subrc eq 0.
        commit work and wait.
      endif.

      move-corresponding gt_a to lt_012.
      lt_012-ernam      = sy-uname.
      lt_012-erdat      = sy-datum.
      lt_012-erzet      = sy-uzeit.
      lt_012-id         = '/ECZB/UFRS16'.
      lt_012-type       = 'S'.
      lt_012-num        = '021'.
      lt_012-message_v1 = obj_key(10).
      append lt_012.clear lt_012.

      makro_messtab 'S' '/ECZB/UFRS16' '021'
                   obj_key(10) '' '' ''.

    else.
      call function 'BAPI_TRANSACTION_ROLLBACK'.
      loop at lt_return where type ca 'EAX'.
        makro_messtab lt_return-type lt_return-id lt_return-number
                    lt_return-message_v1 lt_return-message_v2
                    lt_return-message_v3 lt_return-message_v4.

        move-corresponding gt_a to lt_012.
        lt_012-ernam   = sy-uname.
        lt_012-erdat   = sy-datum.
        lt_012-erzet   = sy-uzeit.
        lt_012-id      = lt_return-id.
        lt_012-type    = lt_return-type.
        lt_012-num     = lt_return-number.
        lt_012-message = lt_return-message.
        append lt_012.clear lt_012.

      endloop.

    endif.
    if lt_012[] is not initial.
      select max( counter ) from /eczb/ufrs_t_012 into lv_counter.
      loop at lt_012.
        add 1 to lv_counter.
        lt_012-counter = lv_counter.
        modify lt_012.
      endloop.
      try.
          insert /eczb/ufrs_t_012 from table lt_012.
          if sy-subrc eq 0.
            commit work and wait.
          else.
            call function 'BAPI_TRANSACTION_ROLLBACK'.
          endif.
        catch cx_sy_open_sql_db.
      endtry.
    endif.

    if gt_messtab[] is not initial.
      call function 'RHVM_SHOW_MESSAGE'
        exporting
          mess_header = 'Mesajlar'
        tables
          tem_message = gt_messtab
        exceptions
          canceled    = 1
          others      = 2.
    endif.

  endloop.
*  endif.

endform.                    " FESIH_KAYDI
*&---------------------------------------------------------------------*
*&      Form  CHECK_AUTH
*&---------------------------------------------------------------------*
form check_auth  changing kontrol.
  data:ls_09 type /eczb/ufrs_t_009.

  select single * from /eczb/ufrs_t_009 into ls_09
    where uname     = sy-uname
      and bukrs     = p_bukrs
      and save_02   = 'X'.
  if sy-subrc ne 0.
    message s030(/eczb/ufrs16) display like 'E'.
    kontrol = 'X'.
  else.
    clear kontrol.
  endif.
endform.                    " CHECK_AUTH